//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Thu 19-Dec-96 by the VDM-SLtoC++ Code Generator
// (vdmde - v3.0l - Fri 13-Dec-96)
//
// Supported compiler: g++ version 2.7.2
//



#include "AS.h"

Bool vdm_AS_inv__Document(Sequence vdm_AS_d) {
  Bool varRes_3;
  {
    Bool var1_4;
    bool tmpQuant_6 = false;
    {
      Sequence seq_lv_9;
      bool succ_7;
      Bool tsucc_10;
      tsucc_10 = true;
      {
        Set tmpVar_v_8;
        tmpVar_v_8 = vdm_AS_d.Elems();
{ seq_lv_9.ImpAppend(tmpVar_v_8); }
      }
      Set allComb_11 = GenAllComb(seq_lv_9);
      Bool pred_17;
      Record vdm_AS_x;
      Generic tmpe_22;
      for (int bb_21 = allComb_11.First(tmpe_22); bb_21 && !tmpQuant_6; bb_21 = allComb_11.Next(tmpe_22)) {
        Sequence tmp_18 = tmpe_22;
        {
          if (succ_7 = 1 == (Int) (tmp_18.Length())) {
            Record permI_20;
            permI_20 = (Record) (tmp_18.Hd());
            succ_7 = true;
            vdm_AS_x = permI_20;
          }
          if (succ_7) {
            Record argTmp_19;
            argTmp_19 = vdm_AS_x;
            if (argTmp_19.IsRecord()) 
              pred_17 = vdm_AS_Definitions == argTmp_19.GetTag();
            else 
              pred_17 = false;
            if (pred_17.GetValue()) 
              tmpQuant_6 = true;
          }
        }
      }
    }
    var1_4 = (Bool) tmpQuant_6;
    if (var1_4.GetValue()) { varRes_3 = (Bool) ((Int) (vdm_AS_d.Length()) == (Int) 1); }
    else 
      varRes_3 = (Bool) true;
  }
  return varRes_3;
}

Bool vdm_AS_inv__ImplImportSig(Record vdm_AS_imp) {
  Bool varRes_3;
  {
    bool tmpQuant_4 = true;
    {
      Sequence seq_lv_7;
      bool succ_5;
      Bool tsucc_8;
      tsucc_8 = true;
      {
        Set tmpVar_v_6;
        {
          Map unArg_10;
          Record tmpRec_11(vdm_AS_ImplImportSig, length_AS_ImplImportSig);
          tmpRec_11 = vdm_AS_imp;
          if (tmpRec_11.Is(vdm_AS_ImplImportSig)) 
            unArg_10 = tmpRec_11.GetField(pos_AS_ImplImportSig_tps);
          else 
            RunTime("Unknown record field selector");
          tmpVar_v_6 = unArg_10.Rng();
        }
{ seq_lv_7.ImpAppend(tmpVar_v_6); }
      }
      Set allComb_9 = GenAllComb(seq_lv_7);
      Bool pred_16;
      Generic vdm_AS_impsig;
      Generic tmpe_22;
      for (int bb_21 = allComb_9.First(tmpe_22); bb_21 && tmpQuant_4; bb_21 = allComb_9.Next(tmpe_22)) {
        Sequence tmp_17 = tmpe_22;
        {
          if (succ_5 = 1 == (Int) (tmp_17.Length())) {
            Generic permI_20;
            permI_20 = (Generic) (tmp_17.Hd());
            succ_5 = true;
            vdm_AS_impsig = permI_20;
          }
          if (succ_5) { if (((Bool) (vdm_AS_impsig == Nil())).GetValue()) {}
 else 
   tmpQuant_4 = false; }
        }
      }
    }
    varRes_3 = (Bool) tmpQuant_4;
  }
  return varRes_3;
}

Bool vdm_AS_inv__NumLit(Record var_1_1) {
  Bool varRes_3;
  Real vdm_AS_v;
  bool succ_2 = true;
  {
    succ_2 = false;
    if (var_1_1.IsRecord()) 
      if (vdm_AS_RealLit == var_1_1.GetTag()) {
        Sequence e_l_5;
        for (int i_6 = 1; i_6 <= var_1_1.Length(); i_6++) 
          e_l_5.ImpAppend(var_1_1.GetField(i_6));
        if (succ_2 = 1 == (Int) (e_l_5.Length())) {
          Real permI_7;
          permI_7 = (Real) (e_l_5.Hd());
          succ_2 = true;
          vdm_AS_v = permI_7;
        }
      }
  }
  if (!succ_2) 
    RunTime("Pattern Match in Function Apply in function : inv__NumLit failed");
  else {
    Real argTmp_4;
    argTmp_4 = vdm_AS_v;
    varRes_3 = (Bool) (IsInteger(argTmp_4));
  }
  return varRes_3;
}

void init_AS() {}
