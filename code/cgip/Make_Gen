#!/bin/bash -x
# Purpose of this shell script :
#       To generate automatically a document on the compilation of the generated code of the code generator.
#

LATEXHEAD=.head
LATEXBODYWARNINGS=.body.warns
LATEXBODYERRORS=.body.errs
ERROR_FILE=err
RESULT=result.tex
FSH=`basename $0`

NBWAR=0
NBERR=0
TIME_TOT=0


########################
# Usage of the command #
########################
usage()
{
  echo >&2
  echo "Usage: $FSH [-M makefile]" >&2
  echo >&2
  echo "       Run the make on each module given in the Makefile and creates"
  echo "       automatically a documentation on the results of the compilation." >&2
  echo >&2
  echo "       -M       Name of the Makefile to use (Makefile in the current directory by default)." >&2
  echo >&2
  echo "       Example: $FSH -L makefile.old " >&2
  echo >&2
  exit
}

######################################################################
# Changes the name given in argument when this one has an underscore #
#   (LaTeX doesn't like underscores without '\' before)              #
######################################################################
ch_name()
{
  MODULE_NAME=`perl -e '$s = $ARGV[0]; $s =~ s/_/\\\\_/g; print $s ' $1`
}


##############################################
# Generation of the head of the LaTeX Script #
##############################################
echo "Generating the head of the Latex script."
echo "Generating the head of the Latex script." > trace

############
# PREAMBLE #
############
echo "\documentclass{article}" > $LATEXHEAD
echo "\usepackage{vdmsl-2e,longtable$VDMSLOPTIONS$PPOPTIONS}" >> $LATEXHEAD
echo "\usepackage{color} \usepackage{makeidx}" >> $LATEXHEAD

echo "% a4 style" >> $LATEXHEAD
echo "\oddsidemargin -0.4mm \evensidemargin -0.4mm" >> $LATEXHEAD
echo "\topmargin -10.4mm \headheight 5mm \headsep 8mm" >> $LATEXHEAD
echo "\textheight 230mm \textwidth 160mm" >> $LATEXHEAD
echo "\parindent0mm" >> $LATEXHEAD
echo "\makeindex" >> $LATEXHEAD

############
# DOCUMENT #
############
echo "\begin{document}" >> $LATEXHEAD
echo "\title{Compilation of the Generated Code of the Code Generator}" >> $LATEXHEAD
echo "\author{Kyushu University}" >> $LATEXHEAD
echo "\maketitle" >> $LATEXHEAD
echo "\vspace{3cm} This document has been automatically generated by the Code Generator Test Environment.
      These are the results of the compilation of the generated code of the Code Generator. In the table
      below are listed the number of warnings and errors found during the compilation. The time of compilation
      is also given in the fourth colonn.\\\\ 

      
      This document is composed of two sections. The first section lists the errors found in the module one
      by one. The second section gives the warnings for each of the modules. If none of warnings or errors
      are found, these sections would be empty.
       \\\\" >> $LATEXHEAD

echo "\begin{center}
      \begin{tabular}{|l|c|c|c|}
      \hline
      Modules & Warnings & Errors & Compilation time\\\\ \hline" >> $LATEXHEAD

TOBUILD=`grep "## Module" MAKEFILE | awk '{print $3}'`

echo "\section*{Errors}" > $LATEXBODYERRORS
echo "\section*{Warnings}" > $LATEXBODYWARNINGS


if [ "$TOBUILD" = "" ] ; then
        echo "Nothing to compile in this directory"
else
        for i in $TOBUILD; do
                # We use the Makefile on each module and store the warnings and error messages
                time make -f MAKEFILE $i.o >&$ERROR_FILE
                WARNINGS=`grep -c warning $ERROR_FILE`
                ERRORS=`grep -c Error $ERROR_FILE`
                NBWAR=`expr $NBWAR + $WARNINGS`
                NBERR=`expr $NBERR + $ERRORS`
                TIME=`egrep "[0-9]+.[0-9]+ real[ ]+[0-9]+.[0-9]+ user[ ]+[0-9]+.[0-9]+ sys" $ERROR_FILE | awk '{print $5}'`

                ch_name $i

                if [ $ERRORS != 0 ] ; then
                        echo "\subsection*{Module $MODULE_NAME}" >> $LATEXBODYERRORS                        
                        echo "{\footnotesize \begin{verbatim}" >> $LATEXBODYERRORS
                        egrep "($MODULE_NAME|warning)" $ERROR_FILE >> $LATEXBODYERRORS
                        echo "\end{verbatim}}" >> $LATEXBODYERRORS
                        ERRORS="{\bf $ERRORS}"
                        if [ $WARNINGS != 0 ] ; then
                                WARNINGS="{\bf $WARNINGS}"
                        fi

                else
                        if [ $WARNINGS != 0 ] ; then
                                echo "\subsection*{Module $MODULE_NAME}" >> $LATEXBODYWARNINGS
                                echo "{\footnotesize \begin{verbatim}" >> $LATEXBODYWARNINGS
                                egrep "warning" $ERROR_FILE >> $LATEXBODYWARNINGS
                                echo "\end{verbatim}}" >> $LATEXBODYWARNINGS
                                WARNINGS="{\bf $WARNINGS}"
                        fi
                fi

                echo "\hline {\it $MODULE_NAME} & $WARNINGS & $ERRORS & $TIME\\\\" >> $LATEXHEAD                

                TIME=`perl -e '$s = $ARGV[0]; $s =~ s/\.//g; print $s ' $TIME`
                TIME_TOT=`expr $TIME_TOT + $TIME`

         done
fi
TIME1=`expr $TIME_TOT / 10`
TIME2=`expr $TIME_TOT % 10` 

echo " \hline \hline {\bf \it TOTAL} & {\bf $NBWAR} & {\bf $NBERR} & {\bf $TIME1.$TIME2} \\\\" >> $LATEXHEAD
echo "  \hline  \end{tabular} \end{center}" >> $LATEXHEAD



if [ "$NBWAR" != "0" ] ; then
        if [ "$NBERR" != "0" ] ; then
                cat $LATEXHEAD $LATEXBODYERRORS $LATEXBODYWARNINGS  > $RESULT
        else
                cat $LATEXHEAD $LATEXBODYWARNINGS  > $RESULT
        fi
else
        if [ "$NBERR" != "0" ] ; then
                cat $LATEXHEAD $LATEXBODYERRORS  > $RESULT
        fi
fi


echo "\end{document}" >> $RESULT


rm -f $LATEXHEAD
rm -f $LATEXBODYWARNINGS
rm -f $LATEXBODYERRORS
rm -f $ERROR_FILE

