//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Thu 25-Mar-99 by the VDM-SLtoC++ Code Generator
// (v3.3 - Mon 22-Mar-99)
//
// Supported compilers:
// 	egcs version 1.1 on SunOS4, SunOS5, Linux, HP-UX10
// 	VC++ version 6.0 on Windows95, Windows NT
//



#include "TYPE2REP.h"

void init_TYPE2REP_VDMLib() {
  VDMGetDefaultRecInfoMap().NewTag(TOKEN, 1);
  VDMGetDefaultRecInfoMap().SetSymTag(TOKEN, "token");
}
#ifdef DEF_TYPE2REP_USERIMPL

#include "TYPE2REP_userimpl.cc"

#endif


void init_TYPE2REP() { init_TYPE2REP_VDMLib(); }
#ifndef DEF_TYPE2REP_FlattenUnion

type_FS vdm_TYPE2REP_FlattenUnion(const type_FS &vdm_TYPE2REP_tps) {
  Set varRes_3;
  Set unArg_4;
  Set res_s_5;
  {
    bool succ_16 = true;

    Record vdm_TYPE2REP_tp;
    {
      Generic tmpe_20;
      for (int bb_19 = vdm_TYPE2REP_tps.First(tmpe_20); bb_19; bb_19 = vdm_TYPE2REP_tps.Next(tmpe_20)) {
        Record elem_18 = tmpe_20;
        succ_16 = true;        vdm_TYPE2REP_tp = elem_18;        if (succ_16) {
          Set res_s_6;
          Bool cond_8;
          if (vdm_TYPE2REP_tp.IsRecord()) 
            cond_8 = vdm_REP_UnionTypeRep == vdm_TYPE2REP_tp.GetTag();
          else 
            cond_8 = false;
          if (cond_8.GetValue()) {
            bool succ_11;
            Record tmpVal_12;
            tmpVal_12 = vdm_TYPE2REP_tp;
            Set vdm_TYPE2REP_t_us;
            succ_11 = true;
            if (tmpVal_12.IsRecord() && vdm_REP_UnionTypeRep == ((Record) tmpVal_12).GetTag()) {
              Sequence e_l_13;
              for (int i_14 = 1; i_14 <= ((Record) tmpVal_12).Length(); i_14++) 
                e_l_13.ImpAppend(((Record) tmpVal_12).GetField(i_14));
              if (succ_11 = 1 == (Int) e_l_13.Length()) 
                vdm_TYPE2REP_t_us = (Set) e_l_13.Hd();
            }
            else 
              succ_11 = false;
            if (!succ_11) 
              RunTime("Pattern match did not succeed in value definition");
            res_s_6 = vdm_TYPE2REP_FlattenUnion((Generic) vdm_TYPE2REP_t_us);
          }
          else 
            res_s_6 = Set().Insert(vdm_TYPE2REP_tp);
          res_s_5.Insert(res_s_6);
        }
      }
    }
  }
  unArg_4 = res_s_5;
  Set rduset_21;  Generic tmpe_24;  for (int bb_23 = unArg_4.First(tmpe_24); bb_23; bb_23 = unArg_4.Next(tmpe_24)) {
    Set e_22 = tmpe_24;
    rduset_21.ImpUnion(e_22);
  }  varRes_3 = rduset_21;
  return (Generic) varRes_3;
}
#endif

#ifndef DEF_TYPE2REP_TransFields

type_12REP_FieldRepCL vdm_TYPE2REP_TransFields(const type_8AS_FieldCL &vdm_TYPE2REP_f_ul) {
  Sequence varRes_3;
  {
    Sequence res_l_4;
    Set resBind_s_6;
    Set riseq_10;
    int max_11 = (Int) vdm_TYPE2REP_f_ul.Length();
    for (int i_12 = 1; i_12 <= max_11; i_12++) 
      riseq_10.Insert((Int) i_12);
    resBind_s_6 = riseq_10;
    Sequence bind_l_5;
    if ((Int) resBind_s_6.Card() != (Int) 0) 
      bind_l_5 = Sort(resBind_s_6);
    bool succ_7 = true;
    Int vdm_TYPE2REP_i;
    Generic tmpe_28;
    for (int i_27 = bind_l_5.First(tmpe_28); i_27; i_27 = bind_l_5.Next(tmpe_28)) {
      Int e_8 = tmpe_28;
      vdm_TYPE2REP_i = e_8;
      if (succ_7) {
        Record reselem_13(vdm_REP_FieldRep, length_REP_FieldRep);
        reselem_13 = Record(vdm_REP_FieldRep, length_REP_FieldRep);
        Generic tmpVar_14;
        if (((Record) vdm_TYPE2REP_f_ul[vdm_TYPE2REP_i.GetValue()]).Is(vdm_AS_Field)) 
          tmpVar_14 = ((Record) vdm_TYPE2REP_f_ul[vdm_TYPE2REP_i.GetValue()]).GetField(pos_AS_Field_sel);
        else 
          RunTime("Unknown record field selector");
        reselem_13.SetField(1, tmpVar_14);
        Record tmpVar_18;
        Record par_19;
        if (((Record) vdm_TYPE2REP_f_ul[vdm_TYPE2REP_i.GetValue()]).Is(vdm_AS_Field)) 
          par_19 = ((Record) vdm_TYPE2REP_f_ul[vdm_TYPE2REP_i.GetValue()]).GetField(pos_AS_Field_type);
        else 
          RunTime("Unknown record field selector");
        tmpVar_18 = vdm_TYPE2REP_TransType((Generic) par_19);
        reselem_13.SetField(2, tmpVar_18);
        Bool tmpVar_23;
        if (((Record) vdm_TYPE2REP_f_ul[vdm_TYPE2REP_i.GetValue()]).Is(vdm_AS_Field)) 
          tmpVar_23 = ((Record) vdm_TYPE2REP_f_ul[vdm_TYPE2REP_i.GetValue()]).GetField(pos_AS_Field_dc);
        else 
          RunTime("Unknown record field selector");
        reselem_13.SetField(3, tmpVar_23);
        res_l_4.ImpAppend(reselem_13);
      }
    }
    varRes_3 = res_l_4;
  }
  return (Generic) varRes_3;
}
#endif

#ifndef DEF_TYPE2REP_TransType

TYPE_REP_TypeRep vdm_TYPE2REP_TransType(const TYPE_AS_Type &vdm_TYPE2REP_tp) {
  Record varRes_3;
  Record succ_6 = vdm_TYPE2REP_tp;
  bool succ_4 = true;
  {
    Generic vdm_TYPE2REP_t;
    succ_4 = true;
    if (succ_6.IsRecord() && vdm_AS_BasicType == ((Record) succ_6).GetTag()) {
      Sequence e_l_7;
      for (int i_8 = 1; i_8 <= ((Record) succ_6).Length(); i_8++) 
        e_l_7.ImpAppend(((Record) succ_6).GetField(i_8));
      if (succ_4 = 2 == (Int) e_l_7.Length()) 
        vdm_TYPE2REP_t = (Generic) e_l_7.Hd();
    }
    else 
      succ_4 = false;
    if (succ_4) {
      varRes_3 = Record(vdm_REP_BasicTypeRep, length_REP_BasicTypeRep);
      varRes_3.SetField(1, vdm_TYPE2REP_t);
    }
  }
  if (!succ_4) {
    Sequence vdm_TYPE2REP_nm;
    succ_4 = true;
    if (succ_6.IsRecord() && vdm_AS_QuoteType == ((Record) succ_6).GetTag()) {
      Sequence e_l_10;
      for (int i_11 = 1; i_11 <= ((Record) succ_6).Length(); i_11++) 
        e_l_10.ImpAppend(((Record) succ_6).GetField(i_11));
      if (succ_4 = 2 == (Int) e_l_10.Length()) {
        succ_4 = true;
        if (((Generic) e_l_10.Hd()).IsRecord() && vdm_AS_QuoteLit == ((Record) (Generic) e_l_10.Hd()).GetTag()) {
          Sequence e_l_12;
          for (int i_13 = 1; i_13 <= ((Record) (Generic) e_l_10.Hd()).Length(); i_13++) 
            e_l_12.ImpAppend(((Record) (Generic) e_l_10.Hd()).GetField(i_13));
          if (succ_4 = 2 == (Int) e_l_12.Length()) 
            vdm_TYPE2REP_nm = (Generic) e_l_12.Hd();
        }
        else 
          succ_4 = false;
        if (succ_4) {}
      }
    }
    else 
      succ_4 = false;
    if (succ_4) {
      varRes_3 = Record(vdm_REP_QuoteTypeRep, length_REP_QuoteTypeRep);
      Record tmpVar_14(vdm_AS_Name, length_AS_Name);
      tmpVar_14 = Record(vdm_AS_Name, length_AS_Name);
      Sequence tmpVar_15;
      tmpVar_15 = Sequence().ImpAppend(vdm_TYPE2REP_nm);
      tmpVar_14.SetField(1, tmpVar_15);
      tmpVar_14.SetField(2, vdm_CI_NilContextId);
      varRes_3.SetField(1, tmpVar_14);
    }
  }
  if (!succ_4) {
    Record vdm_TYPE2REP_nm(vdm_AS_Name, length_AS_Name);
    succ_4 = true;
    if (succ_6.IsRecord() && vdm_AS_TypeName == ((Record) succ_6).GetTag()) {
      Sequence e_l_18;
      for (int i_19 = 1; i_19 <= ((Record) succ_6).Length(); i_19++) 
        e_l_18.ImpAppend(((Record) succ_6).GetField(i_19));
      if (succ_4 = 2 == (Int) e_l_18.Length()) 
        vdm_TYPE2REP_nm = (Generic) e_l_18.Hd();
    }
    else 
      succ_4 = false;
    if (succ_4) {
      varRes_3 = Record(vdm_REP_TypeNameRep, length_REP_TypeNameRep);
      varRes_3.SetField(1, vdm_TYPE2REP_nm);
    }
  }
  if (!succ_4) {
    Record vdm_TYPE2REP_nm(vdm_AS_Name, length_AS_Name);
    succ_4 = true;
    if (succ_6.IsRecord() && vdm_AS_TypeVar == ((Record) succ_6).GetTag()) {
      Sequence e_l_21;
      for (int i_22 = 1; i_22 <= ((Record) succ_6).Length(); i_22++) 
        e_l_21.ImpAppend(((Record) succ_6).GetField(i_22));
      if (succ_4 = 2 == (Int) e_l_21.Length()) 
        vdm_TYPE2REP_nm = (Generic) e_l_21.Hd();
    }
    else 
      succ_4 = false;
    if (succ_4) {
      varRes_3 = Record(vdm_REP_TypeVarRep, length_REP_TypeVarRep);
      varRes_3.SetField(1, vdm_TYPE2REP_nm);
    }
  }
  if (!succ_4) {
    Sequence vdm_TYPE2REP_fields;
    Record vdm_TYPE2REP_tag(vdm_AS_Name, length_AS_Name);
    succ_4 = true;
    if (succ_6.IsRecord() && vdm_AS_CompositeType == ((Record) succ_6).GetTag()) {
      Sequence e_l_24;
      for (int i_25 = 1; i_25 <= ((Record) succ_6).Length(); i_25++) 
        e_l_24.ImpAppend(((Record) succ_6).GetField(i_25));
      if (succ_4 = 3 == (Int) e_l_24.Length()) {
        vdm_TYPE2REP_tag = (Generic) e_l_24.Hd();
        vdm_TYPE2REP_fields = (Generic) e_l_24[2];
      }
    }
    else 
      succ_4 = false;
    if (succ_4) {
      varRes_3 = Record(vdm_REP_CompositeTypeRep, length_REP_CompositeTypeRep);
      varRes_3.SetField(1, vdm_TYPE2REP_tag);
      varRes_3.SetField(2, vdm_TYPE2REP_TransFields((Generic) vdm_TYPE2REP_fields));
    }
  }
  if (!succ_4) {
    Sequence vdm_TYPE2REP_tplst;
    succ_4 = true;
    if (succ_6.IsRecord() && vdm_AS_UnionType == ((Record) succ_6).GetTag()) {
      Sequence e_l_29;
      for (int i_30 = 1; i_30 <= ((Record) succ_6).Length(); i_30++) 
        e_l_29.ImpAppend(((Record) succ_6).GetField(i_30));
      if (succ_4 = 2 == (Int) e_l_29.Length()) 
        vdm_TYPE2REP_tplst = (Generic) e_l_29.Hd();
    }
    else 
      succ_4 = false;
    if (succ_4) {
      varRes_3 = Record(vdm_REP_UnionTypeRep, length_REP_UnionTypeRep);
      Set tmpVar_31;
      Set par_32;
      Set res_s_33;
      {
        bool succ_36 = true;
        Set e1_set_39 = vdm_TYPE2REP_tplst.Elems();
        Record vdm_TYPE2REP_tp;
        {
          Generic tmpe_42;
          for (int bb_41 = e1_set_39.First(tmpe_42); bb_41; bb_41 = e1_set_39.Next(tmpe_42)) {
            Record elem_40 = tmpe_42;
            succ_36 = true;            vdm_TYPE2REP_tp = elem_40;            if (succ_36) { res_s_33.Insert(vdm_TYPE2REP_TransType((Generic) vdm_TYPE2REP_tp)); }
          }
        }
      }
      par_32 = res_s_33;
      tmpVar_31 = vdm_TYPE2REP_FlattenUnion((Generic) par_32);
      varRes_3.SetField(1, tmpVar_31);
    }
  }
  if (!succ_4) {
    Sequence vdm_TYPE2REP_tplst;
    succ_4 = true;
    if (succ_6.IsRecord() && vdm_AS_ProductType == ((Record) succ_6).GetTag()) {
      Sequence e_l_43;
      for (int i_44 = 1; i_44 <= ((Record) succ_6).Length(); i_44++) 
        e_l_43.ImpAppend(((Record) succ_6).GetField(i_44));
      if (succ_4 = 2 == (Int) e_l_43.Length()) 
        vdm_TYPE2REP_tplst = (Generic) e_l_43.Hd();
    }
    else 
      succ_4 = false;
    if (succ_4) {
      varRes_3 = Record(vdm_REP_ProductTypeRep, length_REP_ProductTypeRep);
      Sequence tmpVar_45;
      {
        Sequence res_l_46;
        Set resBind_s_48;
        Set riseq_52;
        int max_53 = (Int) vdm_TYPE2REP_tplst.Length();
        for (int i_54 = 1; i_54 <= max_53; i_54++) 
          riseq_52.Insert((Int) i_54);
        resBind_s_48 = riseq_52;
        Sequence bind_l_47;
        if ((Int) resBind_s_48.Card() != (Int) 0) 
          bind_l_47 = Sort(resBind_s_48);
        bool succ_49 = true;
        Int vdm_TYPE2REP_i;
        Generic tmpe_60;
        for (int i_59 = bind_l_47.First(tmpe_60); i_59; i_59 = bind_l_47.Next(tmpe_60)) {
          Int e_50 = tmpe_60;
          vdm_TYPE2REP_i = e_50;
          if (succ_49) 
            res_l_46.ImpAppend(vdm_TYPE2REP_TransType((Generic) (Record) vdm_TYPE2REP_tplst[vdm_TYPE2REP_i.GetValue()]));
        }
        tmpVar_45 = res_l_46;
      }
      varRes_3.SetField(1, tmpVar_45);
    }
  }
  if (!succ_4) {
    Record vdm_TYPE2REP_type;
    succ_4 = true;
    if (succ_6.IsRecord() && vdm_AS_BracketedType == ((Record) succ_6).GetTag()) {
      Sequence e_l_61;
      for (int i_62 = 1; i_62 <= ((Record) succ_6).Length(); i_62++) 
        e_l_61.ImpAppend(((Record) succ_6).GetField(i_62));
      if (succ_4 = 2 == (Int) e_l_61.Length()) 
        vdm_TYPE2REP_type = (Generic) e_l_61.Hd();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = vdm_TYPE2REP_TransType((Generic) vdm_TYPE2REP_type);
  }
  if (!succ_4) {
    Record vdm_TYPE2REP_type;
    succ_4 = true;
    if (succ_6.IsRecord() && vdm_AS_OptionalType == ((Record) succ_6).GetTag()) {
      Sequence e_l_64;
      for (int i_65 = 1; i_65 <= ((Record) succ_6).Length(); i_65++) 
        e_l_64.ImpAppend(((Record) succ_6).GetField(i_65));
      if (succ_4 = 2 == (Int) e_l_64.Length()) 
        vdm_TYPE2REP_type = (Generic) e_l_64.Hd();
    }
    else 
      succ_4 = false;
    if (succ_4) {
      varRes_3 = Record(vdm_REP_UnionTypeRep, length_REP_UnionTypeRep);
      Set tmpVar_66;
      Set par_67;
      par_67 = Set().Insert(Record(vdm_REP_NilTypeRep, length_REP_NilTypeRep));
      par_67.Insert(vdm_TYPE2REP_TransType((Generic) vdm_TYPE2REP_type));
      tmpVar_66 = vdm_TYPE2REP_FlattenUnion((Generic) par_67);
      varRes_3.SetField(1, tmpVar_66);
    }
  }
  if (!succ_4) {
    Record vdm_TYPE2REP_type;
    succ_4 = true;
    if (succ_6.IsRecord() && vdm_AS_SetType == ((Record) succ_6).GetTag()) {
      Sequence e_l_71;
      for (int i_72 = 1; i_72 <= ((Record) succ_6).Length(); i_72++) 
        e_l_71.ImpAppend(((Record) succ_6).GetField(i_72));
      if (succ_4 = 2 == (Int) e_l_71.Length()) 
        vdm_TYPE2REP_type = (Generic) e_l_71.Hd();
    }
    else 
      succ_4 = false;
    if (succ_4) {
      varRes_3 = Record(vdm_REP_UnionTypeRep, length_REP_UnionTypeRep);
      Set tmpVar_73;
      tmpVar_73 = Set().Insert(Record(vdm_REP_EmptySetTypeRep, length_REP_EmptySetTypeRep));
      Record enum_set_75(vdm_REP_SetTypeRep, length_REP_SetTypeRep);
      enum_set_75 = Record(vdm_REP_SetTypeRep, length_REP_SetTypeRep);
      enum_set_75.SetField(1, vdm_TYPE2REP_TransType((Generic) vdm_TYPE2REP_type));
      tmpVar_73.Insert(enum_set_75);
      varRes_3.SetField(1, tmpVar_73);
    }
  }
  if (!succ_4) {
    Record vdm_TYPE2REP_type;
    succ_4 = true;
    if (succ_6.IsRecord() && vdm_AS_Seq0Type == ((Record) succ_6).GetTag()) {
      Sequence e_l_78;
      for (int i_79 = 1; i_79 <= ((Record) succ_6).Length(); i_79++) 
        e_l_78.ImpAppend(((Record) succ_6).GetField(i_79));
      if (succ_4 = 2 == (Int) e_l_78.Length()) 
        vdm_TYPE2REP_type = (Generic) e_l_78.Hd();
    }
    else 
      succ_4 = false;
    if (succ_4) {
      varRes_3 = Record(vdm_REP_UnionTypeRep, length_REP_UnionTypeRep);
      Set tmpVar_80;
      tmpVar_80 = Set().Insert(Record(vdm_REP_EmptySeqTypeRep, length_REP_EmptySeqTypeRep));
      Record enum_set_82(vdm_REP_SeqTypeRep, length_REP_SeqTypeRep);
      enum_set_82 = Record(vdm_REP_SeqTypeRep, length_REP_SeqTypeRep);
      enum_set_82.SetField(1, vdm_TYPE2REP_TransType((Generic) vdm_TYPE2REP_type));
      tmpVar_80.Insert(enum_set_82);
      varRes_3.SetField(1, tmpVar_80);
    }
  }
  if (!succ_4) {
    Record vdm_TYPE2REP_type;
    succ_4 = true;
    if (succ_6.IsRecord() && vdm_AS_Seq1Type == ((Record) succ_6).GetTag()) {
      Sequence e_l_85;
      for (int i_86 = 1; i_86 <= ((Record) succ_6).Length(); i_86++) 
        e_l_85.ImpAppend(((Record) succ_6).GetField(i_86));
      if (succ_4 = 2 == (Int) e_l_85.Length()) 
        vdm_TYPE2REP_type = (Generic) e_l_85.Hd();
    }
    else 
      succ_4 = false;
    if (succ_4) {
      varRes_3 = Record(vdm_REP_SeqTypeRep, length_REP_SeqTypeRep);
      varRes_3.SetField(1, vdm_TYPE2REP_TransType((Generic) vdm_TYPE2REP_type));
    }
  }
  if (!succ_4) {
    Record vdm_TYPE2REP_d;
    Record vdm_TYPE2REP_r;
    succ_4 = true;
    if (succ_6.IsRecord() && vdm_AS_GeneralMapType == ((Record) succ_6).GetTag()) {
      Sequence e_l_89;
      for (int i_90 = 1; i_90 <= ((Record) succ_6).Length(); i_90++) 
        e_l_89.ImpAppend(((Record) succ_6).GetField(i_90));
      if (succ_4 = 3 == (Int) e_l_89.Length()) {
        vdm_TYPE2REP_d = (Generic) e_l_89.Hd();
        vdm_TYPE2REP_r = (Generic) e_l_89[2];
      }
    }
    else 
      succ_4 = false;
    if (succ_4) {
      varRes_3 = Record(vdm_REP_UnionTypeRep, length_REP_UnionTypeRep);
      Set tmpVar_91;
      tmpVar_91 = Set().Insert(Record(vdm_REP_EmptyMapTypeRep, length_REP_EmptyMapTypeRep));
      Record enum_set_93(vdm_REP_GeneralMapTypeRep, length_REP_GeneralMapTypeRep);
      enum_set_93 = Record(vdm_REP_GeneralMapTypeRep, length_REP_GeneralMapTypeRep);
      enum_set_93.SetField(1, vdm_TYPE2REP_TransType((Generic) vdm_TYPE2REP_d));
      enum_set_93.SetField(2, vdm_TYPE2REP_TransType((Generic) vdm_TYPE2REP_r));
      tmpVar_91.Insert(enum_set_93);
      varRes_3.SetField(1, tmpVar_91);
    }
  }
  if (!succ_4) {
    Record vdm_TYPE2REP_d;
    Record vdm_TYPE2REP_r;
    succ_4 = true;
    if (succ_6.IsRecord() && vdm_AS_InjectiveMapType == ((Record) succ_6).GetTag()) {
      Sequence e_l_98;
      for (int i_99 = 1; i_99 <= ((Record) succ_6).Length(); i_99++) 
        e_l_98.ImpAppend(((Record) succ_6).GetField(i_99));
      if (succ_4 = 3 == (Int) e_l_98.Length()) {
        vdm_TYPE2REP_d = (Generic) e_l_98.Hd();
        vdm_TYPE2REP_r = (Generic) e_l_98[2];
      }
    }
    else 
      succ_4 = false;
    if (succ_4) {
      varRes_3 = Record(vdm_REP_UnionTypeRep, length_REP_UnionTypeRep);
      Set tmpVar_100;
      tmpVar_100 = Set().Insert(Record(vdm_REP_EmptyMapTypeRep, length_REP_EmptyMapTypeRep));
      Record enum_set_102(vdm_REP_InjectiveMapTypeRep, length_REP_InjectiveMapTypeRep);
      enum_set_102 = Record(vdm_REP_InjectiveMapTypeRep, length_REP_InjectiveMapTypeRep);
      enum_set_102.SetField(1, vdm_TYPE2REP_TransType((Generic) vdm_TYPE2REP_d));
      enum_set_102.SetField(2, vdm_TYPE2REP_TransType((Generic) vdm_TYPE2REP_r));
      tmpVar_100.Insert(enum_set_102);
      varRes_3.SetField(1, tmpVar_100);
    }
  }
  if (!succ_4) {
    Sequence vdm_TYPE2REP_d;
    Generic vdm_TYPE2REP_r;
    succ_4 = true;
    if (succ_6.IsRecord() && vdm_AS_OpType == ((Record) succ_6).GetTag()) {
      Sequence e_l_107;
      for (int i_108 = 1; i_108 <= ((Record) succ_6).Length(); i_108++) 
        e_l_107.ImpAppend(((Record) succ_6).GetField(i_108));
      if (succ_4 = 3 == (Int) e_l_107.Length()) {
        vdm_TYPE2REP_d = (Generic) e_l_107.Hd();
        vdm_TYPE2REP_r = (Generic) e_l_107[2];
      }
    }
    else 
      succ_4 = false;
    if (succ_4) {
      varRes_3 = Record(vdm_REP_OpTypeRep, length_REP_OpTypeRep);
      varRes_3.SetField(1, vdm_TYPE2REP_TransTypeList((Generic) vdm_TYPE2REP_d));
      Record tmpVar_111;
      if (((Bool) (vdm_TYPE2REP_r == Nil())).GetValue()) 
        tmpVar_111 = Record(vdm_REP_UnitTypeRep, length_REP_UnitTypeRep);
      else 
        tmpVar_111 = vdm_TYPE2REP_TransType((Generic) vdm_TYPE2REP_r);
      varRes_3.SetField(2, tmpVar_111);
    }
  }
  if (!succ_4) {
    Record vdm_TYPE2REP_tp;
    Sequence vdm_TYPE2REP_tplst;
    succ_4 = true;
    if (succ_6.IsRecord() && vdm_AS_PartialFnType == ((Record) succ_6).GetTag()) {
      Sequence e_l_117;
      for (int i_118 = 1; i_118 <= ((Record) succ_6).Length(); i_118++) 
        e_l_117.ImpAppend(((Record) succ_6).GetField(i_118));
      if (succ_4 = 3 == (Int) e_l_117.Length()) {
        vdm_TYPE2REP_tplst = (Generic) e_l_117.Hd();
        vdm_TYPE2REP_tp = (Generic) e_l_117[2];
      }
    }
    else 
      succ_4 = false;
    if (succ_4) {
      varRes_3 = Record(vdm_REP_PartialFnTypeRep, length_REP_PartialFnTypeRep);
      Sequence tmpVar_119;
      {
        Sequence res_l_120;
        Set resBind_s_122;
        Set riseq_126;
        int max_127 = (Int) vdm_TYPE2REP_tplst.Length();
        for (int i_128 = 1; i_128 <= max_127; i_128++) 
          riseq_126.Insert((Int) i_128);
        resBind_s_122 = riseq_126;
        Sequence bind_l_121;
        if ((Int) resBind_s_122.Card() != (Int) 0) 
          bind_l_121 = Sort(resBind_s_122);
        bool succ_123 = true;
        Int vdm_TYPE2REP_i;
        Generic tmpe_134;
        for (int i_133 = bind_l_121.First(tmpe_134); i_133; i_133 = bind_l_121.Next(tmpe_134)) {
          Int e_124 = tmpe_134;
          vdm_TYPE2REP_i = e_124;
          if (succ_123) 
            res_l_120.ImpAppend(vdm_TYPE2REP_TransType((Generic) (Record) vdm_TYPE2REP_tplst[vdm_TYPE2REP_i.GetValue()]));
        }
        tmpVar_119 = res_l_120;
      }
      varRes_3.SetField(1, tmpVar_119);
      varRes_3.SetField(2, vdm_TYPE2REP_TransType((Generic) vdm_TYPE2REP_tp));
    }
  }
  if (!succ_4) {
    Record vdm_TYPE2REP_tp;
    Sequence vdm_TYPE2REP_tplst;
    succ_4 = true;
    if (succ_6.IsRecord() && vdm_AS_TotalFnType == ((Record) succ_6).GetTag()) {
      Sequence e_l_137;
      for (int i_138 = 1; i_138 <= ((Record) succ_6).Length(); i_138++) 
        e_l_137.ImpAppend(((Record) succ_6).GetField(i_138));
      if (succ_4 = 3 == (Int) e_l_137.Length()) {
        vdm_TYPE2REP_tplst = (Generic) e_l_137.Hd();
        vdm_TYPE2REP_tp = (Generic) e_l_137[2];
      }
    }
    else 
      succ_4 = false;
    if (succ_4) {
      varRes_3 = Record(vdm_REP_TotalFnTypeRep, length_REP_TotalFnTypeRep);
      Sequence tmpVar_139;
      {
        Sequence res_l_140;
        Set resBind_s_142;
        Set riseq_146;
        int max_147 = (Int) vdm_TYPE2REP_tplst.Length();
        for (int i_148 = 1; i_148 <= max_147; i_148++) 
          riseq_146.Insert((Int) i_148);
        resBind_s_142 = riseq_146;
        Sequence bind_l_141;
        if ((Int) resBind_s_142.Card() != (Int) 0) 
          bind_l_141 = Sort(resBind_s_142);
        bool succ_143 = true;
        Int vdm_TYPE2REP_i;
        Generic tmpe_154;
        for (int i_153 = bind_l_141.First(tmpe_154); i_153; i_153 = bind_l_141.Next(tmpe_154)) {
          Int e_144 = tmpe_154;
          vdm_TYPE2REP_i = e_144;
          if (succ_143) 
            res_l_140.ImpAppend(vdm_TYPE2REP_TransType((Generic) (Record) vdm_TYPE2REP_tplst[vdm_TYPE2REP_i.GetValue()]));
        }
        tmpVar_139 = res_l_140;
      }
      varRes_3.SetField(1, tmpVar_139);
      varRes_3.SetField(2, vdm_TYPE2REP_TransType((Generic) vdm_TYPE2REP_tp));
    }
  }
  if (!succ_4) 
    RunTime("No \'others\' branch in CasesExpr");
  return (Generic) varRes_3;
}
#endif

#ifndef DEF_TYPE2REP_TransTypeList

type_FL vdm_TYPE2REP_TransTypeList(const type_FL &vdm_TYPE2REP_tplst) {
  Sequence varRes_3;
  {
    Sequence res_l_4;
    Set resBind_s_6;
    Set riseq_10;
    int max_11 = (Int) vdm_TYPE2REP_tplst.Length();
    for (int i_12 = 1; i_12 <= max_11; i_12++) 
      riseq_10.Insert((Int) i_12);
    resBind_s_6 = riseq_10;
    Sequence bind_l_5;
    if ((Int) resBind_s_6.Card() != (Int) 0) 
      bind_l_5 = Sort(resBind_s_6);
    bool succ_7 = true;
    Int vdm_TYPE2REP_i;
    Generic tmpe_18;
    for (int i_17 = bind_l_5.First(tmpe_18); i_17; i_17 = bind_l_5.Next(tmpe_18)) {
      Int e_8 = tmpe_18;
      vdm_TYPE2REP_i = e_8;
      if (succ_7) 
        res_l_4.ImpAppend(vdm_TYPE2REP_TransType((Generic) (Record) vdm_TYPE2REP_tplst[vdm_TYPE2REP_i.GetValue()]));
    }
    varRes_3 = res_l_4;
  }
  return (Generic) varRes_3;
}
#endif

