//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Mon 05-Jul-99 by the VDM-SLtoC++ Code Generator
// (v3.3 - Mon 22-Mar-99)
//
// Supported compilers:
// 	egcs version 1.1 on SunOS4, SunOS5, Linux, HP-UX10
// 	VC++ version 6.0 on Windows95, Windows NT
//



#include "CHECK_userdef.h"
#include "metaiv.h"
#include "CHECK.h"
#include "AS.h"
#include "CAST.h"
#include "CI.h"
#include "CI_uAUX.h"
#include "FRESH.h"
#include "GEN_uINV.h"
#include "GEN_uPO.h"
#include "POGTP.h"
#include "PURE_uPAT.h"
#include "REP.h"
#include "REP2TYPE.h"
#include "TYPE2REP.h"
#if !DEF_quote_Func && DECL_quote_Func
#define DEF_quote_Func 1
const Quote quote_Func("Func");
#endif

#if !DEF_quote_Map && DECL_quote_Map
#define DEF_quote_Map 1
const Quote quote_Map("Map");
#endif

#if !DEF_quote_MapFunc && DECL_quote_MapFunc
#define DEF_quote_MapFunc 1
const Quote quote_MapFunc("MapFunc");
#endif

#if !DEF_quote_Num && DECL_quote_Num
#define DEF_quote_Num 1
const Quote quote_Num("Num");
#endif

#if !DEF_quote_NumFunc && DECL_quote_NumFunc
#define DEF_quote_NumFunc 1
const Quote quote_NumFunc("NumFunc");
#endif

#if !DEF_quote_NumMap && DECL_quote_NumMap
#define DEF_quote_NumMap 1
const Quote quote_NumMap("NumMap");
#endif

#if !DEF_quote_NumMapFunc && DECL_quote_NumMapFunc
#define DEF_quote_NumMapFunc 1
const Quote quote_NumMapFunc("NumMapFunc");
#endif

#if !DEF_quote_Other && DECL_quote_Other
#define DEF_quote_Other 1
const Quote quote_Other("Other");
#endif

#if !DEF_quote_Seq && DECL_quote_Seq
#define DEF_quote_Seq 1
const Quote quote_Seq("Seq");
#endif

#if !DEF_quote_SeqFunc && DECL_quote_SeqFunc
#define DEF_quote_SeqFunc 1
const Quote quote_SeqFunc("SeqFunc");
#endif

#if !DEF_quote_SeqMap && DECL_quote_SeqMap
#define DEF_quote_SeqMap 1
const Quote quote_SeqMap("SeqMap");
#endif

#if !DEF_quote_SeqMapFunc && DECL_quote_SeqMapFunc
#define DEF_quote_SeqMapFunc 1
const Quote quote_SeqMapFunc("SeqMapFunc");
#endif

#if !DEF_quote_Set && DECL_quote_Set
#define DEF_quote_Set 1
const Quote quote_Set("Set");
#endif

#if !DEF_quote_NO_OVERLAP && DECL_quote_NO_OVERLAP
#define DEF_quote_NO_OVERLAP 1
const Quote quote_NO_OVERLAP("NO_OVERLAP");
#endif

#if !DEF_type_15REP_TypeNameRepC15REP_TypeNameRepC2P && DECL_type_15REP_TypeNameRepC15REP_TypeNameRepC2P
#define DEF_type_15REP_TypeNameRepC15REP_TypeNameRepC2P 1

void type_15REP_TypeNameRepC15REP_TypeNameRepC2P::Init(TYPE_REP_TypeNameRep p1, TYPE_REP_TypeNameRep p2) {
  SetField(1, p1);
  SetField(2, p2);
}

TYPE_REP_TypeNameRep type_15REP_TypeNameRepC15REP_TypeNameRepC2P::get_1() const { return (TYPE_REP_TypeNameRep) GetField(1); }

void type_15REP_TypeNameRepC15REP_TypeNameRepC2P::set_1(const TYPE_REP_TypeNameRep &p) { SetField(1, p); }

TYPE_REP_TypeNameRep type_15REP_TypeNameRepC15REP_TypeNameRepC2P::get_2() const { return (TYPE_REP_TypeNameRep) GetField(2); }

void type_15REP_TypeNameRepC15REP_TypeNameRepC2P::set_2(const TYPE_REP_TypeNameRep &p) { SetField(2, p); }
#endif

