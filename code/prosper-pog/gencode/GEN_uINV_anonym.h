//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Thu 25-Mar-99 by the VDM-SLtoC++ Code Generator
// (v3.3 - Mon 22-Mar-99)
//
// Supported compilers:
// 	egcs version 1.1 on SunOS4, SunOS5, Linux, HP-UX10
// 	VC++ version 6.0 on Windows95, Windows NT
//

#ifndef _GEN_uINV_anonym_h
#define _GEN_uINV_anonym_h

#include "GEN_uINV_userdef.h"
#include "metaiv.h"
class type_7AS_NameC7AS_NameC2P;
class type_7AS_NameC7AS_NameC2PS;
class type_7AS_NameCS;
class type_21POGTP_ProofObligationCL;
class type_8AS_FieldCL;
class type_FL;
#ifndef TAG_type_7AS_NameC7AS_NameC2P
#define TAG_type_7AS_NameC7AS_NameC2P (TAG_GEN_uINV + 1)
#endif

#ifndef TAG_type_7AS_NameC7AS_NameC2PS
#define TAG_type_7AS_NameC7AS_NameC2PS (TAG_GEN_uINV + 2)
#endif

#ifndef TAG_type_7AS_NameCS
#define TAG_type_7AS_NameCS (TAG_GEN_uINV + 3)
#endif

#ifndef TAG_type_21POGTP_ProofObligationCL
#define TAG_type_21POGTP_ProofObligationCL (TAG_GEN_uINV + 4)
#endif

#ifndef TAG_type_8AS_FieldCL
#define TAG_type_8AS_FieldCL (TAG_GEN_uINV + 5)
#endif

#ifndef TAG_type_FL
#define TAG_type_FL (TAG_GEN_uINV + 6)
#endif


#include "AS_anonym.h"
#include "CHECK_anonym.h"
#include "CI_anonym.h"
#include "CI_uAUX_anonym.h"
#include "FRESH_anonym.h"
#include "GEN_uPO_anonym.h"
#include "POGTP_anonym.h"
#include "REP_anonym.h"
#ifndef DECL_type_7AS_NameC7AS_NameC2P
#define DECL_type_7AS_NameC7AS_NameC2P 1

class type_7AS_NameC7AS_NameC2P : public Tuple {
public:

  type_7AS_NameC7AS_NameC2P() : Tuple(2) {}
  void Init(TYPE_AS_Name p2, TYPE_AS_Name p3);

  type_7AS_NameC7AS_NameC2P(const Generic &c) : Tuple(c) {}

  const char * GetTypeName() const { return "type_7AS_NameC7AS_NameC2P"; }
  TYPE_AS_Name get_1() const;
  void set_1(const TYPE_AS_Name &p);
  TYPE_AS_Name get_2() const;
  void set_2(const TYPE_AS_Name &p);
} ;
#endif

#ifndef DECL_type_7AS_NameC7AS_NameC2PS
#define DECL_type_7AS_NameC7AS_NameC2PS 1

class type_7AS_NameC7AS_NameC2PS : public SET<type_7AS_NameC7AS_NameC2P> {
public:

  type_7AS_NameC7AS_NameC2PS() : SET<type_7AS_NameC7AS_NameC2P>() {}

  type_7AS_NameC7AS_NameC2PS(const SET<type_7AS_NameC7AS_NameC2P> &c) : SET<type_7AS_NameC7AS_NameC2P>(c) {}

  type_7AS_NameC7AS_NameC2PS(const Generic &c) : SET<type_7AS_NameC7AS_NameC2P>(c) {}

  const char * GetTypeName() const { return "type_7AS_NameC7AS_NameC2PS"; }
} ;
#endif

#ifndef DECL_type_7AS_NameCS
#define DECL_type_7AS_NameCS 1

class type_7AS_NameCS : public SET<TYPE_AS_Name> {
public:

  type_7AS_NameCS() : SET<TYPE_AS_Name>() {}

  type_7AS_NameCS(const SET<TYPE_AS_Name> &c) : SET<TYPE_AS_Name>(c) {}

  type_7AS_NameCS(const Generic &c) : SET<TYPE_AS_Name>(c) {}

  const char * GetTypeName() const { return "type_7AS_NameCS"; }
} ;
#endif

#ifndef DECL_type_21POGTP_ProofObligationCL
#define DECL_type_21POGTP_ProofObligationCL 1

class type_21POGTP_ProofObligationCL : public SEQ<TYPE_POGTP_ProofObligation> {
public:

  type_21POGTP_ProofObligationCL() : SEQ<TYPE_POGTP_ProofObligation>() {}

  type_21POGTP_ProofObligationCL(const SEQ<TYPE_POGTP_ProofObligation> &c) : SEQ<TYPE_POGTP_ProofObligation>(c) {}

  type_21POGTP_ProofObligationCL(const Generic &c) : SEQ<TYPE_POGTP_ProofObligation>(c) {}

  const char * GetTypeName() const { return "type_21POGTP_ProofObligationCL"; }
} ;
#endif

#ifndef DECL_type_8AS_FieldCL
#define DECL_type_8AS_FieldCL 1

class type_8AS_FieldCL : public SEQ<TYPE_AS_Field> {
public:

  type_8AS_FieldCL() : SEQ<TYPE_AS_Field>() {}

  type_8AS_FieldCL(const SEQ<TYPE_AS_Field> &c) : SEQ<TYPE_AS_Field>(c) {}

  type_8AS_FieldCL(const Generic &c) : SEQ<TYPE_AS_Field>(c) {}

  const char * GetTypeName() const { return "type_8AS_FieldCL"; }
} ;
#endif

#ifndef DECL_type_FL
#define DECL_type_FL 1

class type_FL : public SEQ<Generic> {
public:

  type_FL() : SEQ<Generic>() {}

  type_FL(const SEQ<Generic> &c) : SEQ<Generic>(c) {}

  type_FL(const Generic &c) : SEQ<Generic>(c) {}

  const char * GetTypeName() const { return "type_FL"; }
} ;
#endif


#endif

