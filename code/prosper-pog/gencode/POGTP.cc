//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Thu 25-Mar-99 by the VDM-SLtoC++ Code Generator
// (v3.3 - Mon 22-Mar-99)
//
// Supported compilers:
// 	egcs version 1.1 on SunOS4, SunOS5, Linux, HP-UX10
// 	VC++ version 6.0 on Windows95, Windows NT
//



#include "POGTP.h"

void TYPE_POGTP_Context::Init(TYPE_POGTP_LocContext p1, type_FL p2) {
  SetField(1, p1);
  SetField(2, p2);
}

TYPE_POGTP_LocContext TYPE_POGTP_Context::get_loc() const { return (TYPE_POGTP_LocContext) GetField(1); }

void TYPE_POGTP_Context::set_loc(const TYPE_POGTP_LocContext &p) { SetField(1, p); }

type_FL TYPE_POGTP_Context::get_expr() const { return (type_FL) GetField(2); }

void TYPE_POGTP_Context::set_expr(const type_FL &p) { SetField(2, p); }

void TYPE_POGTP_LocContext::Init(TYPE_POGTP_LocClassification p1, TYPE_AS_Name p2) {
  SetField(1, p1);
  SetField(2, p2);
}

TYPE_POGTP_LocClassification TYPE_POGTP_LocContext::get_class() const { return (TYPE_POGTP_LocClassification) GetField(1); }

void TYPE_POGTP_LocContext::set_class(const TYPE_POGTP_LocClassification &p) { SetField(1, p); }

TYPE_AS_Name TYPE_POGTP_LocContext::get_name() const { return (TYPE_AS_Name) GetField(2); }

void TYPE_POGTP_LocContext::set_name(const TYPE_AS_Name &p) { SetField(2, p); }

void TYPE_POGTP_ProofObligation::Init(Int p1, TYPE_AS_Expr p2, TYPE_POGTP_Classification p3, type_7AS_NameCL p4, TYPE_POGTP_LocContext p5, TYPE_CI_ContextId p6) {
  SetField(1, p1);
  SetField(2, p2);
  SetField(3, p3);
  SetField(4, p4);
  SetField(5, p5);
  SetField(6, p6);
}

Int TYPE_POGTP_ProofObligation::get_no() const { return (Int) GetField(1); }

void TYPE_POGTP_ProofObligation::set_no(const Int &p) { SetField(1, p); }

TYPE_AS_Expr TYPE_POGTP_ProofObligation::get_po() const { return (TYPE_AS_Expr) GetField(2); }

void TYPE_POGTP_ProofObligation::set_po(const TYPE_AS_Expr &p) { SetField(2, p); }

TYPE_POGTP_Classification TYPE_POGTP_ProofObligation::get_kind() const { return (TYPE_POGTP_Classification) GetField(3); }

void TYPE_POGTP_ProofObligation::set_kind(const TYPE_POGTP_Classification &p) { SetField(3, p); }

type_7AS_NameCL TYPE_POGTP_ProofObligation::get_source() const { return (type_7AS_NameCL) GetField(4); }

void TYPE_POGTP_ProofObligation::set_source(const type_7AS_NameCL &p) { SetField(4, p); }

TYPE_POGTP_LocContext TYPE_POGTP_ProofObligation::get_loc() const { return (TYPE_POGTP_LocContext) GetField(5); }

void TYPE_POGTP_ProofObligation::set_loc(const TYPE_POGTP_LocContext &p) { SetField(5, p); }

TYPE_CI_ContextId TYPE_POGTP_ProofObligation::get_cid() const { return (TYPE_CI_ContextId) GetField(6); }

void TYPE_POGTP_ProofObligation::set_cid(const TYPE_CI_ContextId &p) { SetField(6, p); }

void init_POGTP_VDMLib() {
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_POGTP_Context, 2);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_POGTP_Context, "POGTP`Context");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_POGTP_LocContext, 2);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_POGTP_LocContext, "POGTP`LocContext");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_POGTP_ProofObligation, 6);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_POGTP_ProofObligation, "POGTP`ProofObligation");
  VDMGetDefaultRecInfoMap().NewTag(TOKEN, 1);
  VDMGetDefaultRecInfoMap().SetSymTag(TOKEN, "token");
}
#ifdef DEF_POGTP_USERIMPL

#include "POGTP_userimpl.cc"

#endif


void init_POGTP() { init_POGTP_VDMLib(); }
#ifndef DEF_POGTP_Add2Context

TYPE_POGTP_Context vdm_POGTP_Add2Context(const Generic &vdm_POGTP_con, const TYPE_POGTP_Context &vdm_POGTP_contxt) {
  Record varRes_4(vdm_POGTP_Context, length_POGTP_Context);
  Bool cond_6;
{ if (!(cond_6 = (Bool) (vdm_POGTP_con == Nil())).GetValue()) 
   cond_6 = (Bool) (vdm_POGTP_con == Sequence()); }
  if (cond_6.GetValue()) 
    varRes_4 = vdm_POGTP_contxt;
  else {
    Record tmpRE_14 = vdm_POGTP_contxt;
    int mu_15;
    mu_15 = pos_POGTP_Context_expr;
    Sequence val_16;
    Sequence var1_17;
    var1_17 = Sequence().ImpAppend(vdm_POGTP_con);
    Sequence var2_19;
    if (vdm_POGTP_contxt.Is(vdm_POGTP_Context)) 
      var2_19 = vdm_POGTP_contxt.GetField(pos_POGTP_Context_expr);
    else 
      RunTime("Unknown record field selector");
    val_16.ImpConc(var1_17).ImpConc(var2_19);
    tmpRE_14.SetField(mu_15, val_16);
    varRes_4 = tmpRE_14;
  }
  return (Generic) varRes_4;
}
#endif

#ifndef DEF_POGTP_AddList2Context

TYPE_POGTP_Context vdm_POGTP_AddList2Context(const type_FL &vdm_POGTP_cons, const TYPE_POGTP_Context &vdm_POGTP_contxt) {
  Record varRes_4(vdm_POGTP_Context, length_POGTP_Context);
  if (((Bool) (vdm_POGTP_cons == Sequence())).GetValue()) 
    varRes_4 = vdm_POGTP_contxt;
  else {
    Record vdm_POGTP_hd_ucontxt = vdm_POGTP_Add2Context((Generic) (Generic) vdm_POGTP_cons.Hd(), (Generic) vdm_POGTP_contxt);
    Record vdm_POGTP_tl_ucontxt = vdm_POGTP_AddList2Context((Generic) vdm_POGTP_cons.Tl(), (Generic) vdm_POGTP_hd_ucontxt);
    varRes_4 = vdm_POGTP_tl_ucontxt;
  }
  return (Generic) varRes_4;
}
#endif

#ifndef DEF_POGTP_AddPattern2Context

TYPE_POGTP_Context vdm_POGTP_AddPattern2Context(const TYPE_AS_Pattern &vdm_POGTP_pat, const TYPE_POGTP_Context &vdm_POGTP_contxt) {
  Record varRes_4(vdm_POGTP_Context, length_POGTP_Context);
  {
    Record vdm_POGTP_type;
    Int par_7;
    if (((Record) vdm_POGTP_pat).Is(vdm_AS_TuplePattern)) 
      par_7 = ((Record) vdm_POGTP_pat).GetField(pos_AS_TuplePattern_cid);
    else 
      if (((Record) vdm_POGTP_pat).Is(vdm_AS_SetUnionPattern)) 
        par_7 = ((Record) vdm_POGTP_pat).GetField(pos_AS_SetUnionPattern_cid);
      else 
        if (((Record) vdm_POGTP_pat).Is(vdm_AS_SetEnumPattern)) 
          par_7 = ((Record) vdm_POGTP_pat).GetField(pos_AS_SetEnumPattern_cid);
        else 
          if (((Record) vdm_POGTP_pat).Is(vdm_AS_SeqEnumPattern)) 
            par_7 = ((Record) vdm_POGTP_pat).GetField(pos_AS_SeqEnumPattern_cid);
          else 
            if (((Record) vdm_POGTP_pat).Is(vdm_AS_SeqConcPattern)) 
              par_7 = ((Record) vdm_POGTP_pat).GetField(pos_AS_SeqConcPattern_cid);
            else 
              if (((Record) vdm_POGTP_pat).Is(vdm_AS_RecordPattern)) 
                par_7 = ((Record) vdm_POGTP_pat).GetField(pos_AS_RecordPattern_cid);
              else 
                if (((Record) vdm_POGTP_pat).Is(vdm_AS_PatternName)) 
                  par_7 = ((Record) vdm_POGTP_pat).GetField(pos_AS_PatternName_cid);
                else 
                  if (((Record) vdm_POGTP_pat).Is(vdm_AS_MatchVal)) 
                    par_7 = ((Record) vdm_POGTP_pat).GetField(pos_AS_MatchVal_cid);
                  else 
                    RunTime("Unknown record field selector");
    vdm_POGTP_type = vdm_CI_uAUX_GetASType((Generic) par_7);
    Record vdm_POGTP_bind(vdm_AS_TypeBind, length_AS_TypeBind);
    vdm_POGTP_bind = Record(vdm_AS_TypeBind, length_AS_TypeBind);
    vdm_POGTP_bind.SetField(1, vdm_POGTP_pat);
    vdm_POGTP_bind.SetField(2, vdm_POGTP_type);
    vdm_POGTP_bind.SetField(3, vdm_CI_NilContextId);
    varRes_4 = vdm_POGTP_Add2Context((Generic) vdm_POGTP_bind, (Generic) vdm_POGTP_contxt);
  }
  return (Generic) varRes_4;
}
#endif

#ifndef DEF_POGTP_InitialContext

TYPE_POGTP_Context vdm_POGTP_InitialContext() {
  Record varRes_2(vdm_POGTP_Context, length_POGTP_Context);
  varRes_2 = Record(vdm_POGTP_Context, length_POGTP_Context);
  Record tmpVar_3(vdm_POGTP_LocContext, length_POGTP_LocContext);
  tmpVar_3 = Record(vdm_POGTP_LocContext, length_POGTP_LocContext);
  tmpVar_3.SetField(1, (Quote) "expression");
  Record tmpVar_5(vdm_AS_Name, length_AS_Name);
  tmpVar_5 = Record(vdm_AS_Name, length_AS_Name);
  Sequence tmpVar_6;
  tmpVar_6 = Sequence().ImpAppend(Sequence("SimpleSpecification"));
  tmpVar_5.SetField(1, tmpVar_6);
  tmpVar_5.SetField(2, vdm_CI_NilContextId);
  tmpVar_3.SetField(2, tmpVar_5);
  varRes_2.SetField(1, tmpVar_3);
  varRes_2.SetField(2, Sequence());
  return (Generic) varRes_2;
}
#endif

#ifndef DEF_POGTP_UpdateLoc

TYPE_POGTP_Context vdm_POGTP_UpdateLoc(const TYPE_POGTP_LocClassification &vdm_POGTP_locClass, const TYPE_AS_Name &vdm_POGTP_locName, const TYPE_POGTP_Context &vdm_POGTP_contxt) {
  Record varRes_5(vdm_POGTP_Context, length_POGTP_Context);
  Record tmpRE_7 = vdm_POGTP_contxt;
  int mu_8;
  mu_8 = pos_POGTP_Context_loc;
  Record val_9(vdm_POGTP_LocContext, length_POGTP_LocContext);
  val_9 = Record(vdm_POGTP_LocContext, length_POGTP_LocContext);
  val_9.SetField(1, vdm_POGTP_locClass);
  val_9.SetField(2, vdm_POGTP_locName);
  tmpRE_7.SetField(mu_8, val_9);
  varRes_5 = tmpRE_7;
  return (Generic) varRes_5;
}
#endif

#ifndef DEF_POGTP_UpdateSource

TYPE_POGTP_ProofObligation vdm_POGTP_UpdateSource(const TYPE_POGTP_ProofObligation &vdm_POGTP_po, const type_7AS_NameCL &vdm_POGTP_src) {
  Record varRes_4(vdm_POGTP_ProofObligation, length_POGTP_ProofObligation);
  Record tmpRE_6 = vdm_POGTP_po;
  int mu_7;
  mu_7 = pos_POGTP_ProofObligation_source;
  tmpRE_6.SetField(mu_7, vdm_POGTP_src);
  varRes_4 = tmpRE_6;
  return (Generic) varRes_4;
}
#endif

