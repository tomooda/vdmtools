//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Thu 25-Mar-99 by the VDM-SLtoC++ Code Generator
// (v3.3 - Mon 22-Mar-99)
//
// Supported compilers:
// 	egcs version 1.1 on SunOS4, SunOS5, Linux, HP-UX10
// 	VC++ version 6.0 on Windows95, Windows NT
//

#ifndef _POGTP_h
#define _POGTP_h

#include <math.h>
#include "metaiv.h"
#include "cg.h"
#include "cg_aux.h"
#include "AS.h"
#include "CI.h"
#include "CI_uAUX.h"
#include "REP.h"
#include "POGTP_anonym.h"
enum  {
  vdm_POGTP_Context = TAG_TYPE_POGTP_Context,
  length_POGTP_Context = 2,
  pos_POGTP_Context_loc = 1,
  pos_POGTP_Context_expr = 2,
  vdm_POGTP_LocContext = TAG_TYPE_POGTP_LocContext,
  length_POGTP_LocContext = 2,
  pos_POGTP_LocContext_class = 1,
  pos_POGTP_LocContext_name = 2,
  vdm_POGTP_ProofObligation = TAG_TYPE_POGTP_ProofObligation,
  length_POGTP_ProofObligation = 6,
  pos_POGTP_ProofObligation_no = 1,
  pos_POGTP_ProofObligation_po = 2,
  pos_POGTP_ProofObligation_kind = 3,
  pos_POGTP_ProofObligation_source = 4,
  pos_POGTP_ProofObligation_loc = 5,
  pos_POGTP_ProofObligation_cid = 6
};

class TYPE_POGTP_Context : public Record {
public:

  TYPE_POGTP_Context() : Record(TAG_TYPE_POGTP_Context, 2) {}
  void Init(TYPE_POGTP_LocContext p2, type_FL p3);

  TYPE_POGTP_Context(const Generic &c) : Record(c) {}

  const char * GetTypeName() const { return "TYPE_POGTP_Context"; }
  TYPE_POGTP_LocContext get_loc() const;
  void set_loc(const TYPE_POGTP_LocContext &p);
  type_FL get_expr() const;
  void set_expr(const type_FL &p);
} ;

class TYPE_POGTP_LocContext : public Record {
public:

  TYPE_POGTP_LocContext() : Record(TAG_TYPE_POGTP_LocContext, 2) {}
  void Init(TYPE_POGTP_LocClassification p2, TYPE_AS_Name p3);

  TYPE_POGTP_LocContext(const Generic &c) : Record(c) {}

  const char * GetTypeName() const { return "TYPE_POGTP_LocContext"; }
  TYPE_POGTP_LocClassification get_class() const;
  void set_class(const TYPE_POGTP_LocClassification &p);
  TYPE_AS_Name get_name() const;
  void set_name(const TYPE_AS_Name &p);
} ;

class TYPE_POGTP_ProofObligation : public Record {
public:

  TYPE_POGTP_ProofObligation() : Record(TAG_TYPE_POGTP_ProofObligation, 6) {}
  void Init(Int p2, TYPE_AS_Expr p3, TYPE_POGTP_Classification p4, type_7AS_NameCL p5, TYPE_POGTP_LocContext p6, TYPE_CI_ContextId p7);

  TYPE_POGTP_ProofObligation(const Generic &c) : Record(c) {}

  const char * GetTypeName() const { return "TYPE_POGTP_ProofObligation"; }
  Int get_no() const;
  void set_no(const Int &p);
  TYPE_AS_Expr get_po() const;
  void set_po(const TYPE_AS_Expr &p);
  TYPE_POGTP_Classification get_kind() const;
  void set_kind(const TYPE_POGTP_Classification &p);
  type_7AS_NameCL get_source() const;
  void set_source(const type_7AS_NameCL &p);
  TYPE_POGTP_LocContext get_loc() const;
  void set_loc(const TYPE_POGTP_LocContext &p);
  TYPE_CI_ContextId get_cid() const;
  void set_cid(const TYPE_CI_ContextId &p);
} ;
void init_POGTP();
TYPE_POGTP_Context vdm_POGTP_Add2Context(const Generic &, const TYPE_POGTP_Context &);
TYPE_POGTP_Context vdm_POGTP_AddList2Context(const type_FL &, const TYPE_POGTP_Context &);
TYPE_POGTP_Context vdm_POGTP_AddPattern2Context(const TYPE_AS_Pattern &, const TYPE_POGTP_Context &);
TYPE_POGTP_Context vdm_POGTP_InitialContext();
TYPE_POGTP_Context vdm_POGTP_UpdateLoc(const TYPE_POGTP_LocClassification &, const TYPE_AS_Name &, const TYPE_POGTP_Context &);
TYPE_POGTP_ProofObligation vdm_POGTP_UpdateSource(const TYPE_POGTP_ProofObligation &, const type_7AS_NameCL &);

#endif

