//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Thu 25-Mar-99 by the VDM-SLtoC++ Code Generator
// (v3.3 - Mon 22-Mar-99)
//
// Supported compilers:
// 	egcs version 1.1 on SunOS4, SunOS5, Linux, HP-UX10
// 	VC++ version 6.0 on Windows95, Windows NT
//



#include "SPEC_uPOG.h"
Sequence vdm_SPEC_uPOG_spec_upog;

void init_SPEC_uPOG_VDMLib() {
  VDMGetDefaultRecInfoMap().NewTag(TOKEN, 1);
  VDMGetDefaultRecInfoMap().SetSymTag(TOKEN, "token");
}
#ifdef DEF_SPEC_uPOG_USERIMPL

#include "SPEC_uPOG_userimpl.cc"

#endif


void init_SPEC_uPOG() {
  Sequence tmpVal_1;
  Record e_seq_3(vdm_POGTP_ProofObligation, length_POGTP_ProofObligation);
  e_seq_3 = Record(vdm_POGTP_ProofObligation, length_POGTP_ProofObligation);
  e_seq_3.SetField(1, (Int) 1);
  Record tmpVar_5(vdm_AS_AllOrExistsExpr, length_AS_AllOrExistsExpr);
  tmpVar_5 = Record(vdm_AS_AllOrExistsExpr, length_AS_AllOrExistsExpr);
  tmpVar_5.SetField(1, (Quote) "ALL");
  Sequence tmpVar_7;
  Record e_seq_8(vdm_AS_MultTypeBind, length_AS_MultTypeBind);
  e_seq_8 = Record(vdm_AS_MultTypeBind, length_AS_MultTypeBind);
  Sequence tmpVar_9;
  Record e_seq_10(vdm_AS_PatternName, length_AS_PatternName);
  e_seq_10 = Record(vdm_AS_PatternName, length_AS_PatternName);
  Record tmpVar_11(vdm_AS_Name, length_AS_Name);
  tmpVar_11 = Record(vdm_AS_Name, length_AS_Name);
  Sequence tmpVar_12;
  tmpVar_12 = Sequence().ImpAppend(Sequence("a"));
  tmpVar_11.SetField(1, tmpVar_12);
  tmpVar_11.SetField(2, (Int) 41943122);
  e_seq_10.SetField(1, tmpVar_11);
  e_seq_10.SetField(2, (Int) 41943123);
  tmpVar_9 = Sequence().ImpAppend(e_seq_10);
  e_seq_8.SetField(1, tmpVar_9);
  Record tmpVar_16(vdm_AS_BasicType, length_AS_BasicType);
  tmpVar_16 = Record(vdm_AS_BasicType, length_AS_BasicType);
  tmpVar_16.SetField(1, (Quote) "NAT");
  tmpVar_16.SetField(2, (Int) 41943124);
  e_seq_8.SetField(2, tmpVar_16);
  e_seq_8.SetField(3, (Int) 41943125);
  tmpVar_7 = Sequence().ImpAppend(e_seq_8);
  tmpVar_5.SetField(2, tmpVar_7);
  Record tmpVar_20(vdm_AS_BinaryExpr, length_AS_BinaryExpr);
  tmpVar_20 = Record(vdm_AS_BinaryExpr, length_AS_BinaryExpr);
  Record tmpVar_21(vdm_AS_ApplyExpr, length_AS_ApplyExpr);
  tmpVar_21 = Record(vdm_AS_ApplyExpr, length_AS_ApplyExpr);
  Record tmpVar_22(vdm_AS_Name, length_AS_Name);
  tmpVar_22 = Record(vdm_AS_Name, length_AS_Name);
  Sequence tmpVar_23;
  tmpVar_23 = Sequence().ImpAppend(Sequence("pre_f"));
  tmpVar_22.SetField(1, tmpVar_23);
  tmpVar_22.SetField(2, (Int) 41943121);
  tmpVar_21.SetField(1, tmpVar_22);
  Sequence tmpVar_26;
  Record e_seq_27(vdm_AS_Name, length_AS_Name);
  e_seq_27 = Record(vdm_AS_Name, length_AS_Name);
  Sequence tmpVar_28;
  tmpVar_28 = Sequence().ImpAppend(Sequence("a"));
  e_seq_27.SetField(1, tmpVar_28);
  e_seq_27.SetField(2, (Int) 41943123);
  tmpVar_26 = Sequence().ImpAppend(e_seq_27);
  tmpVar_21.SetField(2, tmpVar_26);
  tmpVar_21.SetField(3, -(Int) 1);
  tmpVar_20.SetField(1, tmpVar_21);
  tmpVar_20.SetField(2, (Quote) "IMPLY");
  Record tmpVar_34(vdm_AS_AllOrExistsExpr, length_AS_AllOrExistsExpr);
  tmpVar_34 = Record(vdm_AS_AllOrExistsExpr, length_AS_AllOrExistsExpr);
  tmpVar_34.SetField(1, (Quote) "EXISTS");
  Sequence tmpVar_36;
  Record e_seq_37(vdm_AS_MultTypeBind, length_AS_MultTypeBind);
  e_seq_37 = Record(vdm_AS_MultTypeBind, length_AS_MultTypeBind);
  Sequence tmpVar_38;
  Record e_seq_39(vdm_AS_PatternName, length_AS_PatternName);
  e_seq_39 = Record(vdm_AS_PatternName, length_AS_PatternName);
  Record tmpVar_40(vdm_AS_Name, length_AS_Name);
  tmpVar_40 = Record(vdm_AS_Name, length_AS_Name);
  Sequence tmpVar_41;
  tmpVar_41 = Sequence().ImpAppend(Sequence("r"));
  tmpVar_40.SetField(1, tmpVar_41);
  tmpVar_40.SetField(2, (Int) 41943126);
  e_seq_39.SetField(1, tmpVar_40);
  e_seq_39.SetField(2, (Int) 41943128);
  tmpVar_38 = Sequence().ImpAppend(e_seq_39);
  e_seq_37.SetField(1, tmpVar_38);
  Record tmpVar_45(vdm_AS_BasicType, length_AS_BasicType);
  tmpVar_45 = Record(vdm_AS_BasicType, length_AS_BasicType);
  tmpVar_45.SetField(1, (Quote) "NAT");
  tmpVar_45.SetField(2, (Int) 41943127);
  e_seq_37.SetField(2, tmpVar_45);
  e_seq_37.SetField(3, (Int) 41943128);
  tmpVar_36 = Sequence().ImpAppend(e_seq_37);
  tmpVar_34.SetField(2, tmpVar_36);
  Record tmpVar_49(vdm_AS_ApplyExpr, length_AS_ApplyExpr);
  tmpVar_49 = Record(vdm_AS_ApplyExpr, length_AS_ApplyExpr);
  Record tmpVar_50(vdm_AS_Name, length_AS_Name);
  tmpVar_50 = Record(vdm_AS_Name, length_AS_Name);
  Sequence tmpVar_51;
  tmpVar_51 = Sequence().ImpAppend(Sequence("post_f"));
  tmpVar_50.SetField(1, tmpVar_51);
  tmpVar_50.SetField(2, (Int) 41943121);
  tmpVar_49.SetField(1, tmpVar_50);
  Sequence tmpVar_54;
  Record e_seq_55(vdm_AS_Name, length_AS_Name);
  e_seq_55 = Record(vdm_AS_Name, length_AS_Name);
  Sequence tmpVar_56;
  tmpVar_56 = Sequence().ImpAppend(Sequence("a"));
  e_seq_55.SetField(1, tmpVar_56);
  e_seq_55.SetField(2, (Int) 41943123);
  tmpVar_54 = Sequence().ImpAppend(e_seq_55);
  Record e_seq_59(vdm_AS_Name, length_AS_Name);
  e_seq_59 = Record(vdm_AS_Name, length_AS_Name);
  Sequence tmpVar_60;
  tmpVar_60 = Sequence().ImpAppend(Sequence("r"));
  e_seq_59.SetField(1, tmpVar_60);
  e_seq_59.SetField(2, (Int) 41943128);
  tmpVar_54.ImpAppend(e_seq_59);
  tmpVar_49.SetField(2, tmpVar_54);
  tmpVar_49.SetField(3, -(Int) 1);
  tmpVar_34.SetField(3, tmpVar_49);
  tmpVar_34.SetField(4, -(Int) 1);
  tmpVar_20.SetField(3, tmpVar_34);
  tmpVar_20.SetField(4, -(Int) 1);
  tmpVar_5.SetField(3, tmpVar_20);
  tmpVar_5.SetField(4, -(Int) 1);
  e_seq_3.SetField(2, tmpVar_5);
  e_seq_3.SetField(3, (Quote) "Satisfiability");
  e_seq_3.SetField(4, Sequence());
  Record tmpVar_73(vdm_POGTP_LocContext, length_POGTP_LocContext);
  tmpVar_73 = Record(vdm_POGTP_LocContext, length_POGTP_LocContext);
  tmpVar_73.SetField(1, (Quote) "functions");
  Record tmpVar_75(vdm_AS_Name, length_AS_Name);
  tmpVar_75 = Record(vdm_AS_Name, length_AS_Name);
  Sequence tmpVar_76;
  tmpVar_76 = Sequence().ImpAppend(Sequence("f"));
  tmpVar_75.SetField(1, tmpVar_76);
  tmpVar_75.SetField(2, (Int) 41943121);
  tmpVar_73.SetField(2, tmpVar_75);
  e_seq_3.SetField(5, tmpVar_73);
  e_seq_3.SetField(6, (Int) 41943135);
  tmpVal_1 = Sequence().ImpAppend(e_seq_3);
  Record e_seq_80(vdm_POGTP_ProofObligation, length_POGTP_ProofObligation);
  e_seq_80 = Record(vdm_POGTP_ProofObligation, length_POGTP_ProofObligation);
  e_seq_80.SetField(1, (Int) 2);
  Record tmpVar_82(vdm_AS_BinaryExpr, length_AS_BinaryExpr);
  tmpVar_82 = Record(vdm_AS_BinaryExpr, length_AS_BinaryExpr);
  Record tmpVar_83(vdm_AS_TypeJudgementExpr, length_AS_TypeJudgementExpr);
  tmpVar_83 = Record(vdm_AS_TypeJudgementExpr, length_AS_TypeJudgementExpr);
  Record tmpVar_84(vdm_AS_SeqEnumerationExpr, length_AS_SeqEnumerationExpr);
  tmpVar_84 = Record(vdm_AS_SeqEnumerationExpr, length_AS_SeqEnumerationExpr);
  Sequence tmpVar_85;
  Record e_seq_86(vdm_AS_RealLit, length_AS_RealLit);
  e_seq_86 = Record(vdm_AS_RealLit, length_AS_RealLit);
  e_seq_86.SetField(1, (Int) 7);
  e_seq_86.SetField(2, (Int) 41943146);
  tmpVar_85 = Sequence().ImpAppend(e_seq_86);
  Record e_seq_89(vdm_AS_RealLit, length_AS_RealLit);
  e_seq_89 = Record(vdm_AS_RealLit, length_AS_RealLit);
  e_seq_89.SetField(1, (Int) 9);
  e_seq_89.SetField(2, (Int) 41943147);
  tmpVar_85.ImpAppend(e_seq_89);
  tmpVar_84.SetField(1, tmpVar_85);
  tmpVar_84.SetField(2, (Int) 41943148);
  tmpVar_83.SetField(1, tmpVar_84);
  Record tmpVar_93(vdm_AS_TypeName, length_AS_TypeName);
  tmpVar_93 = Record(vdm_AS_TypeName, length_AS_TypeName);
  Record tmpVar_94(vdm_AS_Name, length_AS_Name);
  tmpVar_94 = Record(vdm_AS_Name, length_AS_Name);
  Sequence tmpVar_95;
  tmpVar_95 = Sequence().ImpAppend(Sequence("T2"));
  tmpVar_94.SetField(1, tmpVar_95);
  tmpVar_94.SetField(2, (Int) 41943139);
  tmpVar_93.SetField(1, tmpVar_94);
  tmpVar_93.SetField(2, (Int) 41943140);
  tmpVar_83.SetField(2, tmpVar_93);
  tmpVar_83.SetField(3, -(Int) 1);
  tmpVar_82.SetField(1, tmpVar_83);
  tmpVar_82.SetField(2, (Quote) "AND");
  Record tmpVar_102(vdm_AS_ApplyExpr, length_AS_ApplyExpr);
  tmpVar_102 = Record(vdm_AS_ApplyExpr, length_AS_ApplyExpr);
  Record tmpVar_103(vdm_AS_Name, length_AS_Name);
  tmpVar_103 = Record(vdm_AS_Name, length_AS_Name);
  Sequence tmpVar_104;
  tmpVar_104 = Sequence().ImpAppend(Sequence("inv_T2"));
  tmpVar_103.SetField(1, tmpVar_104);
  tmpVar_103.SetField(2, (Int) 41943139);
  tmpVar_102.SetField(1, tmpVar_103);
  Sequence tmpVar_107;
  Record e_seq_108(vdm_AS_SeqEnumerationExpr, length_AS_SeqEnumerationExpr);
  e_seq_108 = Record(vdm_AS_SeqEnumerationExpr, length_AS_SeqEnumerationExpr);
  Sequence tmpVar_109;
  Record e_seq_110(vdm_AS_RealLit, length_AS_RealLit);
  e_seq_110 = Record(vdm_AS_RealLit, length_AS_RealLit);
  e_seq_110.SetField(1, (Int) 7);
  e_seq_110.SetField(2, (Int) 41943146);
  tmpVar_109 = Sequence().ImpAppend(e_seq_110);
  Record e_seq_113(vdm_AS_RealLit, length_AS_RealLit);
  e_seq_113 = Record(vdm_AS_RealLit, length_AS_RealLit);
  e_seq_113.SetField(1, (Int) 9);
  e_seq_113.SetField(2, (Int) 41943147);
  tmpVar_109.ImpAppend(e_seq_113);
  e_seq_108.SetField(1, tmpVar_109);
  e_seq_108.SetField(2, (Int) 41943148);
  tmpVar_107 = Sequence().ImpAppend(e_seq_108);
  tmpVar_102.SetField(2, tmpVar_107);
  tmpVar_102.SetField(3, -(Int) 1);
  tmpVar_82.SetField(3, tmpVar_102);
  tmpVar_82.SetField(4, -(Int) 1);
  e_seq_80.SetField(2, tmpVar_82);
  e_seq_80.SetField(3, (Quote) "Invariants");
  e_seq_80.SetField(4, Sequence());
  Record tmpVar_123(vdm_POGTP_LocContext, length_POGTP_LocContext);
  tmpVar_123 = Record(vdm_POGTP_LocContext, length_POGTP_LocContext);
  tmpVar_123.SetField(1, (Quote) "functions");
  Record tmpVar_125(vdm_AS_Name, length_AS_Name);
  tmpVar_125 = Record(vdm_AS_Name, length_AS_Name);
  Sequence tmpVar_126;
  tmpVar_126 = Sequence().ImpAppend(Sequence("g"));
  tmpVar_125.SetField(1, tmpVar_126);
  tmpVar_125.SetField(2, (Int) 41943136);
  tmpVar_123.SetField(2, tmpVar_125);
  e_seq_80.SetField(5, tmpVar_123);
  e_seq_80.SetField(6, (Int) 41943148);
  tmpVal_1.ImpAppend(e_seq_80);
  Record e_seq_130(vdm_POGTP_ProofObligation, length_POGTP_ProofObligation);
  e_seq_130 = Record(vdm_POGTP_ProofObligation, length_POGTP_ProofObligation);
  e_seq_130.SetField(1, (Int) 3);
  Record tmpVar_132(vdm_AS_BinaryExpr, length_AS_BinaryExpr);
  tmpVar_132 = Record(vdm_AS_BinaryExpr, length_AS_BinaryExpr);
  Record tmpVar_133(vdm_AS_RealLit, length_AS_RealLit);
  tmpVar_133 = Record(vdm_AS_RealLit, length_AS_RealLit);
  tmpVar_133.SetField(1, (Int) 9);
  tmpVar_133.SetField(2, (Int) 41943050);
  tmpVar_132.SetField(1, tmpVar_133);
  tmpVar_132.SetField(2, (Quote) "INSET");
  Record tmpVar_137(vdm_AS_PrefixExpr, length_AS_PrefixExpr);
  tmpVar_137 = Record(vdm_AS_PrefixExpr, length_AS_PrefixExpr);
  tmpVar_137.SetField(1, (Quote) "SEQINDICES");
  Record tmpVar_139(vdm_AS_SeqEnumerationExpr, length_AS_SeqEnumerationExpr);
  tmpVar_139 = Record(vdm_AS_SeqEnumerationExpr, length_AS_SeqEnumerationExpr);
  Sequence tmpVar_140;
  Record e_seq_141(vdm_AS_RealLit, length_AS_RealLit);
  e_seq_141 = Record(vdm_AS_RealLit, length_AS_RealLit);
  e_seq_141.SetField(1, (Int) 1);
  e_seq_141.SetField(2, (Int) 41943045);
  tmpVar_140 = Sequence().ImpAppend(e_seq_141);
  Record e_seq_144(vdm_AS_RealLit, length_AS_RealLit);
  e_seq_144 = Record(vdm_AS_RealLit, length_AS_RealLit);
  e_seq_144.SetField(1, (Int) 8);
  e_seq_144.SetField(2, (Int) 41943046);
  tmpVar_140.ImpAppend(e_seq_144);
  Record e_seq_147(vdm_AS_RealLit, length_AS_RealLit);
  e_seq_147 = Record(vdm_AS_RealLit, length_AS_RealLit);
  e_seq_147.SetField(1, (Int) 9);
  e_seq_147.SetField(2, (Int) 41943047);
  tmpVar_140.ImpAppend(e_seq_147);
  Record e_seq_150(vdm_AS_BoolLit, length_AS_BoolLit);
  e_seq_150 = Record(vdm_AS_BoolLit, length_AS_BoolLit);
  e_seq_150.SetField(1, (Bool) true);
  e_seq_150.SetField(2, (Int) 41943048);
  tmpVar_140.ImpAppend(e_seq_150);
  tmpVar_139.SetField(1, tmpVar_140);
  tmpVar_139.SetField(2, (Int) 41943049);
  tmpVar_137.SetField(2, tmpVar_139);
  tmpVar_137.SetField(3, -(Int) 1);
  tmpVar_132.SetField(3, tmpVar_137);
  tmpVar_132.SetField(4, -(Int) 1);
  e_seq_130.SetField(2, tmpVar_132);
  e_seq_130.SetField(3, (Quote) "SeqApplication");
  e_seq_130.SetField(4, Sequence());
  Record tmpVar_160(vdm_POGTP_LocContext, length_POGTP_LocContext);
  tmpVar_160 = Record(vdm_POGTP_LocContext, length_POGTP_LocContext);
  tmpVar_160.SetField(1, (Quote) "values");
  Record tmpVar_162(vdm_AS_Name, length_AS_Name);
  tmpVar_162 = Record(vdm_AS_Name, length_AS_Name);
  Sequence tmpVar_163;
  tmpVar_163 = Sequence().ImpAppend(Sequence());
  tmpVar_162.SetField(1, tmpVar_163);
  tmpVar_162.SetField(2, -(Int) 1);
  tmpVar_160.SetField(2, tmpVar_162);
  e_seq_130.SetField(5, tmpVar_160);
  e_seq_130.SetField(6, (Int) 41943051);
  tmpVal_1.ImpAppend(e_seq_130);
  vdm_SPEC_uPOG_spec_upog = tmpVal_1;
  init_SPEC_uPOG_VDMLib();
}
#ifndef DEF_SPEC_uPOG_List2SeparatorList

TYPE_SPEC_uPOG_string vdm_SPEC_uPOG_List2SeparatorList(const TYPE_SPEC_uPOG_string &vdm_SPEC_uPOG_separator, const type_cLL &vdm_SPEC_uPOG_ss) {
  Sequence varRes_4;
  if (((Bool) (vdm_SPEC_uPOG_ss == Sequence())).GetValue()) 
    varRes_4 = Sequence("");
  else {
    Sequence vdm_SPEC_uPOG_head = (Sequence) vdm_SPEC_uPOG_ss.Hd();
    Sequence vdm_SPEC_uPOG_tail;
    if (((Bool) (vdm_SPEC_uPOG_ss.Tl() == Sequence())).GetValue()) 
      vdm_SPEC_uPOG_tail = Sequence("");
    else 
      vdm_SPEC_uPOG_tail.ImpConc(vdm_SPEC_uPOG_separator).ImpConc(vdm_SPEC_uPOG_List2SeparatorList((Generic) vdm_SPEC_uPOG_separator, (Generic) vdm_SPEC_uPOG_ss.Tl()));
    varRes_4.ImpConc(vdm_SPEC_uPOG_head).ImpConc(vdm_SPEC_uPOG_tail);
  }
  return (Generic) varRes_4;
}
#endif

