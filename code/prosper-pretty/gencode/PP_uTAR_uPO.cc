//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Mon 11-Oct-99 by the VDM-SLtoC++ Code Generator
// (v3.3 - Mon 22-Mar-99)
//
// Supported compilers:
// 	egcs version 1.1 on SunOS4, SunOS5, Linux, HP-UX10
// 	VC++ version 6.0 on Windows95, Windows NT
//



#include "PP_uTAR_uPO.h"

void init_PP_uTAR_uPO_VDMLib() {
  VDMGetDefaultRecInfoMap().NewTag(TOKEN, 1);
  VDMGetDefaultRecInfoMap().SetSymTag(TOKEN, "token");
}
#ifdef DEF_PP_uTAR_uPO_USERIMPL

#include "PP_uTAR_uPO_userimpl.cc"

#endif


void init_PP_uTAR_uPO() { init_PP_uTAR_uPO_VDMLib(); }
#ifndef DEF_PP_uTAR_uPO_Nat2str

type_cL vdm_PP_uTAR_uPO_Nat2str(const Int &vdm_PP_uTAR_uPO_n) {
  Sequence varRes_3;
  {
    Int vdm_PP_uTAR_uPO_d = (Int) (vdm_PP_uTAR_uPO_n / (Int) 10);
    Int vdm_PP_uTAR_uPO_r = vdm_PP_uTAR_uPO_n - (Int) 10 * vdm_PP_uTAR_uPO_d;
    Sequence vdm_PP_uTAR_uPO_r_ustr;
    bool succ_14 = true;
    {
      succ_14 = true;
      if (vdm_PP_uTAR_uPO_r != (Int) 0) 
        succ_14 = false;
      if (succ_14) 
        vdm_PP_uTAR_uPO_r_ustr = Sequence("0");
    }
    if (!succ_14) {
      succ_14 = true;
      if (vdm_PP_uTAR_uPO_r != (Int) 1) 
        succ_14 = false;
      if (succ_14) 
        vdm_PP_uTAR_uPO_r_ustr = Sequence("1");
    }
    if (!succ_14) {
      succ_14 = true;
      if (vdm_PP_uTAR_uPO_r != (Int) 2) 
        succ_14 = false;
      if (succ_14) 
        vdm_PP_uTAR_uPO_r_ustr = Sequence("2");
    }
    if (!succ_14) {
      succ_14 = true;
      if (vdm_PP_uTAR_uPO_r != (Int) 3) 
        succ_14 = false;
      if (succ_14) 
        vdm_PP_uTAR_uPO_r_ustr = Sequence("3");
    }
    if (!succ_14) {
      succ_14 = true;
      if (vdm_PP_uTAR_uPO_r != (Int) 4) 
        succ_14 = false;
      if (succ_14) 
        vdm_PP_uTAR_uPO_r_ustr = Sequence("4");
    }
    if (!succ_14) {
      succ_14 = true;
      if (vdm_PP_uTAR_uPO_r != (Int) 5) 
        succ_14 = false;
      if (succ_14) 
        vdm_PP_uTAR_uPO_r_ustr = Sequence("5");
    }
    if (!succ_14) {
      succ_14 = true;
      if (vdm_PP_uTAR_uPO_r != (Int) 6) 
        succ_14 = false;
      if (succ_14) 
        vdm_PP_uTAR_uPO_r_ustr = Sequence("6");
    }
    if (!succ_14) {
      succ_14 = true;
      if (vdm_PP_uTAR_uPO_r != (Int) 7) 
        succ_14 = false;
      if (succ_14) 
        vdm_PP_uTAR_uPO_r_ustr = Sequence("7");
    }
    if (!succ_14) {
      succ_14 = true;
      if (vdm_PP_uTAR_uPO_r != (Int) 8) 
        succ_14 = false;
      if (succ_14) 
        vdm_PP_uTAR_uPO_r_ustr = Sequence("8");
    }
    if (!succ_14) {
      succ_14 = true;
      if (vdm_PP_uTAR_uPO_r != (Int) 9) 
        succ_14 = false;
      if (succ_14) 
        vdm_PP_uTAR_uPO_r_ustr = Sequence("9");
    }
    if (!succ_14) 
      RunTime("No \'others\' branch in CasesExpr");
    Sequence vdm_PP_uTAR_uPO_d_ustr;
    if (((Bool) (vdm_PP_uTAR_uPO_d == (Int) 0)).GetValue()) 
      vdm_PP_uTAR_uPO_d_ustr = Sequence("");
    else 
      vdm_PP_uTAR_uPO_d_ustr = vdm_PP_uTAR_uPO_Nat2str((Generic) vdm_PP_uTAR_uPO_d);
    varRes_3.ImpConc(vdm_PP_uTAR_uPO_d_ustr).ImpConc(vdm_PP_uTAR_uPO_r_ustr);
  }
  return (Generic) varRes_3;
}
#endif

#ifndef DEF_PP_uTAR_uPO_PrintName

type_cL vdm_PP_uTAR_uPO_PrintName(const TYPE_AS_Name &var_1_1) {
  Int vdm_PP_uTAR_uPO_cid;
  Sequence vdm_PP_uTAR_uPO_ids;
  bool succ_2 = true;
  if (var_1_1.IsRecord() && vdm_AS_Name == var_1_1.GetTag()) {
    Sequence e_l_27;
    for (int i_28 = 1; i_28 <= var_1_1.Length(); i_28++) 
      e_l_27.ImpAppend(var_1_1.GetField(i_28));
    if (succ_2 = 2 == (Int) e_l_27.Length()) {
      vdm_PP_uTAR_uPO_ids = (Generic) e_l_27.Hd();
      vdm_PP_uTAR_uPO_cid = (Generic) e_l_27[2];
    }
  }
  else 
    succ_2 = false;
  if (!succ_2) 
    RunTime("Pattern Match in Function Apply in function : PrintName failed");
  Sequence varRes_3;
  if (((Bool) ((Int) vdm_PP_uTAR_uPO_ids.Length() == (Int) 1)).GetValue()) 
    varRes_3 = (Sequence) vdm_PP_uTAR_uPO_ids.Hd();
  else {
    Sequence vdm_PP_uTAR_uPO_head = (Sequence) vdm_PP_uTAR_uPO_ids.Hd();
    Sequence vdm_PP_uTAR_uPO_tail;
    if (((Bool) (vdm_PP_uTAR_uPO_ids.Tl() == Sequence())).GetValue()) 
      vdm_PP_uTAR_uPO_tail = Sequence("");
    else {
      Sequence var2_19;
      Record par_20(vdm_AS_Name, length_AS_Name);
      par_20 = Record(vdm_AS_Name, length_AS_Name);
      par_20.SetField(1, vdm_PP_uTAR_uPO_ids.Tl());
      par_20.SetField(2, vdm_PP_uTAR_uPO_cid);
      var2_19 = vdm_PP_uTAR_uPO_PrintName((Generic) par_20);
      vdm_PP_uTAR_uPO_tail.ImpConc(Sequence("`")).ImpConc(var2_19);
    }
    varRes_3.ImpConc(vdm_PP_uTAR_uPO_head).ImpConc(vdm_PP_uTAR_uPO_tail);
  }
  return (Generic) varRes_3;
}
#endif

#ifndef DEF_PP_uTAR_uPO_pre_PrintName

Bool vdm_PP_uTAR_uPO_pre_PrintName(const TYPE_AS_Name &var_1_1) {
  Int vdm_PP_uTAR_uPO_cid;
  Sequence vdm_PP_uTAR_uPO_ids;
  bool succ_2 = true;
  if (var_1_1.IsRecord() && vdm_AS_Name == var_1_1.GetTag()) {
    Sequence e_l_6;
    for (int i_7 = 1; i_7 <= var_1_1.Length(); i_7++) 
      e_l_6.ImpAppend(var_1_1.GetField(i_7));
    if (succ_2 = 2 == (Int) e_l_6.Length()) {
      vdm_PP_uTAR_uPO_ids = (Generic) e_l_6.Hd();
      vdm_PP_uTAR_uPO_cid = (Generic) e_l_6[2];
    }
  }
  else 
    succ_2 = false;
  if (!succ_2) 
    RunTime("Pattern Match in Function Apply in function : pre_PrintName failed");
  return (Generic) (Bool) !(vdm_PP_uTAR_uPO_ids == Sequence());
}
#endif

#ifndef DEF_PP_uTAR_uPO_PrintNameList

type_cL vdm_PP_uTAR_uPO_PrintNameList(const type_7AS_NameCL &vdm_PP_uTAR_uPO_lst) {
  Sequence varRes_3;
  {
    Sequence vdm_PP_uTAR_uPO_head = vdm_PP_uTAR_uPO_PrintName((Generic) (Record) vdm_PP_uTAR_uPO_lst.Hd());
    Sequence vdm_PP_uTAR_uPO_tail = vdm_PP_uTAR_uPO_lst.Tl();
    if (((Bool) (vdm_PP_uTAR_uPO_tail == Sequence())).GetValue()) 
      varRes_3 = vdm_PP_uTAR_uPO_head;
    else {
      Sequence var1_14;
      var1_14.ImpConc(vdm_PP_uTAR_uPO_head).ImpConc(Sequence(" and "));
      varRes_3.ImpConc(var1_14).ImpConc(vdm_PP_uTAR_uPO_PrintNameList((Generic) vdm_PP_uTAR_uPO_tail));
    }
  }
  return (Generic) varRes_3;
}
#endif

#ifndef DEF_PP_uTAR_uPO_pre_PrintNameList

Bool vdm_PP_uTAR_uPO_pre_PrintNameList(const type_7AS_NameCL &vdm_PP_uTAR_uPO_lst) { return (Generic) (Bool) !(vdm_PP_uTAR_uPO_lst == Sequence()); }
#endif

#ifndef DEF_PP_uTAR_uPO_PrintPODueTo

type_cL vdm_PP_uTAR_uPO_PrintPODueTo(const TYPE_POGTP_Classification &vdm_PP_uTAR_uPO_kind, const type_7AS_NameCL &vdm_PP_uTAR_uPO_source) {
  Sequence varRes_4;
  Sequence var2_7;
  if (((Bool) (vdm_PP_uTAR_uPO_source == Sequence())).GetValue()) 
    var2_7 = Sequence("");
  else 
    var2_7.ImpConc(Sequence(" from ")).ImpConc(vdm_PP_uTAR_uPO_PrintNameList((Generic) vdm_PP_uTAR_uPO_source));
  varRes_4.ImpConc(vdm_PP_uTAR_uPO_PrintPOKind((Generic) vdm_PP_uTAR_uPO_kind)).ImpConc(var2_7);
  return (Generic) varRes_4;
}
#endif

#ifndef DEF_PP_uTAR_uPO_PrintPOKind

type_cL vdm_PP_uTAR_uPO_PrintPOKind(const TYPE_POGTP_Classification &vdm_PP_uTAR_uPO_kind) {
  Generic varRes_3;
  bool succ_4 = true;
  {
    succ_4 = true;
    if (vdm_PP_uTAR_uPO_kind != (Quote) "SeqModification") 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence("sequence modification");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_PP_uTAR_uPO_kind != (Quote) "SeqApplication") 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence("sequence application");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_PP_uTAR_uPO_kind != (Quote) "MapMerge") 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence("map merge");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_PP_uTAR_uPO_kind != (Quote) "MapDistributedMerge") 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence("distributed map merge");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_PP_uTAR_uPO_kind != (Quote) "MapApplication") 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence("map application");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_PP_uTAR_uPO_kind != (Quote) "MapComposition") 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence("map composition");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_PP_uTAR_uPO_kind != (Quote) "MapIteration") 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence("map iteration");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_PP_uTAR_uPO_kind != (Quote) "TupleSelect") 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence("tuple selection");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_PP_uTAR_uPO_kind != (Quote) "FunctionApplication") 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence("function application");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_PP_uTAR_uPO_kind != (Quote) "FuncComp") 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence("function composition");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_PP_uTAR_uPO_kind != (Quote) "FuncIteration") 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence("function iteration");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_PP_uTAR_uPO_kind != (Quote) "SeqComprehension") 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence("sequence comprehension");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_PP_uTAR_uPO_kind != (Quote) "MapComprehension") 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence("map comprehension");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_PP_uTAR_uPO_kind != (Quote) "MapEnumeration") 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence("map enumeration");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_PP_uTAR_uPO_kind != (Quote) "MapCompatible") 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence("compatible maps");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_PP_uTAR_uPO_kind != (Quote) "MapSetOfCompatible") 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence("map compatibility");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_PP_uTAR_uPO_kind != (Quote) "MapSeqOfCompatible") 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence("map enumeration");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_PP_uTAR_uPO_kind != (Quote) "LetBeStExpr") 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence("non-emptiness of let be such binding");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_PP_uTAR_uPO_kind != (Quote) "CasesExpr") 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence("exhaustive matching in cases expression");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_PP_uTAR_uPO_kind != (Quote) "ExistsUnique") 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence("unique existence binding");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_PP_uTAR_uPO_kind != (Quote) "Subtype") 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence("subtype");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_PP_uTAR_uPO_kind != (Quote) "Invariants") 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence("invariants");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_PP_uTAR_uPO_kind != (Quote) "FlatType") 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence("flatType");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_PP_uTAR_uPO_kind != (Quote) "ValueBinding") 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence("non emptiness of binding");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_PP_uTAR_uPO_kind != (Quote) "PatternBinding") 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence("pattern binding");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_PP_uTAR_uPO_kind != (Quote) "FunctionPatterns") 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence("exhaustive function patterns");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_PP_uTAR_uPO_kind != (Quote) "Satisfiability") 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence("satisfiability");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_PP_uTAR_uPO_kind != (Quote) "PostCondition") 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence("post condition");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_PP_uTAR_uPO_kind != (Quote) "OperationSat") 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence("OperationSat");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_PP_uTAR_uPO_kind != (Quote) "FiniteSet") 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence("finiteness of set");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_PP_uTAR_uPO_kind != (Quote) "FiniteMap") 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence("finiteness of map");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_PP_uTAR_uPO_kind != (Quote) "NonEndoIteration") 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence("iteration of non-endofunction");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_PP_uTAR_uPO_kind != (Quote) "NonZero") 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence("non-zeroness");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_PP_uTAR_uPO_kind != (Quote) "NonEmptySet") 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence("non-empty set");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_PP_uTAR_uPO_kind != (Quote) "NonEmptySeq") 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence("non-empty sequence");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_PP_uTAR_uPO_kind != (Quote) "MapInverse") 
      succ_4 = false;
    if (!succ_4) {
      succ_4 = true;
      if (vdm_PP_uTAR_uPO_kind != (Quote) "IntDivision") 
        succ_4 = false;
    }
    if (!succ_4) {
      succ_4 = true;
      if (vdm_PP_uTAR_uPO_kind != (Quote) "Remainder") 
        succ_4 = false;
    }
    if (!succ_4) {
      succ_4 = true;
      if (vdm_PP_uTAR_uPO_kind != (Quote) "Modulus") 
        succ_4 = false;
    }
    if (!succ_4) {
      succ_4 = true;
      if (vdm_PP_uTAR_uPO_kind != (Quote) "DInter") 
        succ_4 = false;
    }
    if (!succ_4) {
      succ_4 = true;
      if (vdm_PP_uTAR_uPO_kind != (Quote) "SeqHead") 
        succ_4 = false;
    }
    if (!succ_4) {
      succ_4 = true;
      if (vdm_PP_uTAR_uPO_kind != (Quote) "SeqTail") 
        succ_4 = false;
    }
    if (!succ_4) {
      succ_4 = true;
      if (vdm_PP_uTAR_uPO_kind != (Quote) "SetComprehension") 
        succ_4 = false;
    }
    if (succ_4) 
      RunTime("Can not evaluate an undefined expression");
  }
  if (!succ_4) 
    RunTime("Can not evaluate an undefined expression");
  return (Generic) varRes_3;
}
#endif

#ifndef DEF_PP_uTAR_uPO_PrintPOLocContext

type_cL vdm_PP_uTAR_uPO_PrintPOLocContext(const TYPE_POGTP_LocContext &var_1_1) {
  Generic vdm_PP_uTAR_uPO_classi;
  Record vdm_PP_uTAR_uPO_nm(vdm_AS_Name, length_AS_Name);
  bool succ_2 = true;
  if (var_1_1.IsRecord() && vdm_POGTP_LocContext == var_1_1.GetTag()) {
    Sequence e_l_18;
    for (int i_19 = 1; i_19 <= var_1_1.Length(); i_19++) 
      e_l_18.ImpAppend(var_1_1.GetField(i_19));
    if (succ_2 = 2 == (Int) e_l_18.Length()) {
      vdm_PP_uTAR_uPO_classi = (Generic) e_l_18.Hd();
      vdm_PP_uTAR_uPO_nm = (Generic) e_l_18[2];
    }
  }
  else 
    succ_2 = false;
  if (!succ_2) 
    RunTime("Pattern Match in Function Apply in function : PrintPOLocContext failed");
  Sequence varRes_3;
  Sequence var1_4;
  Generic var1_5;
  bool succ_6 = true;
  {
    succ_6 = true;
    if (vdm_PP_uTAR_uPO_classi != (Quote) "types") 
      succ_6 = false;
    if (succ_6) 
      var1_5 = Sequence("type");
  }
  if (!succ_6) {
    succ_6 = true;
    if (vdm_PP_uTAR_uPO_classi != (Quote) "functions") 
      succ_6 = false;
    if (succ_6) 
      var1_5 = Sequence("function");
  }
  if (!succ_6) {
    succ_6 = true;
    if (vdm_PP_uTAR_uPO_classi != (Quote) "operations") 
      succ_6 = false;
    if (succ_6) 
      var1_5 = Sequence("operation");
  }
  if (!succ_6) {
    succ_6 = true;
    if (vdm_PP_uTAR_uPO_classi != (Quote) "values") 
      succ_6 = false;
    if (succ_6) 
      var1_5 = Sequence("value");
  }
  if (!succ_6) {
    succ_6 = true;
    if (vdm_PP_uTAR_uPO_classi != (Quote) "conjectures") 
      succ_6 = false;
    if (succ_6) 
      var1_5 = Sequence("conjecture");
  }
  if (!succ_6) {
    succ_6 = true;
    if (vdm_PP_uTAR_uPO_classi != (Quote) "expression") 
      succ_6 = false;
    if (succ_6) 
      var1_5 = Sequence("expression");
  }
  if (!succ_6) 
    RunTime("Can not evaluate an undefined expression");
  var1_4.ImpConc(var1_5).ImpConc(Sequence(" "));
  varRes_3.ImpConc(var1_4).ImpConc(vdm_PP_uTAR_uPO_PrintName((Generic) vdm_PP_uTAR_uPO_nm));
  return (Generic) varRes_3;
}
#endif

#ifndef DEF_PP_uTAR_uPO_PrintPOLocation

type_cL vdm_PP_uTAR_uPO_PrintPOLocation(const TYPE_CI_ContextId &vdm_PP_uTAR_uPO_cid) {
  Sequence varRes_3;
  if (((Bool) !vdm_CI_IsAValidContextId((Generic) vdm_PP_uTAR_uPO_cid).GetValue()).GetValue()) 
    varRes_3 = Sequence(", no cid");
  else {
    bool succ_8;
    Tuple tmpVal_9(2);
    tmpVal_9 = vdm_CI_GetLocation((Generic) vdm_PP_uTAR_uPO_cid);
    Int vdm_PP_uTAR_uPO_col;
    Int vdm_PP_uTAR_uPO_line;
    succ_8 = true;
    if (tmpVal_9.IsTuple()) {
      Sequence e_l_11;
      for (int i_12 = 1; i_12 <= ((Tuple) tmpVal_9).Length(); i_12++) 
        e_l_11.ImpAppend(((Tuple) tmpVal_9).GetField(i_12));
      if (succ_8 = 2 == (Int) e_l_11.Length()) {
        vdm_PP_uTAR_uPO_line = (Int) e_l_11.Hd();
        vdm_PP_uTAR_uPO_col = (Int) e_l_11[2];
      }
    }
    else 
      succ_8 = false;
    if (!succ_8) 
      RunTime("Pattern match did not succeed in value definition");
    Sequence var1_13;
    Sequence var1_14;
    var1_14.ImpConc(Sequence("l. ")).ImpConc(vdm_PP_uTAR_uPO_Nat2str((Generic) vdm_PP_uTAR_uPO_line));
    var1_13.ImpConc(var1_14).ImpConc(Sequence(" c. "));
    varRes_3.ImpConc(var1_13).ImpConc(vdm_PP_uTAR_uPO_Nat2str((Generic) vdm_PP_uTAR_uPO_col));
  }
  return (Generic) varRes_3;
}
#endif

#ifndef DEF_PP_uTAR_uPO_tar_uProofObligation

TYPE_PP_uTAR_uPO_ProofObligation vdm_PP_uTAR_uPO_tar_uProofObligation(const Int &vdm_PP_uTAR_uPO_no, const TYPE_PP_uTAR_uEXPR_Expr &vdm_PP_uTAR_uPO_po, const TYPE_POGTP_Classification &vdm_PP_uTAR_uPO_kind, const type_7AS_NameCL &vdm_PP_uTAR_uPO_source, const TYPE_POGTP_LocContext &vdm_PP_uTAR_uPO_loc, const TYPE_CI_ContextId &vdm_PP_uTAR_uPO_cid) {
  Sequence varRes_8;
  {
    Sequence vdm_PP_uTAR_uPO_number;
    Sequence var1_11;
    var1_11.ImpConc(Sequence("Proof Obligation #")).ImpConc(vdm_PP_uTAR_uPO_Nat2str((Generic) vdm_PP_uTAR_uPO_no));
    vdm_PP_uTAR_uPO_number.ImpConc(var1_11).ImpConc(Sequence(" :\n"));
    Sequence vdm_PP_uTAR_uPO_explain;
    Sequence var1_17;
    Sequence var1_18;
    Sequence var1_19;
    Sequence var1_20;
    Sequence var1_21;
    var1_21.ImpConc(Sequence("In ")).ImpConc(vdm_PP_uTAR_uPO_PrintPOLocContext((Generic) vdm_PP_uTAR_uPO_loc));
    var1_20.ImpConc(var1_21).ImpConc(Sequence(", "));
    var1_19.ImpConc(var1_20).ImpConc(vdm_PP_uTAR_uPO_PrintPOLocation((Generic) vdm_PP_uTAR_uPO_cid));
    var1_18.ImpConc(var1_19).ImpConc(Sequence(": "));
    var1_17.ImpConc(var1_18).ImpConc(vdm_PP_uTAR_uPO_PrintPODueTo((Generic) vdm_PP_uTAR_uPO_kind, (Generic) vdm_PP_uTAR_uPO_source));
    vdm_PP_uTAR_uPO_explain.ImpConc(var1_17).ImpConc(Sequence("\n"));
    Sequence vdm_PP_uTAR_uPO_line;
    Sequence unArg_34;
    {
      Sequence res_l_35;
      Set resBind_s_37;
      Set riseq_41;
      int max_42 = (Int) vdm_PP_uTAR_uPO_explain.Length();
      for (int i_43 = 1; i_43 <= max_42; i_43++) 
        riseq_41.Insert((Int) i_43);
      resBind_s_37 = riseq_41;
      Sequence bind_l_36;
      if ((Int) resBind_s_37.Card() != (Int) 0) 
        bind_l_36 = Sort(resBind_s_37);
      bool succ_38 = true;
      Int vdm_PP_uTAR_uPO_i;
      Generic tmpe_46;
      for (int i_45 = bind_l_36.First(tmpe_46); i_45; i_45 = bind_l_36.Next(tmpe_46)) {
        Int e_39 = tmpe_46;
        vdm_PP_uTAR_uPO_i = e_39;
        if (succ_38) 
          res_l_35.ImpAppend(Sequence("-"));
      }
      unArg_34 = res_l_35;
    }
    Sequence rdcseq_47;    Generic tmpe_50;    for (int i_49 = unArg_34.First(tmpe_50); i_49; i_49 = unArg_34.Next(tmpe_50)) {
      Sequence e_48 = tmpe_50;
      rdcseq_47.ImpConc(e_48);
    }    vdm_PP_uTAR_uPO_line = rdcseq_47;
    Sequence var1_51;
    Sequence var1_52;
    Sequence var1_53;
    var1_53.ImpConc(vdm_PP_uTAR_uPO_number).ImpConc(vdm_PP_uTAR_uPO_explain);
    var1_52.ImpConc(var1_53).ImpConc(vdm_PP_uTAR_uPO_line);
    var1_51.ImpConc(var1_52).ImpConc(Sequence("\n"));
    varRes_8.ImpConc(var1_51).ImpConc(vdm_PP_uTAR_uPO_po);
  }
  return (Generic) varRes_8;
}
#endif

