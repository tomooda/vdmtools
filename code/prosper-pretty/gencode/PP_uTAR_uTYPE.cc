//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Tue 02-Nov-99 by the VDM-SLtoC++ Code Generator
// (v3.3 - Mon 22-Mar-99)
//
// Supported compilers:
// 	egcs version 1.1 on SunOS4, SunOS5, Linux, HP-UX10
// 	VC++ version 6.0 on Windows95, Windows NT
//



#include "PP_uTAR_uTYPE.h"

void init_PP_uTAR_uTYPE_VDMLib() {
  VDMGetDefaultRecInfoMap().NewTag(TOKEN, 1);
  VDMGetDefaultRecInfoMap().SetSymTag(TOKEN, "token");
}
#ifdef DEF_PP_uTAR_uTYPE_USERIMPL

#include "PP_uTAR_uTYPE_userimpl.cc"

#endif


void init_PP_uTAR_uTYPE() { init_PP_uTAR_uTYPE_VDMLib(); }
#ifndef DEF_PP_uTAR_uTYPE_List2SeparatorList

TYPE_PP_uTAR_uTYPE_string vdm_PP_uTAR_uTYPE_List2SeparatorList(const TYPE_PP_uTAR_uTYPE_string &vdm_PP_uTAR_uTYPE_separator, const type_cLL &vdm_PP_uTAR_uTYPE_ss) {
  Sequence varRes_4;
  if (((Bool) (vdm_PP_uTAR_uTYPE_ss == Sequence())).GetValue()) 
    varRes_4 = Sequence("");
  else {
    Sequence vdm_PP_uTAR_uTYPE_head = (Sequence) vdm_PP_uTAR_uTYPE_ss.Hd();
    Sequence vdm_PP_uTAR_uTYPE_tail;
    if (((Bool) (vdm_PP_uTAR_uTYPE_ss.Tl() == Sequence())).GetValue()) 
      vdm_PP_uTAR_uTYPE_tail = Sequence("");
    else 
      vdm_PP_uTAR_uTYPE_tail.ImpConc(vdm_PP_uTAR_uTYPE_separator).ImpConc(vdm_PP_uTAR_uTYPE_List2SeparatorList((Generic) vdm_PP_uTAR_uTYPE_separator, (Generic) vdm_PP_uTAR_uTYPE_ss.Tl()));
    varRes_4.ImpConc(vdm_PP_uTAR_uTYPE_head).ImpConc(vdm_PP_uTAR_uTYPE_tail);
  }
  return (Generic) varRes_4;
}
#endif

#ifndef DEF_PP_uTAR_uTYPE_tar_uBooleanType

TYPE_PP_uTAR_uTYPE_BasicType vdm_PP_uTAR_uTYPE_tar_uBooleanType(const TYPE_CI_ContextId &var_1_1) {
  bool succ_2 = true;
  if (succ_2) {}
  if (!succ_2) 
    RunTime("Pattern Match in Function Apply in function : tar_uBooleanType failed");
  return (Generic) Sequence("bool");
}
#endif

#ifndef DEF_PP_uTAR_uTYPE_tar_uBracketedType

TYPE_PP_uTAR_uTYPE_BracketedType vdm_PP_uTAR_uTYPE_tar_uBracketedType(const TYPE_PP_uTAR_uTYPE_Type &var_1_1, const TYPE_CI_ContextId &var_2_2) {
  Sequence vdm_PP_uTAR_uTYPE_tp;
  bool succ_3 = true;
  vdm_PP_uTAR_uTYPE_tp = var_1_1;
  if (succ_3) {}
  if (!succ_3) 
    RunTime("Pattern Match in Function Apply in function : tar_uBracketedType failed");
  Sequence varRes_4;
  Sequence var1_5;
  var1_5.ImpConc(Sequence("(")).ImpConc(vdm_PP_uTAR_uTYPE_tp);
  varRes_4.ImpConc(var1_5).ImpConc(Sequence(")"));
  return (Generic) varRes_4;
}
#endif

#ifndef DEF_PP_uTAR_uTYPE_tar_uCharType

TYPE_PP_uTAR_uTYPE_BasicType vdm_PP_uTAR_uTYPE_tar_uCharType(const TYPE_CI_ContextId &var_1_1) {
  bool succ_2 = true;
  if (succ_2) {}
  if (!succ_2) 
    RunTime("Pattern Match in Function Apply in function : tar_uCharType failed");
  return (Generic) Sequence("char");
}
#endif

#ifndef DEF_PP_uTAR_uTYPE_tar_uCompositeType

TYPE_PP_uTAR_uTYPE_CompositeType vdm_PP_uTAR_uTYPE_tar_uCompositeType(const TYPE_PP_uTAR_uTYPE_Ids &var_1_1, const type_cLL &var_2_2, const TYPE_CI_ContextId &var_3_3) {
  Sequence vdm_PP_uTAR_uTYPE_flds;
  Sequence vdm_PP_uTAR_uTYPE_tag;
  bool succ_4 = true;
  vdm_PP_uTAR_uTYPE_tag = var_1_1;
  vdm_PP_uTAR_uTYPE_flds = var_2_2;
  if (succ_4) {}
  if (!succ_4) 
    RunTime("Pattern Match in Function Apply in function : tar_uCompositeType failed");
  Sequence varRes_5;
  Sequence var1_6;
  Sequence var1_7;
  Sequence var1_8;
  var1_8.ImpConc(Sequence("compose ")).ImpConc(vdm_PP_uTAR_uTYPE_tag);
  var1_7.ImpConc(var1_8).ImpConc(Sequence(" of "));
  var1_6.ImpConc(var1_7).ImpConc(vdm_PP_uTAR_uTYPE_List2SeparatorList((Generic) Sequence("\n"), (Generic) vdm_PP_uTAR_uTYPE_flds));
  varRes_5.ImpConc(var1_6).ImpConc(Sequence("\nend"));
  return (Generic) varRes_5;
}
#endif

#ifndef DEF_PP_uTAR_uTYPE_tar_uField

TYPE_PP_uTAR_uTYPE_Field vdm_PP_uTAR_uTYPE_tar_uField(const Generic &var_1_1, const TYPE_PP_uTAR_uTYPE_Type &var_2_2, const Bool &var_3_3, const TYPE_CI_ContextId &var_4_4) {
  Generic vdm_PP_uTAR_uTYPE_sel;
  Sequence vdm_PP_uTAR_uTYPE_tp;
  bool succ_5 = true;
  vdm_PP_uTAR_uTYPE_sel = var_1_1;
  vdm_PP_uTAR_uTYPE_tp = var_2_2;
  if (succ_5) {}
  if (succ_5) {}
  if (!succ_5) 
    RunTime("Pattern Match in Function Apply in function : tar_uField failed");
  Sequence varRes_6;
  if (((Bool) (vdm_PP_uTAR_uTYPE_sel == Nil())).GetValue()) 
    varRes_6 = vdm_PP_uTAR_uTYPE_tp;
  else {
    Sequence var1_11;
    var1_11.ImpConc(vdm_PP_uTAR_uTYPE_sel).ImpConc(Sequence(" : "));
    varRes_6.ImpConc(var1_11).ImpConc(vdm_PP_uTAR_uTYPE_tp);
  }
  return (Generic) varRes_6;
}
#endif

#ifndef DEF_PP_uTAR_uTYPE_tar_uGeneralMapType

TYPE_PP_uTAR_uTYPE_GeneralMapType vdm_PP_uTAR_uTYPE_tar_uGeneralMapType(const TYPE_PP_uTAR_uTYPE_Type &var_1_1, const TYPE_PP_uTAR_uTYPE_Type &var_2_2, const TYPE_CI_ContextId &var_3_3) {
  Sequence vdm_PP_uTAR_uTYPE_mapdom;
  Sequence vdm_PP_uTAR_uTYPE_maprng;
  bool succ_4 = true;
  vdm_PP_uTAR_uTYPE_mapdom = var_1_1;
  vdm_PP_uTAR_uTYPE_maprng = var_2_2;
  if (succ_4) {}
  if (!succ_4) 
    RunTime("Pattern Match in Function Apply in function : tar_uGeneralMapType failed");
  Sequence varRes_5;
  Sequence var1_6;
  Sequence var1_7;
  var1_7.ImpConc(Sequence("map ")).ImpConc(vdm_PP_uTAR_uTYPE_mapdom);
  var1_6.ImpConc(var1_7).ImpConc(Sequence(" to "));
  varRes_5.ImpConc(var1_6).ImpConc(vdm_PP_uTAR_uTYPE_maprng);
  return (Generic) varRes_5;
}
#endif

#ifndef DEF_PP_uTAR_uTYPE_tar_uIds

TYPE_PP_uTAR_uTYPE_Ids vdm_PP_uTAR_uTYPE_tar_uIds(const TYPE_AS_Ids &vdm_PP_uTAR_uTYPE_ids) {
  Sequence varRes_3;
  if (((Bool) ((Int) vdm_PP_uTAR_uTYPE_ids.Length() == (Int) 1)).GetValue()) 
    varRes_3 = (Sequence) vdm_PP_uTAR_uTYPE_ids.Hd();
  else {
    Sequence vdm_PP_uTAR_uTYPE_head = (Sequence) vdm_PP_uTAR_uTYPE_ids.Hd();
    Sequence vdm_PP_uTAR_uTYPE_tail;
    if (((Bool) (vdm_PP_uTAR_uTYPE_ids.Tl() == Sequence())).GetValue()) 
      vdm_PP_uTAR_uTYPE_tail = Sequence("");
    else 
      vdm_PP_uTAR_uTYPE_tail.ImpConc(Sequence("`")).ImpConc(vdm_PP_uTAR_uTYPE_tar_uIds((Generic) vdm_PP_uTAR_uTYPE_ids.Tl()));
    varRes_3.ImpConc(vdm_PP_uTAR_uTYPE_head).ImpConc(vdm_PP_uTAR_uTYPE_tail);
  }
  return (Generic) varRes_3;
}
#endif

#ifndef DEF_PP_uTAR_uTYPE_pre_tar_uIds

Bool vdm_PP_uTAR_uTYPE_pre_tar_uIds(const TYPE_AS_Ids &vdm_PP_uTAR_uTYPE_ids) { return (Generic) (Bool) !(vdm_PP_uTAR_uTYPE_ids == Sequence()); }
#endif

#ifndef DEF_PP_uTAR_uTYPE_tar_uInjectiveMapType

TYPE_PP_uTAR_uTYPE_InjectiveMapType vdm_PP_uTAR_uTYPE_tar_uInjectiveMapType(const TYPE_PP_uTAR_uTYPE_Type &var_1_1, const TYPE_PP_uTAR_uTYPE_Type &var_2_2, const TYPE_CI_ContextId &var_3_3) {
  Sequence vdm_PP_uTAR_uTYPE_mapdom;
  Sequence vdm_PP_uTAR_uTYPE_maprng;
  bool succ_4 = true;
  vdm_PP_uTAR_uTYPE_mapdom = var_1_1;
  vdm_PP_uTAR_uTYPE_maprng = var_2_2;
  if (succ_4) {}
  if (!succ_4) 
    RunTime("Pattern Match in Function Apply in function : tar_uInjectiveMapType failed");
  Sequence varRes_5;
  Sequence var1_6;
  Sequence var1_7;
  var1_7.ImpConc(Sequence("inmap ")).ImpConc(vdm_PP_uTAR_uTYPE_mapdom);
  var1_6.ImpConc(var1_7).ImpConc(Sequence(" to "));
  varRes_5.ImpConc(var1_6).ImpConc(vdm_PP_uTAR_uTYPE_maprng);
  return (Generic) varRes_5;
}
#endif

#ifndef DEF_PP_uTAR_uTYPE_tar_uIntegerType

TYPE_PP_uTAR_uTYPE_BasicType vdm_PP_uTAR_uTYPE_tar_uIntegerType(const TYPE_CI_ContextId &var_1_1) {
  bool succ_2 = true;
  if (succ_2) {}
  if (!succ_2) 
    RunTime("Pattern Match in Function Apply in function : tar_uIntegerType failed");
  return (Generic) Sequence("int");
}
#endif

#ifndef DEF_PP_uTAR_uTYPE_tar_uName

TYPE_PP_uTAR_uTYPE_Name vdm_PP_uTAR_uTYPE_tar_uName(const TYPE_PP_uTAR_uTYPE_Ids &var_1_1, const TYPE_CI_ContextId &var_2_2) {
  Sequence vdm_PP_uTAR_uTYPE_ids;
  bool succ_3 = true;
  vdm_PP_uTAR_uTYPE_ids = var_1_1;
  if (succ_3) {}
  if (!succ_3) 
    RunTime("Pattern Match in Function Apply in function : tar_uName failed");
  return (Generic) vdm_PP_uTAR_uTYPE_ids;
}
#endif

#ifndef DEF_PP_uTAR_uTYPE_tar_uNatOneType

TYPE_PP_uTAR_uTYPE_BasicType vdm_PP_uTAR_uTYPE_tar_uNatOneType(const TYPE_CI_ContextId &var_1_1) {
  bool succ_2 = true;
  if (succ_2) {}
  if (!succ_2) 
    RunTime("Pattern Match in Function Apply in function : tar_uNatOneType failed");
  return (Generic) Sequence("nat1");
}
#endif

#ifndef DEF_PP_uTAR_uTYPE_tar_uNatType

TYPE_PP_uTAR_uTYPE_BasicType vdm_PP_uTAR_uTYPE_tar_uNatType(const TYPE_CI_ContextId &var_1_1) {
  bool succ_2 = true;
  if (succ_2) {}
  if (!succ_2) 
    RunTime("Pattern Match in Function Apply in function : tar_uNatType failed");
  return (Generic) Sequence("nat");
}
#endif

#ifndef DEF_PP_uTAR_uTYPE_tar_uOptionalType

TYPE_PP_uTAR_uTYPE_OptionalType vdm_PP_uTAR_uTYPE_tar_uOptionalType(const TYPE_PP_uTAR_uTYPE_Type &var_1_1, const TYPE_CI_ContextId &var_2_2) {
  Sequence vdm_PP_uTAR_uTYPE_elemtp;
  bool succ_3 = true;
  vdm_PP_uTAR_uTYPE_elemtp = var_1_1;
  if (succ_3) {}
  if (!succ_3) 
    RunTime("Pattern Match in Function Apply in function : tar_uOptionalType failed");
  Sequence varRes_4;
  Sequence var1_5;
  var1_5.ImpConc(Sequence("[")).ImpConc(vdm_PP_uTAR_uTYPE_elemtp);
  varRes_4.ImpConc(var1_5).ImpConc(Sequence("]"));
  return (Generic) varRes_4;
}
#endif

#ifndef DEF_PP_uTAR_uTYPE_tar_uPartialFnType

TYPE_PP_uTAR_uTYPE_PartialFnType vdm_PP_uTAR_uTYPE_tar_uPartialFnType(const type_cLL &var_1_1, const TYPE_PP_uTAR_uTYPE_Type &var_2_2, const TYPE_CI_ContextId &var_3_3) {
  Sequence vdm_PP_uTAR_uTYPE_fndom;
  Sequence vdm_PP_uTAR_uTYPE_fnrng;
  bool succ_4 = true;
  vdm_PP_uTAR_uTYPE_fndom = var_1_1;
  vdm_PP_uTAR_uTYPE_fnrng = var_2_2;
  if (succ_4) {}
  if (!succ_4) 
    RunTime("Pattern Match in Function Apply in function : tar_uPartialFnType failed");
  Sequence varRes_5;
  if (((Bool) (vdm_PP_uTAR_uTYPE_fndom == Sequence())).GetValue()) 
    varRes_5.ImpConc(Sequence("() -> ")).ImpConc(vdm_PP_uTAR_uTYPE_fnrng);
  else {
    Sequence var1_10;
    var1_10.ImpConc(vdm_PP_uTAR_uTYPE_List2SeparatorList((Generic) Sequence(" * "), (Generic) vdm_PP_uTAR_uTYPE_fndom)).ImpConc(Sequence(" -> "));
    varRes_5.ImpConc(var1_10).ImpConc(vdm_PP_uTAR_uTYPE_fnrng);
  }
  return (Generic) varRes_5;
}
#endif

#ifndef DEF_PP_uTAR_uTYPE_tar_uProductType

TYPE_PP_uTAR_uTYPE_ProductType vdm_PP_uTAR_uTYPE_tar_uProductType(const type_cLL &var_1_1, const TYPE_CI_ContextId &var_2_2) {
  Sequence vdm_PP_uTAR_uTYPE_stp;
  bool succ_3 = true;
  vdm_PP_uTAR_uTYPE_stp = var_1_1;
  if (succ_3) {}
  if (!succ_3) 
    RunTime("Pattern Match in Function Apply in function : tar_uProductType failed");
  Sequence varRes_4;
  Sequence var1_5;
  var1_5.ImpConc(Sequence("(")).ImpConc(vdm_PP_uTAR_uTYPE_List2SeparatorList((Generic) Sequence(" * "), (Generic) vdm_PP_uTAR_uTYPE_stp));
  varRes_4.ImpConc(var1_5).ImpConc(Sequence(")"));
  return (Generic) varRes_4;
}
#endif

#ifndef DEF_PP_uTAR_uTYPE_tar_uQuoteType

TYPE_PP_uTAR_uTYPE_QuoteType vdm_PP_uTAR_uTYPE_tar_uQuoteType(const TYPE_AS_QuoteLit &var_1_1, const TYPE_CI_ContextId &var_2_2) {
  Sequence vdm_PP_uTAR_uTYPE_str;
  bool succ_3 = true;
  if (var_1_1.IsRecord() && vdm_AS_QuoteLit == var_1_1.GetTag()) {
    Sequence e_l_9;
    for (int i_10 = 1; i_10 <= var_1_1.Length(); i_10++) 
      e_l_9.ImpAppend(var_1_1.GetField(i_10));
    if (succ_3 = 2 == (Int) e_l_9.Length()) 
      vdm_PP_uTAR_uTYPE_str = (Generic) e_l_9.Hd();
  }
  else 
    succ_3 = false;
  if (succ_3) {}
  if (!succ_3) 
    RunTime("Pattern Match in Function Apply in function : tar_uQuoteType failed");
  Sequence varRes_4;
  Sequence var1_5;
  var1_5.ImpConc(Sequence("<")).ImpConc(vdm_PP_uTAR_uTYPE_str);
  varRes_4.ImpConc(var1_5).ImpConc(Sequence(">"));
  return (Generic) varRes_4;
}
#endif

#ifndef DEF_PP_uTAR_uTYPE_tar_uRatType

TYPE_PP_uTAR_uTYPE_BasicType vdm_PP_uTAR_uTYPE_tar_uRatType(const TYPE_CI_ContextId &var_1_1) {
  bool succ_2 = true;
  if (succ_2) {}
  if (!succ_2) 
    RunTime("Pattern Match in Function Apply in function : tar_uRatType failed");
  return (Generic) Sequence("rat");
}
#endif

#ifndef DEF_PP_uTAR_uTYPE_tar_uRealType

TYPE_PP_uTAR_uTYPE_BasicType vdm_PP_uTAR_uTYPE_tar_uRealType(const TYPE_CI_ContextId &var_1_1) {
  bool succ_2 = true;
  if (succ_2) {}
  if (!succ_2) 
    RunTime("Pattern Match in Function Apply in function : tar_uRealType failed");
  return (Generic) Sequence("real");
}
#endif

#ifndef DEF_PP_uTAR_uTYPE_tar_uSeq0Type

TYPE_PP_uTAR_uTYPE_Seq0Type vdm_PP_uTAR_uTYPE_tar_uSeq0Type(const TYPE_PP_uTAR_uTYPE_Type &var_1_1, const TYPE_CI_ContextId &var_2_2) {
  Sequence vdm_PP_uTAR_uTYPE_elemtp;
  bool succ_3 = true;
  vdm_PP_uTAR_uTYPE_elemtp = var_1_1;
  if (succ_3) {}
  if (!succ_3) 
    RunTime("Pattern Match in Function Apply in function : tar_uSeq0Type failed");
  Sequence varRes_4;
  varRes_4.ImpConc(Sequence("seq of ")).ImpConc(vdm_PP_uTAR_uTYPE_elemtp);
  return (Generic) varRes_4;
}
#endif

#ifndef DEF_PP_uTAR_uTYPE_tar_uSeq1Type

TYPE_PP_uTAR_uTYPE_Seq1Type vdm_PP_uTAR_uTYPE_tar_uSeq1Type(const TYPE_PP_uTAR_uTYPE_Type &var_1_1, const TYPE_CI_ContextId &var_2_2) {
  Sequence vdm_PP_uTAR_uTYPE_elemtp;
  bool succ_3 = true;
  vdm_PP_uTAR_uTYPE_elemtp = var_1_1;
  if (succ_3) {}
  if (!succ_3) 
    RunTime("Pattern Match in Function Apply in function : tar_uSeq1Type failed");
  Sequence varRes_4;
  varRes_4.ImpConc(Sequence("seq1 of ")).ImpConc(vdm_PP_uTAR_uTYPE_elemtp);
  return (Generic) varRes_4;
}
#endif

#ifndef DEF_PP_uTAR_uTYPE_tar_uSetType

TYPE_PP_uTAR_uTYPE_SetType vdm_PP_uTAR_uTYPE_tar_uSetType(const TYPE_PP_uTAR_uTYPE_Type &var_1_1, const TYPE_CI_ContextId &var_2_2) {
  Sequence vdm_PP_uTAR_uTYPE_elemtp;
  bool succ_3 = true;
  vdm_PP_uTAR_uTYPE_elemtp = var_1_1;
  if (succ_3) {}
  if (!succ_3) 
    RunTime("Pattern Match in Function Apply in function : tar_uSetType failed");
  Sequence varRes_4;
  varRes_4.ImpConc(Sequence("set of ")).ImpConc(vdm_PP_uTAR_uTYPE_elemtp);
  return (Generic) varRes_4;
}
#endif

#ifndef DEF_PP_uTAR_uTYPE_tar_uTokenType

TYPE_PP_uTAR_uTYPE_BasicType vdm_PP_uTAR_uTYPE_tar_uTokenType(const TYPE_CI_ContextId &var_1_1) {
  bool succ_2 = true;
  if (succ_2) {}
  if (!succ_2) 
    RunTime("Pattern Match in Function Apply in function : tar_uTokenType failed");
  return (Generic) Sequence("token");
}
#endif

#ifndef DEF_PP_uTAR_uTYPE_tar_uTotalFnType

TYPE_PP_uTAR_uTYPE_TotalFnType vdm_PP_uTAR_uTYPE_tar_uTotalFnType(const type_cLL &var_1_1, const TYPE_PP_uTAR_uTYPE_Type &var_2_2, const TYPE_CI_ContextId &var_3_3) {
  Sequence vdm_PP_uTAR_uTYPE_fndom;
  Sequence vdm_PP_uTAR_uTYPE_fnrng;
  bool succ_4 = true;
  vdm_PP_uTAR_uTYPE_fndom = var_1_1;
  vdm_PP_uTAR_uTYPE_fnrng = var_2_2;
  if (succ_4) {}
  if (!succ_4) 
    RunTime("Pattern Match in Function Apply in function : tar_uTotalFnType failed");
  Sequence varRes_5;
  if (((Bool) (vdm_PP_uTAR_uTYPE_fndom == Sequence())).GetValue()) 
    varRes_5.ImpConc(Sequence("() -> ")).ImpConc(vdm_PP_uTAR_uTYPE_fnrng);
  else {
    Sequence var1_10;
    var1_10.ImpConc(vdm_PP_uTAR_uTYPE_List2SeparatorList((Generic) Sequence(" * "), (Generic) vdm_PP_uTAR_uTYPE_fndom)).ImpConc(Sequence(" +> "));
    varRes_5.ImpConc(var1_10).ImpConc(vdm_PP_uTAR_uTYPE_fnrng);
  }
  return (Generic) varRes_5;
}
#endif

#ifndef DEF_PP_uTAR_uTYPE_tar_uTypeName

TYPE_PP_uTAR_uTYPE_TypeName vdm_PP_uTAR_uTYPE_tar_uTypeName(const TYPE_PP_uTAR_uTYPE_Ids &var_1_1, const TYPE_CI_ContextId &var_2_2) {
  Sequence vdm_PP_uTAR_uTYPE_ids;
  bool succ_3 = true;
  vdm_PP_uTAR_uTYPE_ids = var_1_1;
  if (succ_3) {}
  if (!succ_3) 
    RunTime("Pattern Match in Function Apply in function : tar_uTypeName failed");
  return (Generic) vdm_PP_uTAR_uTYPE_ids;
}
#endif

#ifndef DEF_PP_uTAR_uTYPE_tar_uTypeVar

TYPE_PP_uTAR_uTYPE_TypeVar vdm_PP_uTAR_uTYPE_tar_uTypeVar(const TYPE_PP_uTAR_uTYPE_Ids &var_1_1, const TYPE_CI_ContextId &var_2_2) {
  Sequence vdm_PP_uTAR_uTYPE_ids;
  bool succ_3 = true;
  vdm_PP_uTAR_uTYPE_ids = var_1_1;
  if (succ_3) {}
  if (!succ_3) 
    RunTime("Pattern Match in Function Apply in function : tar_uTypeVar failed");
  return (Generic) vdm_PP_uTAR_uTYPE_ids;
}
#endif

#ifndef DEF_PP_uTAR_uTYPE_tar_uUnionType

TYPE_PP_uTAR_uTYPE_UnionType vdm_PP_uTAR_uTYPE_tar_uUnionType(const type_cLL &var_1_1, const TYPE_CI_ContextId &var_2_2) {
  Sequence vdm_PP_uTAR_uTYPE_stp;
  bool succ_3 = true;
  vdm_PP_uTAR_uTYPE_stp = var_1_1;
  if (succ_3) {}
  if (!succ_3) 
    RunTime("Pattern Match in Function Apply in function : tar_uUnionType failed");
  Sequence varRes_4;
  Sequence var1_5;
  var1_5.ImpConc(Sequence("(")).ImpConc(vdm_PP_uTAR_uTYPE_List2SeparatorList((Generic) Sequence(" | "), (Generic) vdm_PP_uTAR_uTYPE_stp));
  varRes_4.ImpConc(var1_5).ImpConc(Sequence(")"));
  return (Generic) varRes_4;
}
#endif

