//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Thu 21-Oct-99 by the VDM-SLtoC++ Code Generator
// (v3.3 - Mon 22-Mar-99)
//
// Supported compilers:
// 	egcs version 1.1 on SunOS4, SunOS5, Linux, HP-UX10
// 	VC++ version 6.0 on Windows95, Windows NT
//

#ifndef _TRF_uTAR_uPAT_h
#define _TRF_uTAR_uPAT_h

#include <math.h>
#include "metaiv.h"
#include "cg.h"
#include "cg_aux.h"
#include "AS.h"
#include "CI.h"
#include "REP.h"
#include "TRF_uTAR_uEXPR.h"
#include "TRF_uTAR_uTYPE.h"
#include "TRF_uTAR_uPAT_anonym.h"
enum  {
  vdm_TRF_uTAR_uPAT_MULTSETBIND = TAG_TYPE_TRF_uTAR_uPAT_MULTSETBIND,
  length_TRF_uTAR_uPAT_MULTSETBIND = 3,
  pos_TRF_uTAR_uPAT_MULTSETBIND_bd = 1,
  pos_TRF_uTAR_uPAT_MULTSETBIND_fv = 2,
  pos_TRF_uTAR_uPAT_MULTSETBIND_pid = 3,
  vdm_TRF_uTAR_uPAT_MULTTYPEBIND = TAG_TYPE_TRF_uTAR_uPAT_MULTTYPEBIND,
  length_TRF_uTAR_uPAT_MULTTYPEBIND = 3,
  pos_TRF_uTAR_uPAT_MULTTYPEBIND_bd = 1,
  pos_TRF_uTAR_uPAT_MULTTYPEBIND_fv = 2,
  pos_TRF_uTAR_uPAT_MULTTYPEBIND_pid = 3,
  vdm_TRF_uTAR_uPAT_MatchVal = TAG_TYPE_TRF_uTAR_uPAT_MatchVal,
  length_TRF_uTAR_uPAT_MatchVal = 3,
  pos_TRF_uTAR_uPAT_MatchVal_pat = 1,
  pos_TRF_uTAR_uPAT_MatchVal_fv = 2,
  pos_TRF_uTAR_uPAT_MatchVal_pid = 3,
  vdm_TRF_uTAR_uPAT_PatternName = TAG_TYPE_TRF_uTAR_uPAT_PatternName,
  length_TRF_uTAR_uPAT_PatternName = 3,
  pos_TRF_uTAR_uPAT_PatternName_pat = 1,
  pos_TRF_uTAR_uPAT_PatternName_fv = 2,
  pos_TRF_uTAR_uPAT_PatternName_pid = 3,
  vdm_TRF_uTAR_uPAT_RecordPattern = TAG_TYPE_TRF_uTAR_uPAT_RecordPattern,
  length_TRF_uTAR_uPAT_RecordPattern = 3,
  pos_TRF_uTAR_uPAT_RecordPattern_pat = 1,
  pos_TRF_uTAR_uPAT_RecordPattern_fv = 2,
  pos_TRF_uTAR_uPAT_RecordPattern_pid = 3,
  vdm_TRF_uTAR_uPAT_SeqConcPattern = TAG_TYPE_TRF_uTAR_uPAT_SeqConcPattern,
  length_TRF_uTAR_uPAT_SeqConcPattern = 3,
  pos_TRF_uTAR_uPAT_SeqConcPattern_pat = 1,
  pos_TRF_uTAR_uPAT_SeqConcPattern_fv = 2,
  pos_TRF_uTAR_uPAT_SeqConcPattern_pid = 3,
  vdm_TRF_uTAR_uPAT_SeqEnumPattern = TAG_TYPE_TRF_uTAR_uPAT_SeqEnumPattern,
  length_TRF_uTAR_uPAT_SeqEnumPattern = 3,
  pos_TRF_uTAR_uPAT_SeqEnumPattern_pat = 1,
  pos_TRF_uTAR_uPAT_SeqEnumPattern_fv = 2,
  pos_TRF_uTAR_uPAT_SeqEnumPattern_pid = 3,
  vdm_TRF_uTAR_uPAT_SetBind = TAG_TYPE_TRF_uTAR_uPAT_SetBind,
  length_TRF_uTAR_uPAT_SetBind = 3,
  pos_TRF_uTAR_uPAT_SetBind_bd = 1,
  pos_TRF_uTAR_uPAT_SetBind_fv = 2,
  pos_TRF_uTAR_uPAT_SetBind_pid = 3,
  vdm_TRF_uTAR_uPAT_SetEnumPattern = TAG_TYPE_TRF_uTAR_uPAT_SetEnumPattern,
  length_TRF_uTAR_uPAT_SetEnumPattern = 3,
  pos_TRF_uTAR_uPAT_SetEnumPattern_pat = 1,
  pos_TRF_uTAR_uPAT_SetEnumPattern_fv = 2,
  pos_TRF_uTAR_uPAT_SetEnumPattern_pid = 3,
  vdm_TRF_uTAR_uPAT_SetUnionPattern = TAG_TYPE_TRF_uTAR_uPAT_SetUnionPattern,
  length_TRF_uTAR_uPAT_SetUnionPattern = 3,
  pos_TRF_uTAR_uPAT_SetUnionPattern_pat = 1,
  pos_TRF_uTAR_uPAT_SetUnionPattern_fv = 2,
  pos_TRF_uTAR_uPAT_SetUnionPattern_pid = 3,
  vdm_TRF_uTAR_uPAT_TuplePattern = TAG_TYPE_TRF_uTAR_uPAT_TuplePattern,
  length_TRF_uTAR_uPAT_TuplePattern = 3,
  pos_TRF_uTAR_uPAT_TuplePattern_pat = 1,
  pos_TRF_uTAR_uPAT_TuplePattern_fv = 2,
  pos_TRF_uTAR_uPAT_TuplePattern_pid = 3,
  vdm_TRF_uTAR_uPAT_TypeBind = TAG_TYPE_TRF_uTAR_uPAT_TypeBind,
  length_TRF_uTAR_uPAT_TypeBind = 3,
  pos_TRF_uTAR_uPAT_TypeBind_bd = 1,
  pos_TRF_uTAR_uPAT_TypeBind_fv = 2,
  pos_TRF_uTAR_uPAT_TypeBind_pid = 3
};

class TYPE_TRF_uTAR_uPAT_MULTSETBIND : public Record {
public:

  TYPE_TRF_uTAR_uPAT_MULTSETBIND() : Record(TAG_TYPE_TRF_uTAR_uPAT_MULTSETBIND, 3) {}
  void Init(TYPE_AS_MultSetBind p2, TYPE_TRF_uTAR_uPAT_Identifiers p3, TYPE_TRF_uTAR_uPAT_PatternIds p4);

  TYPE_TRF_uTAR_uPAT_MULTSETBIND(const Generic &c) : Record(c) {}

  const char * GetTypeName() const { return "TYPE_TRF_uTAR_uPAT_MULTSETBIND"; }
  TYPE_AS_MultSetBind get_bd() const;
  void set_bd(const TYPE_AS_MultSetBind &p);
  TYPE_TRF_uTAR_uPAT_Identifiers get_fv() const;
  void set_fv(const TYPE_TRF_uTAR_uPAT_Identifiers &p);
  TYPE_TRF_uTAR_uPAT_PatternIds get_pid() const;
  void set_pid(const TYPE_TRF_uTAR_uPAT_PatternIds &p);
} ;

class TYPE_TRF_uTAR_uPAT_MULTTYPEBIND : public Record {
public:

  TYPE_TRF_uTAR_uPAT_MULTTYPEBIND() : Record(TAG_TYPE_TRF_uTAR_uPAT_MULTTYPEBIND, 3) {}
  void Init(TYPE_AS_MultTypeBind p2, TYPE_TRF_uTAR_uPAT_Identifiers p3, TYPE_TRF_uTAR_uPAT_PatternIds p4);

  TYPE_TRF_uTAR_uPAT_MULTTYPEBIND(const Generic &c) : Record(c) {}

  const char * GetTypeName() const { return "TYPE_TRF_uTAR_uPAT_MULTTYPEBIND"; }
  TYPE_AS_MultTypeBind get_bd() const;
  void set_bd(const TYPE_AS_MultTypeBind &p);
  TYPE_TRF_uTAR_uPAT_Identifiers get_fv() const;
  void set_fv(const TYPE_TRF_uTAR_uPAT_Identifiers &p);
  TYPE_TRF_uTAR_uPAT_PatternIds get_pid() const;
  void set_pid(const TYPE_TRF_uTAR_uPAT_PatternIds &p);
} ;

class TYPE_TRF_uTAR_uPAT_MatchVal : public Record {
public:

  TYPE_TRF_uTAR_uPAT_MatchVal() : Record(TAG_TYPE_TRF_uTAR_uPAT_MatchVal, 3) {}
  void Init(TYPE_AS_MatchVal p2, TYPE_TRF_uTAR_uPAT_Identifiers p3, TYPE_TRF_uTAR_uPAT_PatternIds p4);

  TYPE_TRF_uTAR_uPAT_MatchVal(const Generic &c) : Record(c) {}

  const char * GetTypeName() const { return "TYPE_TRF_uTAR_uPAT_MatchVal"; }
  TYPE_AS_MatchVal get_pat() const;
  void set_pat(const TYPE_AS_MatchVal &p);
  TYPE_TRF_uTAR_uPAT_Identifiers get_fv() const;
  void set_fv(const TYPE_TRF_uTAR_uPAT_Identifiers &p);
  TYPE_TRF_uTAR_uPAT_PatternIds get_pid() const;
  void set_pid(const TYPE_TRF_uTAR_uPAT_PatternIds &p);
} ;

class TYPE_TRF_uTAR_uPAT_PatternName : public Record {
public:

  TYPE_TRF_uTAR_uPAT_PatternName() : Record(TAG_TYPE_TRF_uTAR_uPAT_PatternName, 3) {}
  void Init(TYPE_AS_PatternName p2, TYPE_TRF_uTAR_uPAT_Identifiers p3, TYPE_TRF_uTAR_uPAT_PatternIds p4);

  TYPE_TRF_uTAR_uPAT_PatternName(const Generic &c) : Record(c) {}

  const char * GetTypeName() const { return "TYPE_TRF_uTAR_uPAT_PatternName"; }
  TYPE_AS_PatternName get_pat() const;
  void set_pat(const TYPE_AS_PatternName &p);
  TYPE_TRF_uTAR_uPAT_Identifiers get_fv() const;
  void set_fv(const TYPE_TRF_uTAR_uPAT_Identifiers &p);
  TYPE_TRF_uTAR_uPAT_PatternIds get_pid() const;
  void set_pid(const TYPE_TRF_uTAR_uPAT_PatternIds &p);
} ;

class TYPE_TRF_uTAR_uPAT_RecordPattern : public Record {
public:

  TYPE_TRF_uTAR_uPAT_RecordPattern() : Record(TAG_TYPE_TRF_uTAR_uPAT_RecordPattern, 3) {}
  void Init(TYPE_AS_RecordPattern p2, TYPE_TRF_uTAR_uPAT_Identifiers p3, TYPE_TRF_uTAR_uPAT_PatternIds p4);

  TYPE_TRF_uTAR_uPAT_RecordPattern(const Generic &c) : Record(c) {}

  const char * GetTypeName() const { return "TYPE_TRF_uTAR_uPAT_RecordPattern"; }
  TYPE_AS_RecordPattern get_pat() const;
  void set_pat(const TYPE_AS_RecordPattern &p);
  TYPE_TRF_uTAR_uPAT_Identifiers get_fv() const;
  void set_fv(const TYPE_TRF_uTAR_uPAT_Identifiers &p);
  TYPE_TRF_uTAR_uPAT_PatternIds get_pid() const;
  void set_pid(const TYPE_TRF_uTAR_uPAT_PatternIds &p);
} ;

class TYPE_TRF_uTAR_uPAT_SeqConcPattern : public Record {
public:

  TYPE_TRF_uTAR_uPAT_SeqConcPattern() : Record(TAG_TYPE_TRF_uTAR_uPAT_SeqConcPattern, 3) {}
  void Init(TYPE_AS_SeqConcPattern p2, TYPE_TRF_uTAR_uPAT_Identifiers p3, TYPE_TRF_uTAR_uPAT_PatternIds p4);

  TYPE_TRF_uTAR_uPAT_SeqConcPattern(const Generic &c) : Record(c) {}

  const char * GetTypeName() const { return "TYPE_TRF_uTAR_uPAT_SeqConcPattern"; }
  TYPE_AS_SeqConcPattern get_pat() const;
  void set_pat(const TYPE_AS_SeqConcPattern &p);
  TYPE_TRF_uTAR_uPAT_Identifiers get_fv() const;
  void set_fv(const TYPE_TRF_uTAR_uPAT_Identifiers &p);
  TYPE_TRF_uTAR_uPAT_PatternIds get_pid() const;
  void set_pid(const TYPE_TRF_uTAR_uPAT_PatternIds &p);
} ;

class TYPE_TRF_uTAR_uPAT_SeqEnumPattern : public Record {
public:

  TYPE_TRF_uTAR_uPAT_SeqEnumPattern() : Record(TAG_TYPE_TRF_uTAR_uPAT_SeqEnumPattern, 3) {}
  void Init(TYPE_AS_SeqEnumPattern p2, TYPE_TRF_uTAR_uPAT_Identifiers p3, TYPE_TRF_uTAR_uPAT_PatternIds p4);

  TYPE_TRF_uTAR_uPAT_SeqEnumPattern(const Generic &c) : Record(c) {}

  const char * GetTypeName() const { return "TYPE_TRF_uTAR_uPAT_SeqEnumPattern"; }
  TYPE_AS_SeqEnumPattern get_pat() const;
  void set_pat(const TYPE_AS_SeqEnumPattern &p);
  TYPE_TRF_uTAR_uPAT_Identifiers get_fv() const;
  void set_fv(const TYPE_TRF_uTAR_uPAT_Identifiers &p);
  TYPE_TRF_uTAR_uPAT_PatternIds get_pid() const;
  void set_pid(const TYPE_TRF_uTAR_uPAT_PatternIds &p);
} ;

class TYPE_TRF_uTAR_uPAT_SetBind : public Record {
public:

  TYPE_TRF_uTAR_uPAT_SetBind() : Record(TAG_TYPE_TRF_uTAR_uPAT_SetBind, 3) {}
  void Init(TYPE_AS_SetBind p2, TYPE_TRF_uTAR_uPAT_Identifiers p3, TYPE_TRF_uTAR_uPAT_PatternIds p4);

  TYPE_TRF_uTAR_uPAT_SetBind(const Generic &c) : Record(c) {}

  const char * GetTypeName() const { return "TYPE_TRF_uTAR_uPAT_SetBind"; }
  TYPE_AS_SetBind get_bd() const;
  void set_bd(const TYPE_AS_SetBind &p);
  TYPE_TRF_uTAR_uPAT_Identifiers get_fv() const;
  void set_fv(const TYPE_TRF_uTAR_uPAT_Identifiers &p);
  TYPE_TRF_uTAR_uPAT_PatternIds get_pid() const;
  void set_pid(const TYPE_TRF_uTAR_uPAT_PatternIds &p);
} ;

class TYPE_TRF_uTAR_uPAT_SetEnumPattern : public Record {
public:

  TYPE_TRF_uTAR_uPAT_SetEnumPattern() : Record(TAG_TYPE_TRF_uTAR_uPAT_SetEnumPattern, 3) {}
  void Init(TYPE_AS_SetEnumPattern p2, TYPE_TRF_uTAR_uPAT_Identifiers p3, TYPE_TRF_uTAR_uPAT_PatternIds p4);

  TYPE_TRF_uTAR_uPAT_SetEnumPattern(const Generic &c) : Record(c) {}

  const char * GetTypeName() const { return "TYPE_TRF_uTAR_uPAT_SetEnumPattern"; }
  TYPE_AS_SetEnumPattern get_pat() const;
  void set_pat(const TYPE_AS_SetEnumPattern &p);
  TYPE_TRF_uTAR_uPAT_Identifiers get_fv() const;
  void set_fv(const TYPE_TRF_uTAR_uPAT_Identifiers &p);
  TYPE_TRF_uTAR_uPAT_PatternIds get_pid() const;
  void set_pid(const TYPE_TRF_uTAR_uPAT_PatternIds &p);
} ;

class TYPE_TRF_uTAR_uPAT_SetUnionPattern : public Record {
public:

  TYPE_TRF_uTAR_uPAT_SetUnionPattern() : Record(TAG_TYPE_TRF_uTAR_uPAT_SetUnionPattern, 3) {}
  void Init(TYPE_AS_Pattern p2, TYPE_TRF_uTAR_uPAT_Identifiers p3, TYPE_TRF_uTAR_uPAT_PatternIds p4);

  TYPE_TRF_uTAR_uPAT_SetUnionPattern(const Generic &c) : Record(c) {}

  const char * GetTypeName() const { return "TYPE_TRF_uTAR_uPAT_SetUnionPattern"; }
  TYPE_AS_Pattern get_pat() const;
  void set_pat(const TYPE_AS_Pattern &p);
  TYPE_TRF_uTAR_uPAT_Identifiers get_fv() const;
  void set_fv(const TYPE_TRF_uTAR_uPAT_Identifiers &p);
  TYPE_TRF_uTAR_uPAT_PatternIds get_pid() const;
  void set_pid(const TYPE_TRF_uTAR_uPAT_PatternIds &p);
} ;

class TYPE_TRF_uTAR_uPAT_TuplePattern : public Record {
public:

  TYPE_TRF_uTAR_uPAT_TuplePattern() : Record(TAG_TYPE_TRF_uTAR_uPAT_TuplePattern, 3) {}
  void Init(TYPE_AS_TuplePattern p2, TYPE_TRF_uTAR_uPAT_Identifiers p3, TYPE_TRF_uTAR_uPAT_PatternIds p4);

  TYPE_TRF_uTAR_uPAT_TuplePattern(const Generic &c) : Record(c) {}

  const char * GetTypeName() const { return "TYPE_TRF_uTAR_uPAT_TuplePattern"; }
  TYPE_AS_TuplePattern get_pat() const;
  void set_pat(const TYPE_AS_TuplePattern &p);
  TYPE_TRF_uTAR_uPAT_Identifiers get_fv() const;
  void set_fv(const TYPE_TRF_uTAR_uPAT_Identifiers &p);
  TYPE_TRF_uTAR_uPAT_PatternIds get_pid() const;
  void set_pid(const TYPE_TRF_uTAR_uPAT_PatternIds &p);
} ;

class TYPE_TRF_uTAR_uPAT_TypeBind : public Record {
public:

  TYPE_TRF_uTAR_uPAT_TypeBind() : Record(TAG_TYPE_TRF_uTAR_uPAT_TypeBind, 3) {}
  void Init(TYPE_AS_TypeBind p2, TYPE_TRF_uTAR_uPAT_Identifiers p3, TYPE_TRF_uTAR_uPAT_PatternIds p4);

  TYPE_TRF_uTAR_uPAT_TypeBind(const Generic &c) : Record(c) {}

  const char * GetTypeName() const { return "TYPE_TRF_uTAR_uPAT_TypeBind"; }
  TYPE_AS_TypeBind get_bd() const;
  void set_bd(const TYPE_AS_TypeBind &p);
  TYPE_TRF_uTAR_uPAT_Identifiers get_fv() const;
  void set_fv(const TYPE_TRF_uTAR_uPAT_Identifiers &p);
  TYPE_TRF_uTAR_uPAT_PatternIds get_pid() const;
  void set_pid(const TYPE_TRF_uTAR_uPAT_PatternIds &p);
} ;
void init_TRF_uTAR_uPAT();
TYPE_TRF_uTAR_uPAT_Pattern vdm_TRF_uTAR_uPAT_DontCare2Care(const TYPE_TRF_uTAR_uPAT_Pattern &, const TYPE_TRF_uTAR_uPAT_Identifiers &);
TYPE_TRF_uTAR_uPAT_Pattern vdm_TRF_uTAR_uPAT_MatchVal2PatternName(const TYPE_TRF_uTAR_uPAT_Pattern &, const TYPE_TRF_uTAR_uPAT_Identifiers &);
TYPE_TRF_uTAR_uPAT_BindList vdm_TRF_uTAR_uPAT_tar_uBindList(const type_dLL &);
TYPE_TRF_uTAR_uPAT_MatchVal vdm_TRF_uTAR_uPAT_tar_uMatchVal(const TYPE_TRF_uTAR_uEXPR_Expr &, const TYPE_CI_ContextId &);
TYPE_TRF_uTAR_uPAT_MultSetBind vdm_TRF_uTAR_uPAT_tar_uMultSetBind(const type_dL &, const TYPE_TRF_uTAR_uEXPR_Expr &, const TYPE_CI_ContextId &);
TYPE_TRF_uTAR_uPAT_MultTypeBind vdm_TRF_uTAR_uPAT_tar_uMultTypeBind(const type_dL &, const TYPE_AS_Type &, const TYPE_TRF_uTAR_uTYPE_Type &, const TYPE_CI_ContextId &);
TYPE_TRF_uTAR_uPAT_PatternName vdm_TRF_uTAR_uPAT_tar_uPatternName(const Generic &, const TYPE_CI_ContextId &);
TYPE_TRF_uTAR_uPAT_RecordPattern vdm_TRF_uTAR_uPAT_tar_uRecordPattern(const TYPE_AS_Name &, const type_dL &, const TYPE_CI_ContextId &);
TYPE_TRF_uTAR_uPAT_SeqConcPattern vdm_TRF_uTAR_uPAT_tar_uSeqConcPattern(const TYPE_TRF_uTAR_uPAT_Pattern &, const TYPE_TRF_uTAR_uPAT_Pattern &, const TYPE_CI_ContextId &);
TYPE_TRF_uTAR_uPAT_SeqEnumPattern vdm_TRF_uTAR_uPAT_tar_uSeqEnumPattern(const type_dL &, const TYPE_CI_ContextId &);
TYPE_TRF_uTAR_uPAT_SetBind vdm_TRF_uTAR_uPAT_tar_uSetBind(const TYPE_TRF_uTAR_uPAT_Pattern &, const TYPE_TRF_uTAR_uEXPR_Expr &, const TYPE_CI_ContextId &);
TYPE_TRF_uTAR_uPAT_SetEnumPattern vdm_TRF_uTAR_uPAT_tar_uSetEnumPattern(const type_dL &, const TYPE_CI_ContextId &);
TYPE_TRF_uTAR_uPAT_SetUnionPattern vdm_TRF_uTAR_uPAT_tar_uSetUnionPattern(const TYPE_TRF_uTAR_uPAT_Pattern &, const TYPE_TRF_uTAR_uPAT_Pattern &, const TYPE_CI_ContextId &);
TYPE_TRF_uTAR_uPAT_TuplePattern vdm_TRF_uTAR_uPAT_tar_uTuplePattern(const type_dL &, const TYPE_CI_ContextId &);
TYPE_TRF_uTAR_uPAT_TypeBind vdm_TRF_uTAR_uPAT_tar_uTypeBind(const TYPE_TRF_uTAR_uPAT_Pattern &, const TYPE_AS_Type &, const TYPE_TRF_uTAR_uTYPE_Type &, const TYPE_CI_ContextId &);

#endif

