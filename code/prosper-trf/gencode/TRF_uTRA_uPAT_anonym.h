//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Thu 21-Oct-99 by the VDM-SLtoC++ Code Generator
// (v3.3 - Mon 22-Mar-99)
//
// Supported compilers:
// 	egcs version 1.1 on SunOS4, SunOS5, Linux, HP-UX10
// 	VC++ version 6.0 on Windows95, Windows NT
//

#ifndef _TRF_uTRA_uPAT_anonym_h
#define _TRF_uTRA_uPAT_anonym_h

#include "TRF_uTRA_uPAT_userdef.h"
#include "metaiv.h"
class type_FL;
class type_FLL;
class type_25TRF_uTAR_uPAT_MULTSETBINDCL;
class type_26TRF_uTAR_uPAT_MULTTYPEBINDCL;
#ifndef TAG_type_FL
#define TAG_type_FL (TAG_TRF_uTRA_uPAT + 1)
#endif

#ifndef TAG_type_FLL
#define TAG_type_FLL (TAG_TRF_uTRA_uPAT + 2)
#endif

#ifndef TAG_type_25TRF_uTAR_uPAT_MULTSETBINDCL
#define TAG_type_25TRF_uTAR_uPAT_MULTSETBINDCL (TAG_TRF_uTRA_uPAT + 3)
#endif

#ifndef TAG_type_26TRF_uTAR_uPAT_MULTTYPEBINDCL
#define TAG_type_26TRF_uTAR_uPAT_MULTTYPEBINDCL (TAG_TRF_uTRA_uPAT + 4)
#endif


#include "AS_anonym.h"
#include "CI_anonym.h"
#include "REP_anonym.h"
#include "TRF_uTAR_uDEF_anonym.h"
#include "TRF_uTAR_uEXPR_anonym.h"
#include "TRF_uTAR_uPAT_anonym.h"
#include "TRF_uTAR_uTYPE_anonym.h"
#include "TRF_uTRA_uEXPR_anonym.h"
#include "TRF_uTRA_uTYPE_anonym.h"
#ifndef DECL_type_FL
#define DECL_type_FL 1

class type_FL : public SEQ<Generic> {
public:

  type_FL() : SEQ<Generic>() {}

  type_FL(const SEQ<Generic> &c) : SEQ<Generic>(c) {}

  type_FL(const Generic &c) : SEQ<Generic>(c) {}

  const char * GetTypeName() const { return "type_FL"; }
} ;
#endif

#ifndef DECL_type_FLL
#define DECL_type_FLL 1

class type_FLL : public SEQ<type_FL> {
public:

  type_FLL() : SEQ<type_FL>() {}

  type_FLL(const SEQ<type_FL> &c) : SEQ<type_FL>(c) {}

  type_FLL(const Generic &c) : SEQ<type_FL>(c) {}

  const char * GetTypeName() const { return "type_FLL"; }
} ;
#endif

#ifndef DECL_type_25TRF_uTAR_uPAT_MULTSETBINDCL
#define DECL_type_25TRF_uTAR_uPAT_MULTSETBINDCL 1

class type_25TRF_uTAR_uPAT_MULTSETBINDCL : public SEQ<TYPE_TRF_uTAR_uPAT_MULTSETBIND> {
public:

  type_25TRF_uTAR_uPAT_MULTSETBINDCL() : SEQ<TYPE_TRF_uTAR_uPAT_MULTSETBIND>() {}

  type_25TRF_uTAR_uPAT_MULTSETBINDCL(const SEQ<TYPE_TRF_uTAR_uPAT_MULTSETBIND> &c) : SEQ<TYPE_TRF_uTAR_uPAT_MULTSETBIND>(c) {}

  type_25TRF_uTAR_uPAT_MULTSETBINDCL(const Generic &c) : SEQ<TYPE_TRF_uTAR_uPAT_MULTSETBIND>(c) {}

  const char * GetTypeName() const { return "type_25TRF_uTAR_uPAT_MULTSETBINDCL"; }
} ;
#endif

#ifndef DECL_type_26TRF_uTAR_uPAT_MULTTYPEBINDCL
#define DECL_type_26TRF_uTAR_uPAT_MULTTYPEBINDCL 1

class type_26TRF_uTAR_uPAT_MULTTYPEBINDCL : public SEQ<TYPE_TRF_uTAR_uPAT_MULTTYPEBIND> {
public:

  type_26TRF_uTAR_uPAT_MULTTYPEBINDCL() : SEQ<TYPE_TRF_uTAR_uPAT_MULTTYPEBIND>() {}

  type_26TRF_uTAR_uPAT_MULTTYPEBINDCL(const SEQ<TYPE_TRF_uTAR_uPAT_MULTTYPEBIND> &c) : SEQ<TYPE_TRF_uTAR_uPAT_MULTTYPEBIND>(c) {}

  type_26TRF_uTAR_uPAT_MULTTYPEBINDCL(const Generic &c) : SEQ<TYPE_TRF_uTAR_uPAT_MULTTYPEBIND>(c) {}

  const char * GetTypeName() const { return "type_26TRF_uTAR_uPAT_MULTTYPEBINDCL"; }
} ;
#endif


#endif

