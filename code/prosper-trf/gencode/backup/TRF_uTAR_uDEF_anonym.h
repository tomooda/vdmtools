//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Wed 20-Oct-99 by the VDM-SLtoC++ Code Generator
// (v3.3 - Mon 22-Mar-99)
//
// Supported compilers:
// 	egcs version 1.1 on SunOS4, SunOS5, Linux, HP-UX10
// 	VC++ version 6.0 on Windows95, Windows NT
//

#ifndef _TRF_uTAR_uDEF_anonym_h
#define _TRF_uTAR_uDEF_anonym_h

#include "TRF_uTAR_uDEF_userdef.h"
#include "metaiv.h"
extern const Quote quote_NOTYETSPEC;
class TYPE_TRF_uTAR_uDEF_FnBody;
class TYPE_TRF_uTAR_uDEF_ValueDef;
class TYPE_TRF_uTAR_uDEF_PATTYPEPAIR;
class type_FL;
class type_25TRF_uTAR_uDEF_PATTYPEPAIRCL;
class type_25TRF_uTAR_uDEF_PATTYPEPAIRCLL;
class type_FLL;
class type_10AS_TypeVarCL;
class type_cL;
class type_cLL;
class type_cLLS;
class type_dL;
class type_19CI_TokenContextInfoCL;
class type_i7AS_NameCM;
class type_7AS_NameC10AS_TypeDefCM;
class type_11AS_ValueDefCL;
class type_7AS_NameC12AS_ExplFnDefCM;
class type_7AS_NameCFM;
class type_11AS_NameTypeCL;
class type_22TRF_uTAR_uDEF_ValueDefCL;
#define TYPE_TRF_uTAR_uDEF_TypeVarList type_10AS_TypeVarCL
#define TYPE_TRF_uTAR_uDEF_TypeDef TYPE_AS_TypeDef
#define TYPE_TRF_uTAR_uDEF_PatTypePair type_25TRF_uTAR_uDEF_PATTYPEPAIRCL
#define TYPE_TRF_uTAR_uDEF_ParametersList type_FLL
#define TYPE_TRF_uTAR_uDEF_Parameters type_FL
#define TYPE_TRF_uTAR_uDEF_ParameterTypes type_25TRF_uTAR_uDEF_PATTYPEPAIRCLL
#define TYPE_TRF_uTAR_uDEF_NameType TYPE_AS_NameType
#define TYPE_TRF_uTAR_uDEF_Module TYPE_AS_Module
#define TYPE_TRF_uTAR_uDEF_LocalDef Record
#define TYPE_TRF_uTAR_uDEF_Invariant TYPE_AS_Invariant
#define TYPE_TRF_uTAR_uDEF_Interface TYPE_AS_Interface
#define TYPE_TRF_uTAR_uDEF_ImplModule TYPE_AS_ImplModule
#define TYPE_TRF_uTAR_uDEF_ImplFnDef TYPE_AS_ExplFnDef
#define TYPE_TRF_uTAR_uDEF_GlobalValueDef TYPE_AS_ValueDef
#define TYPE_TRF_uTAR_uDEF_FnDef TYPE_AS_ExplFnDef
#define TYPE_TRF_uTAR_uDEF_ExtExplFnDef TYPE_AS_ExplFnDef
#define TYPE_TRF_uTAR_uDEF_ExplFnDef TYPE_AS_ExplFnDef
#define TYPE_TRF_uTAR_uDEF_Document type_FL
#define TYPE_TRF_uTAR_uDEF_Definitions TYPE_AS_Definitions
#define TYPE_TRF_uTAR_uDEF_AstCI TYPE_AS_AstCI
#ifndef TAG_type_FL
#define TAG_type_FL (TAG_TRF_uTAR_uDEF + 1)
#endif

#ifndef TAG_type_25TRF_uTAR_uDEF_PATTYPEPAIRCL
#define TAG_type_25TRF_uTAR_uDEF_PATTYPEPAIRCL (TAG_TRF_uTAR_uDEF + 2)
#endif

#ifndef TAG_type_25TRF_uTAR_uDEF_PATTYPEPAIRCLL
#define TAG_type_25TRF_uTAR_uDEF_PATTYPEPAIRCLL (TAG_TRF_uTAR_uDEF + 3)
#endif

#ifndef TAG_type_FLL
#define TAG_type_FLL (TAG_TRF_uTAR_uDEF + 4)
#endif

#ifndef TAG_type_10AS_TypeVarCL
#define TAG_type_10AS_TypeVarCL (TAG_TRF_uTAR_uDEF + 5)
#endif

#ifndef TAG_type_cL
#define TAG_type_cL (TAG_TRF_uTAR_uDEF + 6)
#endif

#ifndef TAG_type_cLL
#define TAG_type_cLL (TAG_TRF_uTAR_uDEF + 7)
#endif

#ifndef TAG_type_cLLS
#define TAG_type_cLLS (TAG_TRF_uTAR_uDEF + 8)
#endif

#ifndef TAG_type_dL
#define TAG_type_dL (TAG_TRF_uTAR_uDEF + 9)
#endif

#ifndef TAG_type_19CI_TokenContextInfoCL
#define TAG_type_19CI_TokenContextInfoCL (TAG_TRF_uTAR_uDEF + 10)
#endif

#ifndef TAG_type_i7AS_NameCM
#define TAG_type_i7AS_NameCM (TAG_TRF_uTAR_uDEF + 11)
#endif

#ifndef TAG_type_7AS_NameC10AS_TypeDefCM
#define TAG_type_7AS_NameC10AS_TypeDefCM (TAG_TRF_uTAR_uDEF + 12)
#endif

#ifndef TAG_type_11AS_ValueDefCL
#define TAG_type_11AS_ValueDefCL (TAG_TRF_uTAR_uDEF + 13)
#endif

#ifndef TAG_type_7AS_NameC12AS_ExplFnDefCM
#define TAG_type_7AS_NameC12AS_ExplFnDefCM (TAG_TRF_uTAR_uDEF + 14)
#endif

#ifndef TAG_type_7AS_NameCFM
#define TAG_type_7AS_NameCFM (TAG_TRF_uTAR_uDEF + 15)
#endif

#ifndef TAG_type_11AS_NameTypeCL
#define TAG_type_11AS_NameTypeCL (TAG_TRF_uTAR_uDEF + 16)
#endif

#ifndef TAG_type_22TRF_uTAR_uDEF_ValueDefCL
#define TAG_type_22TRF_uTAR_uDEF_ValueDefCL (TAG_TRF_uTAR_uDEF + 17)
#endif

#ifndef TAG_quote_NOTYETSPEC
#define TAG_quote_NOTYETSPEC (TAG_TRF_uTAR_uDEF + 18)
#endif


#include "AS_anonym.h"
#include "CAST_anonym.h"
#include "CI_anonym.h"
#include "EXP_uPAT_anonym.h"
#include "REP_anonym.h"
#include "TRF_uTAR_uEXPR_anonym.h"
#include "TRF_uTAR_uPAT_anonym.h"
#include "TRF_uTAR_uTYPE_anonym.h"
#ifndef TAG_TYPE_TRF_uTAR_uDEF_FnBody
#define TAG_TYPE_TRF_uTAR_uDEF_FnBody (TAG_TRF_uTAR_uDEF + 19)
#endif

#ifndef TAG_TYPE_TRF_uTAR_uDEF_ValueDef
#define TAG_TYPE_TRF_uTAR_uDEF_ValueDef (TAG_TRF_uTAR_uDEF + 20)
#endif

#ifndef TAG_TYPE_TRF_uTAR_uDEF_PATTYPEPAIR
#define TAG_TYPE_TRF_uTAR_uDEF_PATTYPEPAIR (TAG_TRF_uTAR_uDEF + 21)
#endif

#ifndef DECL_type_FL
#define DECL_type_FL 1

class type_FL : public SEQ<Generic> {
public:

  type_FL() : SEQ<Generic>() {}

  type_FL(const SEQ<Generic> &c) : SEQ<Generic>(c) {}

  type_FL(const Generic &c) : SEQ<Generic>(c) {}

  const char * GetTypeName() const { return "type_FL"; }
} ;
#endif

#ifndef DECL_type_25TRF_uTAR_uDEF_PATTYPEPAIRCL
#define DECL_type_25TRF_uTAR_uDEF_PATTYPEPAIRCL 1

class type_25TRF_uTAR_uDEF_PATTYPEPAIRCL : public SEQ<TYPE_TRF_uTAR_uDEF_PATTYPEPAIR> {
public:

  type_25TRF_uTAR_uDEF_PATTYPEPAIRCL() : SEQ<TYPE_TRF_uTAR_uDEF_PATTYPEPAIR>() {}

  type_25TRF_uTAR_uDEF_PATTYPEPAIRCL(const SEQ<TYPE_TRF_uTAR_uDEF_PATTYPEPAIR> &c) : SEQ<TYPE_TRF_uTAR_uDEF_PATTYPEPAIR>(c) {}

  type_25TRF_uTAR_uDEF_PATTYPEPAIRCL(const Generic &c) : SEQ<TYPE_TRF_uTAR_uDEF_PATTYPEPAIR>(c) {}

  const char * GetTypeName() const { return "type_25TRF_uTAR_uDEF_PATTYPEPAIRCL"; }
} ;
#endif

#ifndef DECL_type_25TRF_uTAR_uDEF_PATTYPEPAIRCLL
#define DECL_type_25TRF_uTAR_uDEF_PATTYPEPAIRCLL 1

class type_25TRF_uTAR_uDEF_PATTYPEPAIRCLL : public SEQ<type_25TRF_uTAR_uDEF_PATTYPEPAIRCL> {
public:

  type_25TRF_uTAR_uDEF_PATTYPEPAIRCLL() : SEQ<type_25TRF_uTAR_uDEF_PATTYPEPAIRCL>() {}

  type_25TRF_uTAR_uDEF_PATTYPEPAIRCLL(const SEQ<type_25TRF_uTAR_uDEF_PATTYPEPAIRCL> &c) : SEQ<type_25TRF_uTAR_uDEF_PATTYPEPAIRCL>(c) {}

  type_25TRF_uTAR_uDEF_PATTYPEPAIRCLL(const Generic &c) : SEQ<type_25TRF_uTAR_uDEF_PATTYPEPAIRCL>(c) {}

  const char * GetTypeName() const { return "type_25TRF_uTAR_uDEF_PATTYPEPAIRCLL"; }
} ;
#endif

#ifndef DECL_type_FLL
#define DECL_type_FLL 1

class type_FLL : public SEQ<type_FL> {
public:

  type_FLL() : SEQ<type_FL>() {}

  type_FLL(const SEQ<type_FL> &c) : SEQ<type_FL>(c) {}

  type_FLL(const Generic &c) : SEQ<type_FL>(c) {}

  const char * GetTypeName() const { return "type_FLL"; }
} ;
#endif

#ifndef DECL_type_10AS_TypeVarCL
#define DECL_type_10AS_TypeVarCL 1

class type_10AS_TypeVarCL : public SEQ<TYPE_AS_TypeVar> {
public:

  type_10AS_TypeVarCL() : SEQ<TYPE_AS_TypeVar>() {}

  type_10AS_TypeVarCL(const SEQ<TYPE_AS_TypeVar> &c) : SEQ<TYPE_AS_TypeVar>(c) {}

  type_10AS_TypeVarCL(const Generic &c) : SEQ<TYPE_AS_TypeVar>(c) {}

  const char * GetTypeName() const { return "type_10AS_TypeVarCL"; }
} ;
#endif

#ifndef DECL_type_cL
#define DECL_type_cL 1

class type_cL : public SEQ<Char> {
public:

  type_cL() : SEQ<Char>() {}

  type_cL(const SEQ<Char> &c) : SEQ<Char>(c) {}

  type_cL(const Generic &c) : SEQ<Char>(c) {}

  const char * GetTypeName() const { return "type_cL"; }
} ;
#endif

#ifndef DECL_type_cLL
#define DECL_type_cLL 1

class type_cLL : public SEQ<type_cL> {
public:

  type_cLL() : SEQ<type_cL>() {}

  type_cLL(const SEQ<type_cL> &c) : SEQ<type_cL>(c) {}

  type_cLL(const Generic &c) : SEQ<type_cL>(c) {}

  const char * GetTypeName() const { return "type_cLL"; }
} ;
#endif

#ifndef DECL_type_cLLS
#define DECL_type_cLLS 1

class type_cLLS : public SET<type_cLL> {
public:

  type_cLLS() : SET<type_cLL>() {}

  type_cLLS(const SET<type_cLL> &c) : SET<type_cLL>(c) {}

  type_cLLS(const Generic &c) : SET<type_cLL>(c) {}

  const char * GetTypeName() const { return "type_cLLS"; }
} ;
#endif

#ifndef DECL_type_dL
#define DECL_type_dL 1

class type_dL : public SEQ<Record> {
public:

  type_dL() : SEQ<Record>() {}

  type_dL(const SEQ<Record> &c) : SEQ<Record>(c) {}

  type_dL(const Generic &c) : SEQ<Record>(c) {}

  const char * GetTypeName() const { return "type_dL"; }
} ;
#endif

#ifndef DECL_type_19CI_TokenContextInfoCL
#define DECL_type_19CI_TokenContextInfoCL 1

class type_19CI_TokenContextInfoCL : public SEQ<TYPE_CI_TokenContextInfo> {
public:

  type_19CI_TokenContextInfoCL() : SEQ<TYPE_CI_TokenContextInfo>() {}

  type_19CI_TokenContextInfoCL(const SEQ<TYPE_CI_TokenContextInfo> &c) : SEQ<TYPE_CI_TokenContextInfo>(c) {}

  type_19CI_TokenContextInfoCL(const Generic &c) : SEQ<TYPE_CI_TokenContextInfo>(c) {}

  const char * GetTypeName() const { return "type_19CI_TokenContextInfoCL"; }
} ;
#endif

#ifndef DECL_type_i7AS_NameCM
#define DECL_type_i7AS_NameCM 1

class type_i7AS_NameCM : public MAP<Int,TYPE_AS_Name> {
public:

  type_i7AS_NameCM() : MAP<Int,TYPE_AS_Name>() {}

  type_i7AS_NameCM(const MAP<Int,TYPE_AS_Name> &c) : MAP<Int,TYPE_AS_Name>(c) {}

  type_i7AS_NameCM(const Generic &c) : MAP<Int,TYPE_AS_Name>(c) {}

  const char * GetTypeName() const { return "type_i7AS_NameCM"; }
} ;
#endif

#ifndef DECL_type_7AS_NameC10AS_TypeDefCM
#define DECL_type_7AS_NameC10AS_TypeDefCM 1

class type_7AS_NameC10AS_TypeDefCM : public MAP<TYPE_AS_Name,TYPE_AS_TypeDef> {
public:

  type_7AS_NameC10AS_TypeDefCM() : MAP<TYPE_AS_Name,TYPE_AS_TypeDef>() {}

  type_7AS_NameC10AS_TypeDefCM(const MAP<TYPE_AS_Name,TYPE_AS_TypeDef> &c) : MAP<TYPE_AS_Name,TYPE_AS_TypeDef>(c) {}

  type_7AS_NameC10AS_TypeDefCM(const Generic &c) : MAP<TYPE_AS_Name,TYPE_AS_TypeDef>(c) {}

  const char * GetTypeName() const { return "type_7AS_NameC10AS_TypeDefCM"; }
} ;
#endif

#ifndef DECL_type_11AS_ValueDefCL
#define DECL_type_11AS_ValueDefCL 1

class type_11AS_ValueDefCL : public SEQ<TYPE_AS_ValueDef> {
public:

  type_11AS_ValueDefCL() : SEQ<TYPE_AS_ValueDef>() {}

  type_11AS_ValueDefCL(const SEQ<TYPE_AS_ValueDef> &c) : SEQ<TYPE_AS_ValueDef>(c) {}

  type_11AS_ValueDefCL(const Generic &c) : SEQ<TYPE_AS_ValueDef>(c) {}

  const char * GetTypeName() const { return "type_11AS_ValueDefCL"; }
} ;
#endif

#ifndef DECL_type_7AS_NameC12AS_ExplFnDefCM
#define DECL_type_7AS_NameC12AS_ExplFnDefCM 1

class type_7AS_NameC12AS_ExplFnDefCM : public MAP<TYPE_AS_Name,TYPE_AS_ExplFnDef> {
public:

  type_7AS_NameC12AS_ExplFnDefCM() : MAP<TYPE_AS_Name,TYPE_AS_ExplFnDef>() {}

  type_7AS_NameC12AS_ExplFnDefCM(const MAP<TYPE_AS_Name,TYPE_AS_ExplFnDef> &c) : MAP<TYPE_AS_Name,TYPE_AS_ExplFnDef>(c) {}

  type_7AS_NameC12AS_ExplFnDefCM(const Generic &c) : MAP<TYPE_AS_Name,TYPE_AS_ExplFnDef>(c) {}

  const char * GetTypeName() const { return "type_7AS_NameC12AS_ExplFnDefCM"; }
} ;
#endif

#ifndef DECL_type_7AS_NameCFM
#define DECL_type_7AS_NameCFM 1

class type_7AS_NameCFM : public MAP<TYPE_AS_Name,Generic> {
public:

  type_7AS_NameCFM() : MAP<TYPE_AS_Name,Generic>() {}

  type_7AS_NameCFM(const MAP<TYPE_AS_Name,Generic> &c) : MAP<TYPE_AS_Name,Generic>(c) {}

  type_7AS_NameCFM(const Generic &c) : MAP<TYPE_AS_Name,Generic>(c) {}

  const char * GetTypeName() const { return "type_7AS_NameCFM"; }
} ;
#endif

#ifndef DECL_type_11AS_NameTypeCL
#define DECL_type_11AS_NameTypeCL 1

class type_11AS_NameTypeCL : public SEQ<TYPE_AS_NameType> {
public:

  type_11AS_NameTypeCL() : SEQ<TYPE_AS_NameType>() {}

  type_11AS_NameTypeCL(const SEQ<TYPE_AS_NameType> &c) : SEQ<TYPE_AS_NameType>(c) {}

  type_11AS_NameTypeCL(const Generic &c) : SEQ<TYPE_AS_NameType>(c) {}

  const char * GetTypeName() const { return "type_11AS_NameTypeCL"; }
} ;
#endif

#ifndef DECL_type_22TRF_uTAR_uDEF_ValueDefCL
#define DECL_type_22TRF_uTAR_uDEF_ValueDefCL 1

class type_22TRF_uTAR_uDEF_ValueDefCL : public SEQ<TYPE_TRF_uTAR_uDEF_ValueDef> {
public:

  type_22TRF_uTAR_uDEF_ValueDefCL() : SEQ<TYPE_TRF_uTAR_uDEF_ValueDef>() {}

  type_22TRF_uTAR_uDEF_ValueDefCL(const SEQ<TYPE_TRF_uTAR_uDEF_ValueDef> &c) : SEQ<TYPE_TRF_uTAR_uDEF_ValueDef>(c) {}

  type_22TRF_uTAR_uDEF_ValueDefCL(const Generic &c) : SEQ<TYPE_TRF_uTAR_uDEF_ValueDef>(c) {}

  const char * GetTypeName() const { return "type_22TRF_uTAR_uDEF_ValueDefCL"; }
} ;
#endif


#endif

