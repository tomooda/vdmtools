//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Wed 05-Apr-00 by the VDM-SLtoC++ Code Generator
// (v3.3.2 - Thu 02-Dec-99)
//
// Supported compilers:
// 	egcs version 1.1 on SunOS4, SunOS5, Linux, HP-UX10
// 	VC++ version 6.0 on Windows95, Windows NT
//



#include "HOL.h"

void TYPE_HOL_Boolean::Init(Bool p1) { SetField(1, p1); }

Bool TYPE_HOL_Boolean::get_val() const { return (Bool) GetField(1); }

void TYPE_HOL_Boolean::set_val(const Bool &p) { SetField(1, p); }

void TYPE_HOL_Char::Init(Char p1) { SetField(1, p1); }

Char TYPE_HOL_Char::get_val() const { return (Char) GetField(1); }

void TYPE_HOL_Char::set_val(const Char &p) { SetField(1, p); }

void TYPE_HOL_Cond::Init(TYPE_HOL_term p1, TYPE_HOL_term p2, TYPE_HOL_term p3) {
  SetField(1, p1);
  SetField(2, p2);
  SetField(3, p3);
}

TYPE_HOL_term TYPE_HOL_Cond::get_cond() const { return (TYPE_HOL_term) GetField(1); }

void TYPE_HOL_Cond::set_cond(const TYPE_HOL_term &p) { SetField(1, p); }

TYPE_HOL_term TYPE_HOL_Cond::get_larm() const { return (TYPE_HOL_term) GetField(2); }

void TYPE_HOL_Cond::set_larm(const TYPE_HOL_term &p) { SetField(2, p); }

TYPE_HOL_term TYPE_HOL_Cond::get_rarm() const { return (TYPE_HOL_term) GetField(3); }

void TYPE_HOL_Cond::set_rarm(const TYPE_HOL_term &p) { SetField(3, p); }

void TYPE_HOL_Const::Init(TYPE_HOL_const_uname p1, TYPE_HOL_term_utype p2) {
  SetField(1, p1);
  SetField(2, p2);
}

TYPE_HOL_const_uname TYPE_HOL_Const::get_Name() const { return (TYPE_HOL_const_uname) GetField(1); }

void TYPE_HOL_Const::set_Name(const TYPE_HOL_const_uname &p) { SetField(1, p); }

TYPE_HOL_term_utype TYPE_HOL_Const::get_Ty() const { return (TYPE_HOL_term_utype) GetField(2); }

void TYPE_HOL_Const::set_Ty(const TYPE_HOL_term_utype &p) { SetField(2, p); }

void TYPE_HOL_Eq::Init(TYPE_HOL_term p1, TYPE_HOL_term p2) {
  SetField(1, p1);
  SetField(2, p2);
}

TYPE_HOL_term TYPE_HOL_Eq::get_lhs() const { return (TYPE_HOL_term) GetField(1); }

void TYPE_HOL_Eq::set_lhs(const TYPE_HOL_term &p) { SetField(1, p); }

TYPE_HOL_term TYPE_HOL_Eq::get_rhs() const { return (TYPE_HOL_term) GetField(2); }

void TYPE_HOL_Eq::set_rhs(const TYPE_HOL_term &p) { SetField(2, p); }

void TYPE_HOL_Imp::Init(TYPE_HOL_term p1, TYPE_HOL_term p2) {
  SetField(1, p1);
  SetField(2, p2);
}

TYPE_HOL_term TYPE_HOL_Imp::get_ant() const { return (TYPE_HOL_term) GetField(1); }

void TYPE_HOL_Imp::set_ant(const TYPE_HOL_term &p) { SetField(1, p); }

TYPE_HOL_term TYPE_HOL_Imp::get_conseq() const { return (TYPE_HOL_term) GetField(2); }

void TYPE_HOL_Imp::set_conseq(const TYPE_HOL_term &p) { SetField(2, p); }

void TYPE_HOL_Ind::Init(Token p1) { SetField(1, p1); }

Token TYPE_HOL_Ind::get_val() const { return (Token) GetField(1); }

void TYPE_HOL_Ind::set_val(const Token &p) { SetField(1, p); }

void TYPE_HOL_Integer::Init(Int p1) { SetField(1, p1); }

Int TYPE_HOL_Integer::get_val() const { return (Int) GetField(1); }

void TYPE_HOL_Integer::set_val(const Int &p) { SetField(1, p); }

void TYPE_HOL_Neg::Init(TYPE_HOL_term p1) { SetField(1, p1); }

TYPE_HOL_term TYPE_HOL_Neg::get_Term() const { return (TYPE_HOL_term) GetField(1); }

void TYPE_HOL_Neg::set_Term(const TYPE_HOL_term &p) { SetField(1, p); }

void TYPE_HOL_Numeral::Init(Int p1) { SetField(1, p1); }

Int TYPE_HOL_Numeral::get_val() const { return (Int) GetField(1); }

void TYPE_HOL_Numeral::set_val(const Int &p) { SetField(1, p); }

void TYPE_HOL_Proj::Init(Int p1, TYPE_HOL_Prod_utype p2) {
  SetField(1, p1);
  SetField(2, p2);
}

Int TYPE_HOL_Proj::get_i() const { return (Int) GetField(1); }

void TYPE_HOL_Proj::set_i(const Int &p) { SetField(1, p); }

TYPE_HOL_Prod_utype TYPE_HOL_Proj::get_tp() const { return (TYPE_HOL_Prod_utype) GetField(2); }

void TYPE_HOL_Proj::set_tp(const TYPE_HOL_Prod_utype &p) { SetField(2, p); }

void TYPE_HOL_Real::Init(Real p1) { SetField(1, p1); }

Real TYPE_HOL_Real::get_val() const { return (Real) GetField(1); }

void TYPE_HOL_Real::set_val(const Real &p) { SetField(1, p); }

void TYPE_HOL_Select::Init(TYPE_HOL_bound_uvar p1, TYPE_HOL_term p2) {
  SetField(1, p1);
  SetField(2, p2);
}

TYPE_HOL_bound_uvar TYPE_HOL_Select::get_Bvar() const { return (TYPE_HOL_bound_uvar) GetField(1); }

void TYPE_HOL_Select::set_Bvar(const TYPE_HOL_bound_uvar &p) { SetField(1, p); }

TYPE_HOL_term TYPE_HOL_Select::get_Body() const { return (TYPE_HOL_term) GetField(2); }

void TYPE_HOL_Select::set_Body(const TYPE_HOL_term &p) { SetField(2, p); }

void TYPE_HOL_String::Init(type_cL p1) { SetField(1, p1); }

type_cL TYPE_HOL_String::get_val() const { return (type_cL) GetField(1); }

void TYPE_HOL_String::set_val(const type_cL &p) { SetField(1, p); }

void TYPE_HOL_Var::Init(TYPE_HOL_var_uname p1, TYPE_HOL_type_uexpr p2) {
  SetField(1, p1);
  SetField(2, p2);
}

TYPE_HOL_var_uname TYPE_HOL_Var::get_Name() const { return (TYPE_HOL_var_uname) GetField(1); }

void TYPE_HOL_Var::set_Name(const TYPE_HOL_var_uname &p) { SetField(1, p); }

TYPE_HOL_type_uexpr TYPE_HOL_Var::get_Ty() const { return (TYPE_HOL_type_uexpr) GetField(2); }

void TYPE_HOL_Var::set_Ty(const TYPE_HOL_type_uexpr &p) { SetField(2, p); }

void TYPE_HOL_Set::Init(type_dL p1, TYPE_HOL_term_utype p2) {
  SetField(1, p1);
  SetField(2, p2);
}

type_dL TYPE_HOL_Set::get_elms() const { return (type_dL) GetField(1); }

void TYPE_HOL_Set::set_elms(const type_dL &p) { SetField(1, p); }

TYPE_HOL_term_utype TYPE_HOL_Set::get_tp() const { return (TYPE_HOL_term_utype) GetField(2); }

void TYPE_HOL_Set::set_tp(const TYPE_HOL_term_utype &p) { SetField(2, p); }

void TYPE_HOL_Pair::Init(type_dL p1) { SetField(1, p1); }

type_dL TYPE_HOL_Pair::get_elms() const { return (type_dL) GetField(1); }

void TYPE_HOL_Pair::set_elms(const type_dL &p) { SetField(1, p); }

void TYPE_HOL_Map::Init(type_dL p1, TYPE_HOL_term_utype p2) {
  SetField(1, p1);
  SetField(2, p2);
}

type_dL TYPE_HOL_Map::get_elms() const { return (type_dL) GetField(1); }

void TYPE_HOL_Map::set_elms(const type_dL &p) { SetField(1, p); }

TYPE_HOL_term_utype TYPE_HOL_Map::get_tp() const { return (TYPE_HOL_term_utype) GetField(2); }

void TYPE_HOL_Map::set_tp(const TYPE_HOL_term_utype &p) { SetField(2, p); }

void TYPE_HOL_List::Init(type_dL p1, TYPE_HOL_term_utype p2) {
  SetField(1, p1);
  SetField(2, p2);
}

type_dL TYPE_HOL_List::get_elms() const { return (type_dL) GetField(1); }

void TYPE_HOL_List::set_elms(const type_dL &p) { SetField(1, p); }

TYPE_HOL_term_utype TYPE_HOL_List::get_tp() const { return (TYPE_HOL_term_utype) GetField(2); }

void TYPE_HOL_List::set_tp(const TYPE_HOL_term_utype &p) { SetField(2, p); }

void TYPE_HOL_Let::Init(TYPE_HOL_term p1, type_dd2PL p2) {
  SetField(1, p1);
  SetField(2, p2);
}

TYPE_HOL_term TYPE_HOL_Let::get_body() const { return (TYPE_HOL_term) GetField(1); }

void TYPE_HOL_Let::set_body(const TYPE_HOL_term &p) { SetField(1, p); }

type_dd2PL TYPE_HOL_Let::get_defs() const { return (type_dd2PL) GetField(2); }

void TYPE_HOL_Let::set_defs(const type_dd2PL &p) { SetField(2, p); }

void TYPE_HOL_Forall::Init(type_dL p1, TYPE_HOL_term p2) {
  SetField(1, p1);
  SetField(2, p2);
}

type_dL TYPE_HOL_Forall::get_Bvar() const { return (type_dL) GetField(1); }

void TYPE_HOL_Forall::set_Bvar(const type_dL &p) { SetField(1, p); }

TYPE_HOL_term TYPE_HOL_Forall::get_Body() const { return (TYPE_HOL_term) GetField(2); }

void TYPE_HOL_Forall::set_Body(const TYPE_HOL_term &p) { SetField(2, p); }

void TYPE_HOL_Exists1::Init(type_dL p1, TYPE_HOL_term p2) {
  SetField(1, p1);
  SetField(2, p2);
}

type_dL TYPE_HOL_Exists1::get_Bvar() const { return (type_dL) GetField(1); }

void TYPE_HOL_Exists1::set_Bvar(const type_dL &p) { SetField(1, p); }

TYPE_HOL_term TYPE_HOL_Exists1::get_Body() const { return (TYPE_HOL_term) GetField(2); }

void TYPE_HOL_Exists1::set_Body(const TYPE_HOL_term &p) { SetField(2, p); }

void TYPE_HOL_Exists::Init(type_dL p1, TYPE_HOL_term p2) {
  SetField(1, p1);
  SetField(2, p2);
}

type_dL TYPE_HOL_Exists::get_Bvar() const { return (type_dL) GetField(1); }

void TYPE_HOL_Exists::set_Bvar(const type_dL &p) { SetField(1, p); }

TYPE_HOL_term TYPE_HOL_Exists::get_Body() const { return (TYPE_HOL_term) GetField(2); }

void TYPE_HOL_Exists::set_Body(const TYPE_HOL_term &p) { SetField(2, p); }

void TYPE_HOL_Disj::Init(type_dL p1) { SetField(1, p1); }

type_dL TYPE_HOL_Disj::get_disjs() const { return (type_dL) GetField(1); }

void TYPE_HOL_Disj::set_disjs(const type_dL &p) { SetField(1, p); }

void TYPE_HOL_Conj::Init(type_dL p1) { SetField(1, p1); }

type_dL TYPE_HOL_Conj::get_conjs() const { return (type_dL) GetField(1); }

void TYPE_HOL_Conj::set_conjs(const type_dL &p) { SetField(1, p); }

void TYPE_HOL_Comb::Init(TYPE_HOL_term p1, type_dL p2) {
  SetField(1, p1);
  SetField(2, p2);
}

TYPE_HOL_term TYPE_HOL_Comb::get_Rator() const { return (TYPE_HOL_term) GetField(1); }

void TYPE_HOL_Comb::set_Rator(const TYPE_HOL_term &p) { SetField(1, p); }

type_dL TYPE_HOL_Comb::get_Rand() const { return (type_dL) GetField(2); }

void TYPE_HOL_Comb::set_Rand(const type_dL &p) { SetField(2, p); }

void TYPE_HOL_Abs::Init(type_dL p1, TYPE_HOL_term p2) {
  SetField(1, p1);
  SetField(2, p2);
}

type_dL TYPE_HOL_Abs::get_Bvar() const { return (type_dL) GetField(1); }

void TYPE_HOL_Abs::set_Bvar(const type_dL &p) { SetField(1, p); }

TYPE_HOL_term TYPE_HOL_Abs::get_Body() const { return (TYPE_HOL_term) GetField(2); }

void TYPE_HOL_Abs::set_Body(const TYPE_HOL_term &p) { SetField(2, p); }

void TYPE_HOL_Bool_utype::Init() {}

void TYPE_HOL_Char_utype::Init() {}

void TYPE_HOL_Ind_utype::Init() {}

void TYPE_HOL_Int_utype::Init() {}

void TYPE_HOL_List_utype::Init(TYPE_HOL_term_utype p1) { SetField(1, p1); }

TYPE_HOL_term_utype TYPE_HOL_List_utype::get_elmtp() const { return (TYPE_HOL_term_utype) GetField(1); }

void TYPE_HOL_List_utype::set_elmtp(const TYPE_HOL_term_utype &p) { SetField(1, p); }

void TYPE_HOL_Num_utype::Init() {}

void TYPE_HOL_Option_utype::Init(TYPE_HOL_term_utype p1) { SetField(1, p1); }

TYPE_HOL_term_utype TYPE_HOL_Option_utype::get_elmtp() const { return (TYPE_HOL_term_utype) GetField(1); }

void TYPE_HOL_Option_utype::set_elmtp(const TYPE_HOL_term_utype &p) { SetField(1, p); }

void TYPE_HOL_Real_utype::Init() {}

void TYPE_HOL_Set_utype::Init(TYPE_HOL_term_utype p1) { SetField(1, p1); }

TYPE_HOL_term_utype TYPE_HOL_Set_utype::get_elmtp() const { return (TYPE_HOL_term_utype) GetField(1); }

void TYPE_HOL_Set_utype::set_elmtp(const TYPE_HOL_term_utype &p) { SetField(1, p); }

void TYPE_HOL_quote_utype::Init(TYPE_HOL_type_uname p1) { SetField(1, p1); }

TYPE_HOL_type_uname TYPE_HOL_quote_utype::get_name() const { return (TYPE_HOL_type_uname) GetField(1); }

void TYPE_HOL_quote_utype::set_name(const TYPE_HOL_type_uname &p) { SetField(1, p); }

void TYPE_HOL_field::Init(TYPE_HOL_field_uname p1, TYPE_HOL_term_utype p2) {
  SetField(1, p1);
  SetField(2, p2);
}

TYPE_HOL_field_uname TYPE_HOL_field::get_name() const { return (TYPE_HOL_field_uname) GetField(1); }

void TYPE_HOL_field::set_name(const TYPE_HOL_field_uname &p) { SetField(1, p); }

TYPE_HOL_term_utype TYPE_HOL_field::get_tp() const { return (TYPE_HOL_term_utype) GetField(2); }

void TYPE_HOL_field::set_tp(const TYPE_HOL_term_utype &p) { SetField(2, p); }

void TYPE_HOL_record::Init(TYPE_HOL_type_uname p1, type_9HOL_fieldCL p2) {
  SetField(1, p1);
  SetField(2, p2);
}

TYPE_HOL_type_uname TYPE_HOL_record::get_tag() const { return (TYPE_HOL_type_uname) GetField(1); }

void TYPE_HOL_record::set_tag(const TYPE_HOL_type_uname &p) { SetField(1, p); }

type_9HOL_fieldCL TYPE_HOL_record::get_fields() const { return (type_9HOL_fieldCL) GetField(2); }

void TYPE_HOL_record::set_fields(const type_9HOL_fieldCL &p) { SetField(2, p); }

void TYPE_HOL_vartype::Init(TYPE_HOL_type_uname p1) { SetField(1, p1); }

TYPE_HOL_type_uname TYPE_HOL_vartype::get_name() const { return (TYPE_HOL_type_uname) GetField(1); }

void TYPE_HOL_vartype::set_name(const TYPE_HOL_type_uname &p) { SetField(1, p); }

void TYPE_HOL_type::Init(TYPE_HOL_type_uname p1, type_dL p2) {
  SetField(1, p1);
  SetField(2, p2);
}

TYPE_HOL_type_uname TYPE_HOL_type::get_name() const { return (TYPE_HOL_type_uname) GetField(1); }

void TYPE_HOL_type::set_name(const TYPE_HOL_type_uname &p) { SetField(1, p); }

type_dL TYPE_HOL_type::get_args() const { return (type_dL) GetField(2); }

void TYPE_HOL_type::set_args(const type_dL &p) { SetField(2, p); }

void TYPE_HOL_sum::Init(type_dL p1) { SetField(1, p1); }

type_dL TYPE_HOL_sum::get_elms() const { return (type_dL) GetField(1); }

void TYPE_HOL_sum::set_elms(const type_dL &p) { SetField(1, p); }

void TYPE_HOL_Prod_utype::Init(type_dL p1) { SetField(1, p1); }

type_dL TYPE_HOL_Prod_utype::get_elmtps() const { return (type_dL) GetField(1); }

void TYPE_HOL_Prod_utype::set_elmtps(const type_dL &p) { SetField(1, p); }

void TYPE_HOL_Map_utype::Init(type_dL p1) { SetField(1, p1); }

type_dL TYPE_HOL_Map_utype::get_elmtps() const { return (type_dL) GetField(1); }

void TYPE_HOL_Map_utype::set_elmtps(const type_dL &p) { SetField(1, p); }

void TYPE_HOL_Fun_utype::Init(type_dL p1) { SetField(1, p1); }

type_dL TYPE_HOL_Fun_utype::get_elmtps() const { return (type_dL) GetField(1); }

void TYPE_HOL_Fun_utype::set_elmtps(const type_dL &p) { SetField(1, p); }

void TYPE_HOL_const_udef::Init(TYPE_HOL_func_uname p1, TYPE_HOL_term_utype p2, TYPE_HOL_term p3) {
  SetField(1, p1);
  SetField(2, p2);
  SetField(3, p3);
}

TYPE_HOL_func_uname TYPE_HOL_const_udef::get_name() const { return (TYPE_HOL_func_uname) GetField(1); }

void TYPE_HOL_const_udef::set_name(const TYPE_HOL_func_uname &p) { SetField(1, p); }

TYPE_HOL_term_utype TYPE_HOL_const_udef::get_type() const { return (TYPE_HOL_term_utype) GetField(2); }

void TYPE_HOL_const_udef::set_type(const TYPE_HOL_term_utype &p) { SetField(2, p); }

TYPE_HOL_term TYPE_HOL_const_udef::get_expr() const { return (TYPE_HOL_term) GetField(3); }

void TYPE_HOL_const_udef::set_expr(const TYPE_HOL_term &p) { SetField(3, p); }

void TYPE_HOL_datatype_udef::Init(TYPE_HOL_type_uname p1, TYPE_HOL_datatype p2) {
  SetField(1, p1);
  SetField(2, p2);
}

TYPE_HOL_type_uname TYPE_HOL_datatype_udef::get_name() const { return (TYPE_HOL_type_uname) GetField(1); }

void TYPE_HOL_datatype_udef::set_name(const TYPE_HOL_type_uname &p) { SetField(1, p); }

TYPE_HOL_datatype TYPE_HOL_datatype_udef::get_type() const { return (TYPE_HOL_datatype) GetField(2); }

void TYPE_HOL_datatype_udef::set_type(const TYPE_HOL_datatype &p) { SetField(2, p); }

void TYPE_HOL_func_udef::Init(TYPE_HOL_func_uname p1, TYPE_HOL_term_utype p2, type_dL p3, TYPE_HOL_term p4) {
  SetField(1, p1);
  SetField(2, p2);
  SetField(3, p3);
  SetField(4, p4);
}

TYPE_HOL_func_uname TYPE_HOL_func_udef::get_name() const { return (TYPE_HOL_func_uname) GetField(1); }

void TYPE_HOL_func_udef::set_name(const TYPE_HOL_func_uname &p) { SetField(1, p); }

TYPE_HOL_term_utype TYPE_HOL_func_udef::get_fntype() const { return (TYPE_HOL_term_utype) GetField(2); }

void TYPE_HOL_func_udef::set_fntype(const TYPE_HOL_term_utype &p) { SetField(2, p); }

type_dL TYPE_HOL_func_udef::get_parms() const { return (type_dL) GetField(3); }

void TYPE_HOL_func_udef::set_parms(const type_dL &p) { SetField(3, p); }

TYPE_HOL_term TYPE_HOL_func_udef::get_body() const { return (TYPE_HOL_term) GetField(4); }

void TYPE_HOL_func_udef::set_body(const TYPE_HOL_term &p) { SetField(4, p); }

void TYPE_HOL_pred_udef::Init(TYPE_HOL_func_uname p1, TYPE_HOL_term_utype p2, type_dL p3, TYPE_HOL_term p4) {
  SetField(1, p1);
  SetField(2, p2);
  SetField(3, p3);
  SetField(4, p4);
}

TYPE_HOL_func_uname TYPE_HOL_pred_udef::get_name() const { return (TYPE_HOL_func_uname) GetField(1); }

void TYPE_HOL_pred_udef::set_name(const TYPE_HOL_func_uname &p) { SetField(1, p); }

TYPE_HOL_term_utype TYPE_HOL_pred_udef::get_fntype() const { return (TYPE_HOL_term_utype) GetField(2); }

void TYPE_HOL_pred_udef::set_fntype(const TYPE_HOL_term_utype &p) { SetField(2, p); }

type_dL TYPE_HOL_pred_udef::get_parms() const { return (type_dL) GetField(3); }

void TYPE_HOL_pred_udef::set_parms(const type_dL &p) { SetField(3, p); }

TYPE_HOL_term TYPE_HOL_pred_udef::get_body() const { return (TYPE_HOL_term) GetField(4); }

void TYPE_HOL_pred_udef::set_body(const TYPE_HOL_term &p) { SetField(4, p); }

void TYPE_HOL_select_udef::Init(TYPE_HOL_func_uname p1, TYPE_HOL_term_utype p2, type_dL p3, TYPE_HOL_term p4) {
  SetField(1, p1);
  SetField(2, p2);
  SetField(3, p3);
  SetField(4, p4);
}

TYPE_HOL_func_uname TYPE_HOL_select_udef::get_name() const { return (TYPE_HOL_func_uname) GetField(1); }

void TYPE_HOL_select_udef::set_name(const TYPE_HOL_func_uname &p) { SetField(1, p); }

TYPE_HOL_term_utype TYPE_HOL_select_udef::get_fntype() const { return (TYPE_HOL_term_utype) GetField(2); }

void TYPE_HOL_select_udef::set_fntype(const TYPE_HOL_term_utype &p) { SetField(2, p); }

type_dL TYPE_HOL_select_udef::get_parms() const { return (type_dL) GetField(3); }

void TYPE_HOL_select_udef::set_parms(const type_dL &p) { SetField(3, p); }

TYPE_HOL_term TYPE_HOL_select_udef::get_body() const { return (TYPE_HOL_term) GetField(4); }

void TYPE_HOL_select_udef::set_body(const TYPE_HOL_term &p) { SetField(4, p); }

void TYPE_HOL_po_udef::Init(TYPE_HOL_func_uname p1, TYPE_HOL_term p2) {
  SetField(1, p1);
  SetField(2, p2);
}

TYPE_HOL_func_uname TYPE_HOL_po_udef::get_name() const { return (TYPE_HOL_func_uname) GetField(1); }

void TYPE_HOL_po_udef::set_name(const TYPE_HOL_func_uname &p) { SetField(1, p); }

TYPE_HOL_term TYPE_HOL_po_udef::get_expr() const { return (TYPE_HOL_term) GetField(2); }

void TYPE_HOL_po_udef::set_expr(const TYPE_HOL_term &p) { SetField(2, p); }

void TYPE_HOL_type_uabbrev_udef::Init(TYPE_HOL_type_uname p1, TYPE_HOL_term_utype p2) {
  SetField(1, p1);
  SetField(2, p2);
}

TYPE_HOL_type_uname TYPE_HOL_type_uabbrev_udef::get_name() const { return (TYPE_HOL_type_uname) GetField(1); }

void TYPE_HOL_type_uabbrev_udef::set_name(const TYPE_HOL_type_uname &p) { SetField(1, p); }

TYPE_HOL_term_utype TYPE_HOL_type_uabbrev_udef::get_type() const { return (TYPE_HOL_term_utype) GetField(2); }

void TYPE_HOL_type_uabbrev_udef::set_type(const TYPE_HOL_term_utype &p) { SetField(2, p); }

void TYPE_HOL_spec::Init(type_dLL p1, type_dLL p2, type_11HOL_po_udefCL p3) {
  SetField(1, p1);
  SetField(2, p2);
  SetField(3, p3);
}

type_dLL TYPE_HOL_spec::get_tpdefs() const { return (type_dLL) GetField(1); }

void TYPE_HOL_spec::set_tpdefs(const type_dLL &p) { SetField(1, p); }

type_dLL TYPE_HOL_spec::get_fndefs() const { return (type_dLL) GetField(2); }

void TYPE_HOL_spec::set_fndefs(const type_dLL &p) { SetField(2, p); }

type_11HOL_po_udefCL TYPE_HOL_spec::get_podefs() const { return (type_11HOL_po_udefCL) GetField(3); }

void TYPE_HOL_spec::set_podefs(const type_11HOL_po_udefCL &p) { SetField(3, p); }

void init_HOL_VDMLib() {
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_Abs, 2);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_Abs, "HOL`Abs");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_Bool_utype, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_Bool_utype, "HOL`Bool_utype");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_Boolean, 1);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_Boolean, "HOL`Boolean");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_Char, 1);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_Char, "HOL`Char");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_Char_utype, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_Char_utype, "HOL`Char_utype");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_Comb, 2);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_Comb, "HOL`Comb");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_Cond, 3);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_Cond, "HOL`Cond");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_Conj, 1);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_Conj, "HOL`Conj");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_Const, 2);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_Const, "HOL`Const");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_Disj, 1);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_Disj, "HOL`Disj");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_Eq, 2);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_Eq, "HOL`Eq");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_Exists, 2);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_Exists, "HOL`Exists");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_Exists1, 2);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_Exists1, "HOL`Exists1");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_Forall, 2);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_Forall, "HOL`Forall");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_Fun_utype, 1);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_Fun_utype, "HOL`Fun_utype");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_Imp, 2);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_Imp, "HOL`Imp");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_Ind, 1);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_Ind, "HOL`Ind");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_Ind_utype, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_Ind_utype, "HOL`Ind_utype");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_Int_utype, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_Int_utype, "HOL`Int_utype");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_Integer, 1);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_Integer, "HOL`Integer");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_Let, 2);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_Let, "HOL`Let");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_List, 2);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_List, "HOL`List");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_List_utype, 1);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_List_utype, "HOL`List_utype");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_Map, 2);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_Map, "HOL`Map");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_Map_utype, 1);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_Map_utype, "HOL`Map_utype");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_Neg, 1);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_Neg, "HOL`Neg");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_Num_utype, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_Num_utype, "HOL`Num_utype");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_Numeral, 1);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_Numeral, "HOL`Numeral");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_Option_utype, 1);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_Option_utype, "HOL`Option_utype");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_Pair, 1);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_Pair, "HOL`Pair");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_Prod_utype, 1);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_Prod_utype, "HOL`Prod_utype");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_Proj, 2);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_Proj, "HOL`Proj");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_Real, 1);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_Real, "HOL`Real");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_Real_utype, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_Real_utype, "HOL`Real_utype");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_Select, 2);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_Select, "HOL`Select");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_Set, 2);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_Set, "HOL`Set");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_Set_utype, 1);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_Set_utype, "HOL`Set_utype");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_String, 1);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_String, "HOL`String");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_Var, 2);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_Var, "HOL`Var");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_const_udef, 3);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_const_udef, "HOL`const_udef");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_datatype_udef, 2);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_datatype_udef, "HOL`datatype_udef");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_field, 2);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_field, "HOL`field");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_func_udef, 4);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_func_udef, "HOL`func_udef");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_po_udef, 2);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_po_udef, "HOL`po_udef");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_pred_udef, 4);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_pred_udef, "HOL`pred_udef");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_quote_utype, 1);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_quote_utype, "HOL`quote_utype");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_record, 2);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_record, "HOL`record");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_select_udef, 4);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_select_udef, "HOL`select_udef");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_spec, 3);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_spec, "HOL`spec");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_sum, 1);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_sum, "HOL`sum");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_type, 2);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_type, "HOL`type");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_type_uabbrev_udef, 2);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_type_uabbrev_udef, "HOL`type_uabbrev_udef");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_HOL_vartype, 1);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_HOL_vartype, "HOL`vartype");
  VDMGetDefaultRecInfoMap().NewTag(TOKEN, 1);
  VDMGetDefaultRecInfoMap().SetSymTag(TOKEN, "token");
}
#ifdef DEF_HOL_USERIMPL

#include "HOL_userimpl.cc"

#endif


void init_HOL() { init_HOL_VDMLib(); }
