//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Wed 13-Oct-99 by the VDM-SLtoC++ Code Generator
// (v3.3 - Mon 22-Mar-99)
//
// Supported compilers:
// 	egcs version 1.1 on SunOS4, SunOS5, Linux, HP-UX10
// 	VC++ version 6.0 on Windows95, Windows NT
//

#ifndef _TRANS_anonym_h
#define _TRANS_anonym_h

#include "TRANS_userdef.h"
#include "metaiv.h"
extern const Quote quote_APPLY;
extern const Quote quote_ARBITRARY;
extern const Quote quote_CASES;
extern const Quote quote_FAPPLY;
extern const Quote quote_LET_BE_ST;
extern const Quote quote_MAPCOMP;
extern const Quote quote_MAPENUM;
extern const Quote quote_MOVERRIDE;
extern const Quote quote_PROJ;
extern const Quote quote_RECORDCONS;
extern const Quote quote_RECORDMODIF;
extern const Quote quote_SEQAPPLY;
extern const Quote quote_SEQCOMP;
extern const Quote quote_SEQENUM;
extern const Quote quote_SEQMODIF;
extern const Quote quote_SETCOMP;
extern const Quote quote_SETENUM;
extern const Quote quote_SETRANGE;
extern const Quote quote_SUBSEQ;
extern const Quote quote_TOKENCONS;
extern const Quote quote_TUPLECONS;
extern const Quote quote_AND;
extern const Quote quote_COMPOSE;
extern const Quote quote_EQ;
extern const Quote quote_EQUIV;
extern const Quote quote_IMPLY;
extern const Quote quote_INSET;
extern const Quote quote_INTDIV;
extern const Quote quote_MAPDOMRESTBY;
extern const Quote quote_MAPDOMRESTTO;
extern const Quote quote_MAPMERGE;
extern const Quote quote_MAPRNGRESTBY;
extern const Quote quote_MAPRNGRESTTO;
extern const Quote quote_NE;
extern const Quote quote_NOTINSET;
extern const Quote quote_NUMDIV;
extern const Quote quote_NUMEXP;
extern const Quote quote_NUMGE;
extern const Quote quote_NUMGT;
extern const Quote quote_NUMLE;
extern const Quote quote_NUMLT;
extern const Quote quote_NUMMINUS;
extern const Quote quote_NUMMOD;
extern const Quote quote_NUMMULT;
extern const Quote quote_NUMPLUS;
extern const Quote quote_NUMREM;
extern const Quote quote_OR;
extern const Quote quote_PROPERSUBSET;
extern const Quote quote_SEQCONC;
extern const Quote quote_SETINTERSECT;
extern const Quote quote_SETMINUS;
extern const Quote quote_SETUNION;
extern const Quote quote_SUBSET;
extern const Quote quote_FLOOR;
extern const Quote quote_MAPDISTRMERGE;
extern const Quote quote_MAPDOM;
extern const Quote quote_MAPRNG;
extern const Quote quote_NOT;
extern const Quote quote_NUMABS;
extern const Quote quote_SEQDISTRCONC;
extern const Quote quote_SEQELEMS;
extern const Quote quote_SEQHEAD;
extern const Quote quote_SEQINDICES;
extern const Quote quote_SEQLEN;
extern const Quote quote_SEQTAIL;
extern const Quote quote_SETCARD;
extern const Quote quote_SETDISTRINTERSECT;
extern const Quote quote_SETDISTRUNION;
extern const Quote quote_SETPOWER;
class type_FL;
#define TYPE_TRANS_VdmToHol Generic
#ifndef TAG_type_FL
#define TAG_type_FL (TAG_TRANS + 1)
#endif

#ifndef TAG_quote_APPLY
#define TAG_quote_APPLY (TAG_TRANS + 2)
#endif

#ifndef TAG_quote_ARBITRARY
#define TAG_quote_ARBITRARY (TAG_TRANS + 3)
#endif

#ifndef TAG_quote_CASES
#define TAG_quote_CASES (TAG_TRANS + 4)
#endif

#ifndef TAG_quote_FAPPLY
#define TAG_quote_FAPPLY (TAG_TRANS + 5)
#endif

#ifndef TAG_quote_LET_BE_ST
#define TAG_quote_LET_BE_ST (TAG_TRANS + 6)
#endif

#ifndef TAG_quote_MAPCOMP
#define TAG_quote_MAPCOMP (TAG_TRANS + 7)
#endif

#ifndef TAG_quote_MAPENUM
#define TAG_quote_MAPENUM (TAG_TRANS + 8)
#endif

#ifndef TAG_quote_MOVERRIDE
#define TAG_quote_MOVERRIDE (TAG_TRANS + 9)
#endif

#ifndef TAG_quote_PROJ
#define TAG_quote_PROJ (TAG_TRANS + 10)
#endif

#ifndef TAG_quote_RECORDCONS
#define TAG_quote_RECORDCONS (TAG_TRANS + 11)
#endif

#ifndef TAG_quote_RECORDMODIF
#define TAG_quote_RECORDMODIF (TAG_TRANS + 12)
#endif

#ifndef TAG_quote_SEQAPPLY
#define TAG_quote_SEQAPPLY (TAG_TRANS + 13)
#endif

#ifndef TAG_quote_SEQCOMP
#define TAG_quote_SEQCOMP (TAG_TRANS + 14)
#endif

#ifndef TAG_quote_SEQENUM
#define TAG_quote_SEQENUM (TAG_TRANS + 15)
#endif

#ifndef TAG_quote_SEQMODIF
#define TAG_quote_SEQMODIF (TAG_TRANS + 16)
#endif

#ifndef TAG_quote_SETCOMP
#define TAG_quote_SETCOMP (TAG_TRANS + 17)
#endif

#ifndef TAG_quote_SETENUM
#define TAG_quote_SETENUM (TAG_TRANS + 18)
#endif

#ifndef TAG_quote_SETRANGE
#define TAG_quote_SETRANGE (TAG_TRANS + 19)
#endif

#ifndef TAG_quote_SUBSEQ
#define TAG_quote_SUBSEQ (TAG_TRANS + 20)
#endif

#ifndef TAG_quote_TOKENCONS
#define TAG_quote_TOKENCONS (TAG_TRANS + 21)
#endif

#ifndef TAG_quote_TUPLECONS
#define TAG_quote_TUPLECONS (TAG_TRANS + 22)
#endif

#ifndef TAG_quote_AND
#define TAG_quote_AND (TAG_TRANS + 23)
#endif

#ifndef TAG_quote_COMPOSE
#define TAG_quote_COMPOSE (TAG_TRANS + 24)
#endif

#ifndef TAG_quote_EQ
#define TAG_quote_EQ (TAG_TRANS + 25)
#endif

#ifndef TAG_quote_EQUIV
#define TAG_quote_EQUIV (TAG_TRANS + 26)
#endif

#ifndef TAG_quote_IMPLY
#define TAG_quote_IMPLY (TAG_TRANS + 27)
#endif

#ifndef TAG_quote_INSET
#define TAG_quote_INSET (TAG_TRANS + 28)
#endif

#ifndef TAG_quote_INTDIV
#define TAG_quote_INTDIV (TAG_TRANS + 29)
#endif

#ifndef TAG_quote_MAPDOMRESTBY
#define TAG_quote_MAPDOMRESTBY (TAG_TRANS + 30)
#endif

#ifndef TAG_quote_MAPDOMRESTTO
#define TAG_quote_MAPDOMRESTTO (TAG_TRANS + 31)
#endif

#ifndef TAG_quote_MAPMERGE
#define TAG_quote_MAPMERGE (TAG_TRANS + 32)
#endif

#ifndef TAG_quote_MAPRNGRESTBY
#define TAG_quote_MAPRNGRESTBY (TAG_TRANS + 33)
#endif

#ifndef TAG_quote_MAPRNGRESTTO
#define TAG_quote_MAPRNGRESTTO (TAG_TRANS + 34)
#endif

#ifndef TAG_quote_NE
#define TAG_quote_NE (TAG_TRANS + 35)
#endif

#ifndef TAG_quote_NOTINSET
#define TAG_quote_NOTINSET (TAG_TRANS + 36)
#endif

#ifndef TAG_quote_NUMDIV
#define TAG_quote_NUMDIV (TAG_TRANS + 37)
#endif

#ifndef TAG_quote_NUMEXP
#define TAG_quote_NUMEXP (TAG_TRANS + 38)
#endif

#ifndef TAG_quote_NUMGE
#define TAG_quote_NUMGE (TAG_TRANS + 39)
#endif

#ifndef TAG_quote_NUMGT
#define TAG_quote_NUMGT (TAG_TRANS + 40)
#endif

#ifndef TAG_quote_NUMLE
#define TAG_quote_NUMLE (TAG_TRANS + 41)
#endif

#ifndef TAG_quote_NUMLT
#define TAG_quote_NUMLT (TAG_TRANS + 42)
#endif

#ifndef TAG_quote_NUMMINUS
#define TAG_quote_NUMMINUS (TAG_TRANS + 43)
#endif

#ifndef TAG_quote_NUMMOD
#define TAG_quote_NUMMOD (TAG_TRANS + 44)
#endif

#ifndef TAG_quote_NUMMULT
#define TAG_quote_NUMMULT (TAG_TRANS + 45)
#endif

#ifndef TAG_quote_NUMPLUS
#define TAG_quote_NUMPLUS (TAG_TRANS + 46)
#endif

#ifndef TAG_quote_NUMREM
#define TAG_quote_NUMREM (TAG_TRANS + 47)
#endif

#ifndef TAG_quote_OR
#define TAG_quote_OR (TAG_TRANS + 48)
#endif

#ifndef TAG_quote_PROPERSUBSET
#define TAG_quote_PROPERSUBSET (TAG_TRANS + 49)
#endif

#ifndef TAG_quote_SEQCONC
#define TAG_quote_SEQCONC (TAG_TRANS + 50)
#endif

#ifndef TAG_quote_SETINTERSECT
#define TAG_quote_SETINTERSECT (TAG_TRANS + 51)
#endif

#ifndef TAG_quote_SETMINUS
#define TAG_quote_SETMINUS (TAG_TRANS + 52)
#endif

#ifndef TAG_quote_SETUNION
#define TAG_quote_SETUNION (TAG_TRANS + 53)
#endif

#ifndef TAG_quote_SUBSET
#define TAG_quote_SUBSET (TAG_TRANS + 54)
#endif

#ifndef TAG_quote_FLOOR
#define TAG_quote_FLOOR (TAG_TRANS + 55)
#endif

#ifndef TAG_quote_MAPDISTRMERGE
#define TAG_quote_MAPDISTRMERGE (TAG_TRANS + 56)
#endif

#ifndef TAG_quote_MAPDOM
#define TAG_quote_MAPDOM (TAG_TRANS + 57)
#endif

#ifndef TAG_quote_MAPRNG
#define TAG_quote_MAPRNG (TAG_TRANS + 58)
#endif

#ifndef TAG_quote_NOT
#define TAG_quote_NOT (TAG_TRANS + 59)
#endif

#ifndef TAG_quote_NUMABS
#define TAG_quote_NUMABS (TAG_TRANS + 60)
#endif

#ifndef TAG_quote_SEQDISTRCONC
#define TAG_quote_SEQDISTRCONC (TAG_TRANS + 61)
#endif

#ifndef TAG_quote_SEQELEMS
#define TAG_quote_SEQELEMS (TAG_TRANS + 62)
#endif

#ifndef TAG_quote_SEQHEAD
#define TAG_quote_SEQHEAD (TAG_TRANS + 63)
#endif

#ifndef TAG_quote_SEQINDICES
#define TAG_quote_SEQINDICES (TAG_TRANS + 64)
#endif

#ifndef TAG_quote_SEQLEN
#define TAG_quote_SEQLEN (TAG_TRANS + 65)
#endif

#ifndef TAG_quote_SEQTAIL
#define TAG_quote_SEQTAIL (TAG_TRANS + 66)
#endif

#ifndef TAG_quote_SETCARD
#define TAG_quote_SETCARD (TAG_TRANS + 67)
#endif

#ifndef TAG_quote_SETDISTRINTERSECT
#define TAG_quote_SETDISTRINTERSECT (TAG_TRANS + 68)
#endif

#ifndef TAG_quote_SETDISTRUNION
#define TAG_quote_SETDISTRUNION (TAG_TRANS + 69)
#endif

#ifndef TAG_quote_SETPOWER
#define TAG_quote_SETPOWER (TAG_TRANS + 70)
#endif


#include "AS_anonym.h"
#include "CI_anonym.h"
#include "HOL_anonym.h"
#include "REP_anonym.h"
#ifndef DECL_type_FL
#define DECL_type_FL 1

class type_FL : public SEQ<Generic> {
public:

  type_FL() : SEQ<Generic>() {}

  type_FL(const SEQ<Generic> &c) : SEQ<Generic>(c) {}

  type_FL(const Generic &c) : SEQ<Generic>(c) {}

  const char * GetTypeName() const { return "type_FL"; }
} ;
#endif


#endif

