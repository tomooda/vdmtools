//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Wed 05-Apr-00 by the VDM-SLtoC++ Code Generator
// (v3.3.2 - Thu 02-Dec-99)
//
// Supported compilers:
// 	egcs version 1.1 on SunOS4, SunOS5, Linux, HP-UX10
// 	VC++ version 6.0 on Windows95, Windows NT
//

#ifndef _TRL_uMEDIATOR_anonym_h
#define _TRL_uMEDIATOR_anonym_h

#include "TRL_uMEDIATOR_userdef.h"
#include "metaiv.h"
class TYPE_TRL_uMEDIATOR_select_udef;
class TYPE_TRL_uMEDIATOR_pred_udef;
class TYPE_TRL_uMEDIATOR_datatype_udef;
class TYPE_TRL_uMEDIATOR_type_uabbrev_udef;
class TYPE_TRL_uMEDIATOR_const_udef;
class TYPE_TRL_uMEDIATOR_func_udef;
class TYPE_TRL_uMEDIATOR_po_udef;
class TYPE_TRL_uMEDIATOR_TRANS;
class TYPE_TRL_uMEDIATOR_spec;
class type_7AS_NameCL;
class type_cL;
class type_cLL;
class type_cLS;
class type_25TRL_uMEDIATOR_select_udefCL;
class type_7AS_NameCdM;
class type_7AS_NameC24TRL_uMEDIATOR_const_udefCM;
class type_dL;
class type_dLL;
class type_21TRL_uMEDIATOR_po_udefCL;
class type_7AS_NameC23TRL_uMEDIATOR_pred_udefCM;
class type_7AS_NameC25TRL_uMEDIATOR_select_udefCM;
class type_typevariableS;
class type_typevariableL;
class type_11AS_ValueDefCL;
#define TYPE_TRL_uMEDIATOR_type_udef Record
#define TYPE_TRL_uMEDIATOR_string type_cL
#define TYPE_TRL_uMEDIATOR_fn_udef Record
#ifndef TAG_type_7AS_NameCL
#define TAG_type_7AS_NameCL (TAG_TRL_uMEDIATOR + 1)
#endif

#ifndef TAG_type_cL
#define TAG_type_cL (TAG_TRL_uMEDIATOR + 2)
#endif

#ifndef TAG_type_cLL
#define TAG_type_cLL (TAG_TRL_uMEDIATOR + 3)
#endif

#ifndef TAG_type_cLS
#define TAG_type_cLS (TAG_TRL_uMEDIATOR + 4)
#endif

#ifndef TAG_type_25TRL_uMEDIATOR_select_udefCL
#define TAG_type_25TRL_uMEDIATOR_select_udefCL (TAG_TRL_uMEDIATOR + 5)
#endif

#ifndef TAG_type_7AS_NameCdM
#define TAG_type_7AS_NameCdM (TAG_TRL_uMEDIATOR + 6)
#endif

#ifndef TAG_type_7AS_NameC24TRL_uMEDIATOR_const_udefCM
#define TAG_type_7AS_NameC24TRL_uMEDIATOR_const_udefCM (TAG_TRL_uMEDIATOR + 7)
#endif

#ifndef TAG_type_dL
#define TAG_type_dL (TAG_TRL_uMEDIATOR + 8)
#endif

#ifndef TAG_type_dLL
#define TAG_type_dLL (TAG_TRL_uMEDIATOR + 9)
#endif

#ifndef TAG_type_21TRL_uMEDIATOR_po_udefCL
#define TAG_type_21TRL_uMEDIATOR_po_udefCL (TAG_TRL_uMEDIATOR + 10)
#endif

#ifndef TAG_type_7AS_NameC23TRL_uMEDIATOR_pred_udefCM
#define TAG_type_7AS_NameC23TRL_uMEDIATOR_pred_udefCM (TAG_TRL_uMEDIATOR + 11)
#endif

#ifndef TAG_type_7AS_NameC25TRL_uMEDIATOR_select_udefCM
#define TAG_type_7AS_NameC25TRL_uMEDIATOR_select_udefCM (TAG_TRL_uMEDIATOR + 12)
#endif

#ifndef TAG_type_typevariableS
#define TAG_type_typevariableS (TAG_TRL_uMEDIATOR + 13)
#endif

#ifndef TAG_type_typevariableL
#define TAG_type_typevariableL (TAG_TRL_uMEDIATOR + 14)
#endif

#ifndef TAG_type_11AS_ValueDefCL
#define TAG_type_11AS_ValueDefCL (TAG_TRL_uMEDIATOR + 15)
#endif


#include "AS_anonym.h"
#include "CI_anonym.h"
#include "DEP_uANA_anonym.h"
#include "DER_uCON_anonym.h"
#include "HOL_anonym.h"
#include "PP_uHOL_anonym.h"
#include "REP_anonym.h"
#include "SPEC_uAST_anonym.h"
#include "TRL_uTAR_uDEF_anonym.h"
#include "TRL_uTAR_uEXPR_anonym.h"
#include "TRL_uTAR_uPAT_anonym.h"
#include "TRL_uTAR_uTYPE_anonym.h"
#include "TRL_uTRA_uDEF_anonym.h"
#include "TRL_uTRA_uEXPR_anonym.h"
#include "TRL_uTRA_uPAT_anonym.h"
#include "TRL_uTRA_uTYPE_anonym.h"
#ifndef TAG_TYPE_TRL_uMEDIATOR_select_udef
#define TAG_TYPE_TRL_uMEDIATOR_select_udef (TAG_TRL_uMEDIATOR + 16)
#endif

#ifndef TAG_TYPE_TRL_uMEDIATOR_pred_udef
#define TAG_TYPE_TRL_uMEDIATOR_pred_udef (TAG_TRL_uMEDIATOR + 17)
#endif

#ifndef TAG_TYPE_TRL_uMEDIATOR_datatype_udef
#define TAG_TYPE_TRL_uMEDIATOR_datatype_udef (TAG_TRL_uMEDIATOR + 18)
#endif

#ifndef TAG_TYPE_TRL_uMEDIATOR_type_uabbrev_udef
#define TAG_TYPE_TRL_uMEDIATOR_type_uabbrev_udef (TAG_TRL_uMEDIATOR + 19)
#endif

#ifndef TAG_TYPE_TRL_uMEDIATOR_const_udef
#define TAG_TYPE_TRL_uMEDIATOR_const_udef (TAG_TRL_uMEDIATOR + 20)
#endif

#ifndef TAG_TYPE_TRL_uMEDIATOR_func_udef
#define TAG_TYPE_TRL_uMEDIATOR_func_udef (TAG_TRL_uMEDIATOR + 21)
#endif

#ifndef TAG_TYPE_TRL_uMEDIATOR_po_udef
#define TAG_TYPE_TRL_uMEDIATOR_po_udef (TAG_TRL_uMEDIATOR + 22)
#endif

#ifndef TAG_TYPE_TRL_uMEDIATOR_TRANS
#define TAG_TYPE_TRL_uMEDIATOR_TRANS (TAG_TRL_uMEDIATOR + 23)
#endif

#ifndef TAG_TYPE_TRL_uMEDIATOR_spec
#define TAG_TYPE_TRL_uMEDIATOR_spec (TAG_TRL_uMEDIATOR + 24)
#endif

#ifndef DECL_type_7AS_NameCL
#define DECL_type_7AS_NameCL 1

class type_7AS_NameCL : public SEQ<TYPE_AS_Name> {
public:

  type_7AS_NameCL() : SEQ<TYPE_AS_Name>() {}

  type_7AS_NameCL(const SEQ<TYPE_AS_Name> &c) : SEQ<TYPE_AS_Name>(c) {}

  type_7AS_NameCL(const Generic &c) : SEQ<TYPE_AS_Name>(c) {}

  const char * GetTypeName() const { return "type_7AS_NameCL"; }
} ;
#endif

#ifndef DECL_type_cL
#define DECL_type_cL 1

class type_cL : public SEQ<Char> {
public:

  type_cL() : SEQ<Char>() {}

  type_cL(const SEQ<Char> &c) : SEQ<Char>(c) {}

  type_cL(const Generic &c) : SEQ<Char>(c) {}

  const char * GetTypeName() const { return "type_cL"; }
} ;
#endif

#ifndef DECL_type_cLL
#define DECL_type_cLL 1

class type_cLL : public SEQ<type_cL> {
public:

  type_cLL() : SEQ<type_cL>() {}

  type_cLL(const SEQ<type_cL> &c) : SEQ<type_cL>(c) {}

  type_cLL(const Generic &c) : SEQ<type_cL>(c) {}

  const char * GetTypeName() const { return "type_cLL"; }
} ;
#endif

#ifndef DECL_type_cLS
#define DECL_type_cLS 1

class type_cLS : public SET<type_cL> {
public:

  type_cLS() : SET<type_cL>() {}

  type_cLS(const SET<type_cL> &c) : SET<type_cL>(c) {}

  type_cLS(const Generic &c) : SET<type_cL>(c) {}

  const char * GetTypeName() const { return "type_cLS"; }
} ;
#endif

#ifndef DECL_type_25TRL_uMEDIATOR_select_udefCL
#define DECL_type_25TRL_uMEDIATOR_select_udefCL 1

class type_25TRL_uMEDIATOR_select_udefCL : public SEQ<TYPE_TRL_uMEDIATOR_select_udef> {
public:

  type_25TRL_uMEDIATOR_select_udefCL() : SEQ<TYPE_TRL_uMEDIATOR_select_udef>() {}

  type_25TRL_uMEDIATOR_select_udefCL(const SEQ<TYPE_TRL_uMEDIATOR_select_udef> &c) : SEQ<TYPE_TRL_uMEDIATOR_select_udef>(c) {}

  type_25TRL_uMEDIATOR_select_udefCL(const Generic &c) : SEQ<TYPE_TRL_uMEDIATOR_select_udef>(c) {}

  const char * GetTypeName() const { return "type_25TRL_uMEDIATOR_select_udefCL"; }
} ;
#endif

#ifndef DECL_type_7AS_NameCdM
#define DECL_type_7AS_NameCdM 1

class type_7AS_NameCdM : public MAP<TYPE_AS_Name,Record> {
public:

  type_7AS_NameCdM() : MAP<TYPE_AS_Name,Record>() {}

  type_7AS_NameCdM(const MAP<TYPE_AS_Name,Record> &c) : MAP<TYPE_AS_Name,Record>(c) {}

  type_7AS_NameCdM(const Generic &c) : MAP<TYPE_AS_Name,Record>(c) {}

  const char * GetTypeName() const { return "type_7AS_NameCdM"; }
} ;
#endif

#ifndef DECL_type_7AS_NameC24TRL_uMEDIATOR_const_udefCM
#define DECL_type_7AS_NameC24TRL_uMEDIATOR_const_udefCM 1

class type_7AS_NameC24TRL_uMEDIATOR_const_udefCM : public MAP<TYPE_AS_Name,TYPE_TRL_uMEDIATOR_const_udef> {
public:

  type_7AS_NameC24TRL_uMEDIATOR_const_udefCM() : MAP<TYPE_AS_Name,TYPE_TRL_uMEDIATOR_const_udef>() {}

  type_7AS_NameC24TRL_uMEDIATOR_const_udefCM(const MAP<TYPE_AS_Name,TYPE_TRL_uMEDIATOR_const_udef> &c) : MAP<TYPE_AS_Name,TYPE_TRL_uMEDIATOR_const_udef>(c) {}

  type_7AS_NameC24TRL_uMEDIATOR_const_udefCM(const Generic &c) : MAP<TYPE_AS_Name,TYPE_TRL_uMEDIATOR_const_udef>(c) {}

  const char * GetTypeName() const { return "type_7AS_NameC24TRL_uMEDIATOR_const_udefCM"; }
} ;
#endif

#ifndef DECL_type_dL
#define DECL_type_dL 1

class type_dL : public SEQ<Record> {
public:

  type_dL() : SEQ<Record>() {}

  type_dL(const SEQ<Record> &c) : SEQ<Record>(c) {}

  type_dL(const Generic &c) : SEQ<Record>(c) {}

  const char * GetTypeName() const { return "type_dL"; }
} ;
#endif

#ifndef DECL_type_dLL
#define DECL_type_dLL 1

class type_dLL : public SEQ<type_dL> {
public:

  type_dLL() : SEQ<type_dL>() {}

  type_dLL(const SEQ<type_dL> &c) : SEQ<type_dL>(c) {}

  type_dLL(const Generic &c) : SEQ<type_dL>(c) {}

  const char * GetTypeName() const { return "type_dLL"; }
} ;
#endif

#ifndef DECL_type_21TRL_uMEDIATOR_po_udefCL
#define DECL_type_21TRL_uMEDIATOR_po_udefCL 1

class type_21TRL_uMEDIATOR_po_udefCL : public SEQ<TYPE_TRL_uMEDIATOR_po_udef> {
public:

  type_21TRL_uMEDIATOR_po_udefCL() : SEQ<TYPE_TRL_uMEDIATOR_po_udef>() {}

  type_21TRL_uMEDIATOR_po_udefCL(const SEQ<TYPE_TRL_uMEDIATOR_po_udef> &c) : SEQ<TYPE_TRL_uMEDIATOR_po_udef>(c) {}

  type_21TRL_uMEDIATOR_po_udefCL(const Generic &c) : SEQ<TYPE_TRL_uMEDIATOR_po_udef>(c) {}

  const char * GetTypeName() const { return "type_21TRL_uMEDIATOR_po_udefCL"; }
} ;
#endif

#ifndef DECL_type_7AS_NameC23TRL_uMEDIATOR_pred_udefCM
#define DECL_type_7AS_NameC23TRL_uMEDIATOR_pred_udefCM 1

class type_7AS_NameC23TRL_uMEDIATOR_pred_udefCM : public MAP<TYPE_AS_Name,TYPE_TRL_uMEDIATOR_pred_udef> {
public:

  type_7AS_NameC23TRL_uMEDIATOR_pred_udefCM() : MAP<TYPE_AS_Name,TYPE_TRL_uMEDIATOR_pred_udef>() {}

  type_7AS_NameC23TRL_uMEDIATOR_pred_udefCM(const MAP<TYPE_AS_Name,TYPE_TRL_uMEDIATOR_pred_udef> &c) : MAP<TYPE_AS_Name,TYPE_TRL_uMEDIATOR_pred_udef>(c) {}

  type_7AS_NameC23TRL_uMEDIATOR_pred_udefCM(const Generic &c) : MAP<TYPE_AS_Name,TYPE_TRL_uMEDIATOR_pred_udef>(c) {}

  const char * GetTypeName() const { return "type_7AS_NameC23TRL_uMEDIATOR_pred_udefCM"; }
} ;
#endif

#ifndef DECL_type_7AS_NameC25TRL_uMEDIATOR_select_udefCM
#define DECL_type_7AS_NameC25TRL_uMEDIATOR_select_udefCM 1

class type_7AS_NameC25TRL_uMEDIATOR_select_udefCM : public MAP<TYPE_AS_Name,TYPE_TRL_uMEDIATOR_select_udef> {
public:

  type_7AS_NameC25TRL_uMEDIATOR_select_udefCM() : MAP<TYPE_AS_Name,TYPE_TRL_uMEDIATOR_select_udef>() {}

  type_7AS_NameC25TRL_uMEDIATOR_select_udefCM(const MAP<TYPE_AS_Name,TYPE_TRL_uMEDIATOR_select_udef> &c) : MAP<TYPE_AS_Name,TYPE_TRL_uMEDIATOR_select_udef>(c) {}

  type_7AS_NameC25TRL_uMEDIATOR_select_udefCM(const Generic &c) : MAP<TYPE_AS_Name,TYPE_TRL_uMEDIATOR_select_udef>(c) {}

  const char * GetTypeName() const { return "type_7AS_NameC25TRL_uMEDIATOR_select_udefCM"; }
} ;
#endif

#ifndef DECL_type_typevariableS
#define DECL_type_typevariableS 1

class type_typevariableS : public SET<Generic> {
public:

  type_typevariableS() : SET<Generic>() {}

  type_typevariableS(const SET<Generic> &c) : SET<Generic>(c) {}

  type_typevariableS(const Generic &c) : SET<Generic>(c) {}

  const char * GetTypeName() const { return "type_typevariableS"; }
} ;
#endif

#ifndef DECL_type_typevariableL
#define DECL_type_typevariableL 1

class type_typevariableL : public SEQ<Generic> {
public:

  type_typevariableL() : SEQ<Generic>() {}

  type_typevariableL(const SEQ<Generic> &c) : SEQ<Generic>(c) {}

  type_typevariableL(const Generic &c) : SEQ<Generic>(c) {}

  const char * GetTypeName() const { return "type_typevariableL"; }
} ;
#endif

#ifndef DECL_type_11AS_ValueDefCL
#define DECL_type_11AS_ValueDefCL 1

class type_11AS_ValueDefCL : public SEQ<TYPE_AS_ValueDef> {
public:

  type_11AS_ValueDefCL() : SEQ<TYPE_AS_ValueDef>() {}

  type_11AS_ValueDefCL(const SEQ<TYPE_AS_ValueDef> &c) : SEQ<TYPE_AS_ValueDef>(c) {}

  type_11AS_ValueDefCL(const Generic &c) : SEQ<TYPE_AS_ValueDef>(c) {}

  const char * GetTypeName() const { return "type_11AS_ValueDefCL"; }
} ;
#endif


#endif

