//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Wed 05-Apr-00 by the VDM-SLtoC++ Code Generator
// (v3.3.2 - Thu 02-Dec-99)
//
// Supported compilers:
// 	egcs version 1.1 on SunOS4, SunOS5, Linux, HP-UX10
// 	VC++ version 6.0 on Windows95, Windows NT
//

#ifndef _TRL_uTAR_uDEF_anonym_h
#define _TRL_uTAR_uDEF_anonym_h

#include "TRL_uTAR_uDEF_userdef.h"
#include "metaiv.h"
extern const Quote quote_NOTYETSPEC;
class TYPE_TRL_uTAR_uDEF_pred_udef;
class TYPE_TRL_uTAR_uDEF_func_udef;
class TYPE_TRL_uTAR_uDEF_po_udef;
class TYPE_TRL_uTAR_uDEF_ValueDef;
class TYPE_TRL_uTAR_uDEF_select_udef;
class TYPE_TRL_uTAR_uDEF_datatype_udef;
class TYPE_TRL_uTAR_uDEF_type_uabbrev_udef;
class TYPE_TRL_uTAR_uDEF_const_udef;
class type_FL;
class type_cL;
class type_cLS;
class type_19TRL_uTAR_uEXPR_EXPRCL;
class type_19TRL_uTAR_uEXPR_EXPRCLL;
class type_25TRL_uTAR_uDEF_select_udefCL;
class type_19TRL_uTAR_uTYPE_TYPECL;
class type_dL;
class type_dLL;
class type_FLL;
class type_21TRL_uTAR_uDEF_po_udefCL;
class type_11HOL_po_udefCL;
class type_7AS_NameCdM;
class type_7AS_NameC23TRL_uTAR_uDEF_pred_udefCM;
class type_7AS_NameC25TRL_uTAR_uDEF_select_udefCM;
class type_FF2P;
class type_7AS_NameC23TRL_uTAR_uDEF_func_udefCM;
class type_typevariableS;
class type_typevariableL;
class type_22TRL_uTAR_uDEF_ValueDefCL;
class type_7AS_NameC24TRL_uTAR_uDEF_const_udefCM;
class type_19CI_TokenContextInfoCL;
class type_i7AS_NameCM;
class type_7AS_NameCFM;
class type_UL;
#define TYPE_TRL_uTAR_uDEF_type_udef Record
#define TYPE_TRL_uTAR_uDEF_string type_cL
#define TYPE_TRL_uTAR_uDEF_fn_udef Record
#define TYPE_TRL_uTAR_uDEF_TypeVarList type_19TRL_uTAR_uTYPE_TYPECL
#define TYPE_TRL_uTAR_uDEF_TypeDef Record
#define TYPE_TRL_uTAR_uDEF_PatTypePair type_19TRL_uTAR_uEXPR_EXPRCL
#define TYPE_TRL_uTAR_uDEF_ParametersList type_19TRL_uTAR_uEXPR_EXPRCLL
#define TYPE_TRL_uTAR_uDEF_Parameters type_19TRL_uTAR_uEXPR_EXPRCL
#define TYPE_TRL_uTAR_uDEF_ParameterTypes type_19TRL_uTAR_uEXPR_EXPRCLL
#define TYPE_TRL_uTAR_uDEF_NameType TYPE_TRL_uTAR_uEXPR_EXPR
#define TYPE_TRL_uTAR_uDEF_Module TYPE_HOL_spec
#define TYPE_TRL_uTAR_uDEF_LocalDef Record
#define TYPE_TRL_uTAR_uDEF_Invariant TYPE_TRL_uTAR_uDEF_pred_udef
#define TYPE_TRL_uTAR_uDEF_Interface TYPE_AS_Interface
#define TYPE_TRL_uTAR_uDEF_ImplModule Token
#define TYPE_TRL_uTAR_uDEF_ImplFnDef TYPE_TRL_uTAR_uDEF_func_udef
#define TYPE_TRL_uTAR_uDEF_GlobalValueDef TYPE_TRL_uTAR_uDEF_ValueDef
#define TYPE_TRL_uTAR_uDEF_FnDef Record
#define TYPE_TRL_uTAR_uDEF_FnBody TYPE_TRL_uTAR_uEXPR_EXPR
#define TYPE_TRL_uTAR_uDEF_ExtExplFnDef TYPE_TRL_uTAR_uDEF_func_udef
#define TYPE_TRL_uTAR_uDEF_ExplFnDef Record
#define TYPE_TRL_uTAR_uDEF_Document TYPE_HOL_spec
#define TYPE_TRL_uTAR_uDEF_Definitions TYPE_HOL_spec
#define TYPE_TRL_uTAR_uDEF_AstCI TYPE_HOL_spec
#ifndef TAG_type_FL
#define TAG_type_FL (TAG_TRL_uTAR_uDEF + 1)
#endif

#ifndef TAG_type_cL
#define TAG_type_cL (TAG_TRL_uTAR_uDEF + 2)
#endif

#ifndef TAG_type_cLS
#define TAG_type_cLS (TAG_TRL_uTAR_uDEF + 3)
#endif

#ifndef TAG_type_19TRL_uTAR_uEXPR_EXPRCL
#define TAG_type_19TRL_uTAR_uEXPR_EXPRCL (TAG_TRL_uTAR_uDEF + 4)
#endif

#ifndef TAG_type_19TRL_uTAR_uEXPR_EXPRCLL
#define TAG_type_19TRL_uTAR_uEXPR_EXPRCLL (TAG_TRL_uTAR_uDEF + 5)
#endif

#ifndef TAG_type_25TRL_uTAR_uDEF_select_udefCL
#define TAG_type_25TRL_uTAR_uDEF_select_udefCL (TAG_TRL_uTAR_uDEF + 6)
#endif

#ifndef TAG_type_19TRL_uTAR_uTYPE_TYPECL
#define TAG_type_19TRL_uTAR_uTYPE_TYPECL (TAG_TRL_uTAR_uDEF + 7)
#endif

#ifndef TAG_type_dL
#define TAG_type_dL (TAG_TRL_uTAR_uDEF + 8)
#endif

#ifndef TAG_type_dLL
#define TAG_type_dLL (TAG_TRL_uTAR_uDEF + 9)
#endif

#ifndef TAG_type_FLL
#define TAG_type_FLL (TAG_TRL_uTAR_uDEF + 10)
#endif

#ifndef TAG_type_21TRL_uTAR_uDEF_po_udefCL
#define TAG_type_21TRL_uTAR_uDEF_po_udefCL (TAG_TRL_uTAR_uDEF + 11)
#endif

#ifndef TAG_type_11HOL_po_udefCL
#define TAG_type_11HOL_po_udefCL (TAG_TRL_uTAR_uDEF + 12)
#endif

#ifndef TAG_type_7AS_NameCdM
#define TAG_type_7AS_NameCdM (TAG_TRL_uTAR_uDEF + 13)
#endif

#ifndef TAG_type_7AS_NameC23TRL_uTAR_uDEF_pred_udefCM
#define TAG_type_7AS_NameC23TRL_uTAR_uDEF_pred_udefCM (TAG_TRL_uTAR_uDEF + 14)
#endif

#ifndef TAG_type_7AS_NameC25TRL_uTAR_uDEF_select_udefCM
#define TAG_type_7AS_NameC25TRL_uTAR_uDEF_select_udefCM (TAG_TRL_uTAR_uDEF + 15)
#endif

#ifndef TAG_type_FF2P
#define TAG_type_FF2P (TAG_TRL_uTAR_uDEF + 16)
#endif

#ifndef TAG_type_7AS_NameC23TRL_uTAR_uDEF_func_udefCM
#define TAG_type_7AS_NameC23TRL_uTAR_uDEF_func_udefCM (TAG_TRL_uTAR_uDEF + 17)
#endif

#ifndef TAG_type_typevariableS
#define TAG_type_typevariableS (TAG_TRL_uTAR_uDEF + 18)
#endif

#ifndef TAG_type_typevariableL
#define TAG_type_typevariableL (TAG_TRL_uTAR_uDEF + 19)
#endif

#ifndef TAG_type_22TRL_uTAR_uDEF_ValueDefCL
#define TAG_type_22TRL_uTAR_uDEF_ValueDefCL (TAG_TRL_uTAR_uDEF + 20)
#endif

#ifndef TAG_type_7AS_NameC24TRL_uTAR_uDEF_const_udefCM
#define TAG_type_7AS_NameC24TRL_uTAR_uDEF_const_udefCM (TAG_TRL_uTAR_uDEF + 21)
#endif

#ifndef TAG_type_19CI_TokenContextInfoCL
#define TAG_type_19CI_TokenContextInfoCL (TAG_TRL_uTAR_uDEF + 22)
#endif

#ifndef TAG_type_i7AS_NameCM
#define TAG_type_i7AS_NameCM (TAG_TRL_uTAR_uDEF + 23)
#endif

#ifndef TAG_type_7AS_NameCFM
#define TAG_type_7AS_NameCFM (TAG_TRL_uTAR_uDEF + 24)
#endif

#ifndef TAG_type_UL
#define TAG_type_UL (TAG_TRL_uTAR_uDEF + 25)
#endif

#ifndef TAG_quote_NOTYETSPEC
#define TAG_quote_NOTYETSPEC (TAG_TRL_uTAR_uDEF + 26)
#endif


#include "AS_anonym.h"
#include "CI_anonym.h"
#include "DEP_uANA_anonym.h"
#include "DER_uCON_anonym.h"
#include "DER_uINV_anonym.h"
#include "HOL_anonym.h"
#include "REP_anonym.h"
#include "TRANS_anonym.h"
#include "TRL_uTAR_uEXPR_anonym.h"
#include "TRL_uTAR_uPAT_anonym.h"
#include "TRL_uTAR_uTYPE_anonym.h"
#ifndef TAG_TYPE_TRL_uTAR_uDEF_pred_udef
#define TAG_TYPE_TRL_uTAR_uDEF_pred_udef (TAG_TRL_uTAR_uDEF + 27)
#endif

#ifndef TAG_TYPE_TRL_uTAR_uDEF_func_udef
#define TAG_TYPE_TRL_uTAR_uDEF_func_udef (TAG_TRL_uTAR_uDEF + 28)
#endif

#ifndef TAG_TYPE_TRL_uTAR_uDEF_po_udef
#define TAG_TYPE_TRL_uTAR_uDEF_po_udef (TAG_TRL_uTAR_uDEF + 29)
#endif

#ifndef TAG_TYPE_TRL_uTAR_uDEF_ValueDef
#define TAG_TYPE_TRL_uTAR_uDEF_ValueDef (TAG_TRL_uTAR_uDEF + 30)
#endif

#ifndef TAG_TYPE_TRL_uTAR_uDEF_select_udef
#define TAG_TYPE_TRL_uTAR_uDEF_select_udef (TAG_TRL_uTAR_uDEF + 31)
#endif

#ifndef TAG_TYPE_TRL_uTAR_uDEF_datatype_udef
#define TAG_TYPE_TRL_uTAR_uDEF_datatype_udef (TAG_TRL_uTAR_uDEF + 32)
#endif

#ifndef TAG_TYPE_TRL_uTAR_uDEF_type_uabbrev_udef
#define TAG_TYPE_TRL_uTAR_uDEF_type_uabbrev_udef (TAG_TRL_uTAR_uDEF + 33)
#endif

#ifndef TAG_TYPE_TRL_uTAR_uDEF_const_udef
#define TAG_TYPE_TRL_uTAR_uDEF_const_udef (TAG_TRL_uTAR_uDEF + 34)
#endif

#ifndef DECL_type_FL
#define DECL_type_FL 1

class type_FL : public SEQ<Generic> {
public:

  type_FL() : SEQ<Generic>() {}

  type_FL(const SEQ<Generic> &c) : SEQ<Generic>(c) {}

  type_FL(const Generic &c) : SEQ<Generic>(c) {}

  const char * GetTypeName() const { return "type_FL"; }
} ;
#endif

#ifndef DECL_type_cL
#define DECL_type_cL 1

class type_cL : public SEQ<Char> {
public:

  type_cL() : SEQ<Char>() {}

  type_cL(const SEQ<Char> &c) : SEQ<Char>(c) {}

  type_cL(const Generic &c) : SEQ<Char>(c) {}

  const char * GetTypeName() const { return "type_cL"; }
} ;
#endif

#ifndef DECL_type_cLS
#define DECL_type_cLS 1

class type_cLS : public SET<type_cL> {
public:

  type_cLS() : SET<type_cL>() {}

  type_cLS(const SET<type_cL> &c) : SET<type_cL>(c) {}

  type_cLS(const Generic &c) : SET<type_cL>(c) {}

  const char * GetTypeName() const { return "type_cLS"; }
} ;
#endif

#ifndef DECL_type_19TRL_uTAR_uEXPR_EXPRCL
#define DECL_type_19TRL_uTAR_uEXPR_EXPRCL 1

class type_19TRL_uTAR_uEXPR_EXPRCL : public SEQ<TYPE_TRL_uTAR_uEXPR_EXPR> {
public:

  type_19TRL_uTAR_uEXPR_EXPRCL() : SEQ<TYPE_TRL_uTAR_uEXPR_EXPR>() {}

  type_19TRL_uTAR_uEXPR_EXPRCL(const SEQ<TYPE_TRL_uTAR_uEXPR_EXPR> &c) : SEQ<TYPE_TRL_uTAR_uEXPR_EXPR>(c) {}

  type_19TRL_uTAR_uEXPR_EXPRCL(const Generic &c) : SEQ<TYPE_TRL_uTAR_uEXPR_EXPR>(c) {}

  const char * GetTypeName() const { return "type_19TRL_uTAR_uEXPR_EXPRCL"; }
} ;
#endif

#ifndef DECL_type_19TRL_uTAR_uEXPR_EXPRCLL
#define DECL_type_19TRL_uTAR_uEXPR_EXPRCLL 1

class type_19TRL_uTAR_uEXPR_EXPRCLL : public SEQ<type_19TRL_uTAR_uEXPR_EXPRCL> {
public:

  type_19TRL_uTAR_uEXPR_EXPRCLL() : SEQ<type_19TRL_uTAR_uEXPR_EXPRCL>() {}

  type_19TRL_uTAR_uEXPR_EXPRCLL(const SEQ<type_19TRL_uTAR_uEXPR_EXPRCL> &c) : SEQ<type_19TRL_uTAR_uEXPR_EXPRCL>(c) {}

  type_19TRL_uTAR_uEXPR_EXPRCLL(const Generic &c) : SEQ<type_19TRL_uTAR_uEXPR_EXPRCL>(c) {}

  const char * GetTypeName() const { return "type_19TRL_uTAR_uEXPR_EXPRCLL"; }
} ;
#endif

#ifndef DECL_type_25TRL_uTAR_uDEF_select_udefCL
#define DECL_type_25TRL_uTAR_uDEF_select_udefCL 1

class type_25TRL_uTAR_uDEF_select_udefCL : public SEQ<TYPE_TRL_uTAR_uDEF_select_udef> {
public:

  type_25TRL_uTAR_uDEF_select_udefCL() : SEQ<TYPE_TRL_uTAR_uDEF_select_udef>() {}

  type_25TRL_uTAR_uDEF_select_udefCL(const SEQ<TYPE_TRL_uTAR_uDEF_select_udef> &c) : SEQ<TYPE_TRL_uTAR_uDEF_select_udef>(c) {}

  type_25TRL_uTAR_uDEF_select_udefCL(const Generic &c) : SEQ<TYPE_TRL_uTAR_uDEF_select_udef>(c) {}

  const char * GetTypeName() const { return "type_25TRL_uTAR_uDEF_select_udefCL"; }
} ;
#endif

#ifndef DECL_type_19TRL_uTAR_uTYPE_TYPECL
#define DECL_type_19TRL_uTAR_uTYPE_TYPECL 1

class type_19TRL_uTAR_uTYPE_TYPECL : public SEQ<TYPE_TRL_uTAR_uTYPE_TYPE> {
public:

  type_19TRL_uTAR_uTYPE_TYPECL() : SEQ<TYPE_TRL_uTAR_uTYPE_TYPE>() {}

  type_19TRL_uTAR_uTYPE_TYPECL(const SEQ<TYPE_TRL_uTAR_uTYPE_TYPE> &c) : SEQ<TYPE_TRL_uTAR_uTYPE_TYPE>(c) {}

  type_19TRL_uTAR_uTYPE_TYPECL(const Generic &c) : SEQ<TYPE_TRL_uTAR_uTYPE_TYPE>(c) {}

  const char * GetTypeName() const { return "type_19TRL_uTAR_uTYPE_TYPECL"; }
} ;
#endif

#ifndef DECL_type_dL
#define DECL_type_dL 1

class type_dL : public SEQ<Record> {
public:

  type_dL() : SEQ<Record>() {}

  type_dL(const SEQ<Record> &c) : SEQ<Record>(c) {}

  type_dL(const Generic &c) : SEQ<Record>(c) {}

  const char * GetTypeName() const { return "type_dL"; }
} ;
#endif

#ifndef DECL_type_dLL
#define DECL_type_dLL 1

class type_dLL : public SEQ<type_dL> {
public:

  type_dLL() : SEQ<type_dL>() {}

  type_dLL(const SEQ<type_dL> &c) : SEQ<type_dL>(c) {}

  type_dLL(const Generic &c) : SEQ<type_dL>(c) {}

  const char * GetTypeName() const { return "type_dLL"; }
} ;
#endif

#ifndef DECL_type_FLL
#define DECL_type_FLL 1

class type_FLL : public SEQ<type_FL> {
public:

  type_FLL() : SEQ<type_FL>() {}

  type_FLL(const SEQ<type_FL> &c) : SEQ<type_FL>(c) {}

  type_FLL(const Generic &c) : SEQ<type_FL>(c) {}

  const char * GetTypeName() const { return "type_FLL"; }
} ;
#endif

#ifndef DECL_type_21TRL_uTAR_uDEF_po_udefCL
#define DECL_type_21TRL_uTAR_uDEF_po_udefCL 1

class type_21TRL_uTAR_uDEF_po_udefCL : public SEQ<TYPE_TRL_uTAR_uDEF_po_udef> {
public:

  type_21TRL_uTAR_uDEF_po_udefCL() : SEQ<TYPE_TRL_uTAR_uDEF_po_udef>() {}

  type_21TRL_uTAR_uDEF_po_udefCL(const SEQ<TYPE_TRL_uTAR_uDEF_po_udef> &c) : SEQ<TYPE_TRL_uTAR_uDEF_po_udef>(c) {}

  type_21TRL_uTAR_uDEF_po_udefCL(const Generic &c) : SEQ<TYPE_TRL_uTAR_uDEF_po_udef>(c) {}

  const char * GetTypeName() const { return "type_21TRL_uTAR_uDEF_po_udefCL"; }
} ;
#endif

#ifndef DECL_type_11HOL_po_udefCL
#define DECL_type_11HOL_po_udefCL 1

class type_11HOL_po_udefCL : public SEQ<TYPE_HOL_po_udef> {
public:

  type_11HOL_po_udefCL() : SEQ<TYPE_HOL_po_udef>() {}

  type_11HOL_po_udefCL(const SEQ<TYPE_HOL_po_udef> &c) : SEQ<TYPE_HOL_po_udef>(c) {}

  type_11HOL_po_udefCL(const Generic &c) : SEQ<TYPE_HOL_po_udef>(c) {}

  const char * GetTypeName() const { return "type_11HOL_po_udefCL"; }
} ;
#endif

#ifndef DECL_type_7AS_NameCdM
#define DECL_type_7AS_NameCdM 1

class type_7AS_NameCdM : public MAP<TYPE_AS_Name,Record> {
public:

  type_7AS_NameCdM() : MAP<TYPE_AS_Name,Record>() {}

  type_7AS_NameCdM(const MAP<TYPE_AS_Name,Record> &c) : MAP<TYPE_AS_Name,Record>(c) {}

  type_7AS_NameCdM(const Generic &c) : MAP<TYPE_AS_Name,Record>(c) {}

  const char * GetTypeName() const { return "type_7AS_NameCdM"; }
} ;
#endif

#ifndef DECL_type_7AS_NameC23TRL_uTAR_uDEF_pred_udefCM
#define DECL_type_7AS_NameC23TRL_uTAR_uDEF_pred_udefCM 1

class type_7AS_NameC23TRL_uTAR_uDEF_pred_udefCM : public MAP<TYPE_AS_Name,TYPE_TRL_uTAR_uDEF_pred_udef> {
public:

  type_7AS_NameC23TRL_uTAR_uDEF_pred_udefCM() : MAP<TYPE_AS_Name,TYPE_TRL_uTAR_uDEF_pred_udef>() {}

  type_7AS_NameC23TRL_uTAR_uDEF_pred_udefCM(const MAP<TYPE_AS_Name,TYPE_TRL_uTAR_uDEF_pred_udef> &c) : MAP<TYPE_AS_Name,TYPE_TRL_uTAR_uDEF_pred_udef>(c) {}

  type_7AS_NameC23TRL_uTAR_uDEF_pred_udefCM(const Generic &c) : MAP<TYPE_AS_Name,TYPE_TRL_uTAR_uDEF_pred_udef>(c) {}

  const char * GetTypeName() const { return "type_7AS_NameC23TRL_uTAR_uDEF_pred_udefCM"; }
} ;
#endif

#ifndef DECL_type_7AS_NameC25TRL_uTAR_uDEF_select_udefCM
#define DECL_type_7AS_NameC25TRL_uTAR_uDEF_select_udefCM 1

class type_7AS_NameC25TRL_uTAR_uDEF_select_udefCM : public MAP<TYPE_AS_Name,TYPE_TRL_uTAR_uDEF_select_udef> {
public:

  type_7AS_NameC25TRL_uTAR_uDEF_select_udefCM() : MAP<TYPE_AS_Name,TYPE_TRL_uTAR_uDEF_select_udef>() {}

  type_7AS_NameC25TRL_uTAR_uDEF_select_udefCM(const MAP<TYPE_AS_Name,TYPE_TRL_uTAR_uDEF_select_udef> &c) : MAP<TYPE_AS_Name,TYPE_TRL_uTAR_uDEF_select_udef>(c) {}

  type_7AS_NameC25TRL_uTAR_uDEF_select_udefCM(const Generic &c) : MAP<TYPE_AS_Name,TYPE_TRL_uTAR_uDEF_select_udef>(c) {}

  const char * GetTypeName() const { return "type_7AS_NameC25TRL_uTAR_uDEF_select_udefCM"; }
} ;
#endif

#ifndef DECL_type_FF2P
#define DECL_type_FF2P 1

class type_FF2P : public Tuple {
public:

  type_FF2P() : Tuple(2) {}
  void Init(TYPE_HOL_term p2, TYPE_HOL_term_utype p3);

  type_FF2P(const Generic &c) : Tuple(c) {}

  const char * GetTypeName() const { return "type_FF2P"; }
  TYPE_HOL_term get_1() const;
  void set_1(const TYPE_HOL_term &p);
  TYPE_HOL_term_utype get_2() const;
  void set_2(const TYPE_HOL_term_utype &p);
} ;
#endif

#ifndef DECL_type_7AS_NameC23TRL_uTAR_uDEF_func_udefCM
#define DECL_type_7AS_NameC23TRL_uTAR_uDEF_func_udefCM 1

class type_7AS_NameC23TRL_uTAR_uDEF_func_udefCM : public MAP<TYPE_AS_Name,TYPE_TRL_uTAR_uDEF_func_udef> {
public:

  type_7AS_NameC23TRL_uTAR_uDEF_func_udefCM() : MAP<TYPE_AS_Name,TYPE_TRL_uTAR_uDEF_func_udef>() {}

  type_7AS_NameC23TRL_uTAR_uDEF_func_udefCM(const MAP<TYPE_AS_Name,TYPE_TRL_uTAR_uDEF_func_udef> &c) : MAP<TYPE_AS_Name,TYPE_TRL_uTAR_uDEF_func_udef>(c) {}

  type_7AS_NameC23TRL_uTAR_uDEF_func_udefCM(const Generic &c) : MAP<TYPE_AS_Name,TYPE_TRL_uTAR_uDEF_func_udef>(c) {}

  const char * GetTypeName() const { return "type_7AS_NameC23TRL_uTAR_uDEF_func_udefCM"; }
} ;
#endif

#ifndef DECL_type_typevariableS
#define DECL_type_typevariableS 1

class type_typevariableS : public SET<Generic> {
public:

  type_typevariableS() : SET<Generic>() {}

  type_typevariableS(const SET<Generic> &c) : SET<Generic>(c) {}

  type_typevariableS(const Generic &c) : SET<Generic>(c) {}

  const char * GetTypeName() const { return "type_typevariableS"; }
} ;
#endif

#ifndef DECL_type_typevariableL
#define DECL_type_typevariableL 1

class type_typevariableL : public SEQ<Generic> {
public:

  type_typevariableL() : SEQ<Generic>() {}

  type_typevariableL(const SEQ<Generic> &c) : SEQ<Generic>(c) {}

  type_typevariableL(const Generic &c) : SEQ<Generic>(c) {}

  const char * GetTypeName() const { return "type_typevariableL"; }
} ;
#endif

#ifndef DECL_type_22TRL_uTAR_uDEF_ValueDefCL
#define DECL_type_22TRL_uTAR_uDEF_ValueDefCL 1

class type_22TRL_uTAR_uDEF_ValueDefCL : public SEQ<TYPE_TRL_uTAR_uDEF_ValueDef> {
public:

  type_22TRL_uTAR_uDEF_ValueDefCL() : SEQ<TYPE_TRL_uTAR_uDEF_ValueDef>() {}

  type_22TRL_uTAR_uDEF_ValueDefCL(const SEQ<TYPE_TRL_uTAR_uDEF_ValueDef> &c) : SEQ<TYPE_TRL_uTAR_uDEF_ValueDef>(c) {}

  type_22TRL_uTAR_uDEF_ValueDefCL(const Generic &c) : SEQ<TYPE_TRL_uTAR_uDEF_ValueDef>(c) {}

  const char * GetTypeName() const { return "type_22TRL_uTAR_uDEF_ValueDefCL"; }
} ;
#endif

#ifndef DECL_type_7AS_NameC24TRL_uTAR_uDEF_const_udefCM
#define DECL_type_7AS_NameC24TRL_uTAR_uDEF_const_udefCM 1

class type_7AS_NameC24TRL_uTAR_uDEF_const_udefCM : public MAP<TYPE_AS_Name,TYPE_TRL_uTAR_uDEF_const_udef> {
public:

  type_7AS_NameC24TRL_uTAR_uDEF_const_udefCM() : MAP<TYPE_AS_Name,TYPE_TRL_uTAR_uDEF_const_udef>() {}

  type_7AS_NameC24TRL_uTAR_uDEF_const_udefCM(const MAP<TYPE_AS_Name,TYPE_TRL_uTAR_uDEF_const_udef> &c) : MAP<TYPE_AS_Name,TYPE_TRL_uTAR_uDEF_const_udef>(c) {}

  type_7AS_NameC24TRL_uTAR_uDEF_const_udefCM(const Generic &c) : MAP<TYPE_AS_Name,TYPE_TRL_uTAR_uDEF_const_udef>(c) {}

  const char * GetTypeName() const { return "type_7AS_NameC24TRL_uTAR_uDEF_const_udefCM"; }
} ;
#endif

#ifndef DECL_type_19CI_TokenContextInfoCL
#define DECL_type_19CI_TokenContextInfoCL 1

class type_19CI_TokenContextInfoCL : public SEQ<TYPE_CI_TokenContextInfo> {
public:

  type_19CI_TokenContextInfoCL() : SEQ<TYPE_CI_TokenContextInfo>() {}

  type_19CI_TokenContextInfoCL(const SEQ<TYPE_CI_TokenContextInfo> &c) : SEQ<TYPE_CI_TokenContextInfo>(c) {}

  type_19CI_TokenContextInfoCL(const Generic &c) : SEQ<TYPE_CI_TokenContextInfo>(c) {}

  const char * GetTypeName() const { return "type_19CI_TokenContextInfoCL"; }
} ;
#endif

#ifndef DECL_type_i7AS_NameCM
#define DECL_type_i7AS_NameCM 1

class type_i7AS_NameCM : public MAP<Int,TYPE_AS_Name> {
public:

  type_i7AS_NameCM() : MAP<Int,TYPE_AS_Name>() {}

  type_i7AS_NameCM(const MAP<Int,TYPE_AS_Name> &c) : MAP<Int,TYPE_AS_Name>(c) {}

  type_i7AS_NameCM(const Generic &c) : MAP<Int,TYPE_AS_Name>(c) {}

  const char * GetTypeName() const { return "type_i7AS_NameCM"; }
} ;
#endif

#ifndef DECL_type_7AS_NameCFM
#define DECL_type_7AS_NameCFM 1

class type_7AS_NameCFM : public MAP<TYPE_AS_Name,Generic> {
public:

  type_7AS_NameCFM() : MAP<TYPE_AS_Name,Generic>() {}

  type_7AS_NameCFM(const MAP<TYPE_AS_Name,Generic> &c) : MAP<TYPE_AS_Name,Generic>(c) {}

  type_7AS_NameCFM(const Generic &c) : MAP<TYPE_AS_Name,Generic>(c) {}

  const char * GetTypeName() const { return "type_7AS_NameCFM"; }
} ;
#endif

#ifndef DECL_type_UL
#define DECL_type_UL 1

class type_UL : public SEQ<Generic> {
public:

  type_UL() : SEQ<Generic>() {}

  type_UL(const SEQ<Generic> &c) : SEQ<Generic>(c) {}

  type_UL(const Generic &c) : SEQ<Generic>(c) {}

  const char * GetTypeName() const { return "type_UL"; }
} ;
#endif


#endif

