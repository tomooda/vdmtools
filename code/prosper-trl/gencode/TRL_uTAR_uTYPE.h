//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Wed 13-Oct-99 by the VDM-SLtoC++ Code Generator
// (v3.3 - Mon 22-Mar-99)
//
// Supported compilers:
// 	egcs version 1.1 on SunOS4, SunOS5, Linux, HP-UX10
// 	VC++ version 6.0 on Windows95, Windows NT
//

#ifndef _TRL_uTAR_uTYPE_h
#define _TRL_uTAR_uTYPE_h

#include <math.h>
#include "metaiv.h"
#include "cg.h"
#include "cg_aux.h"
#include "AS.h"
#include "CI.h"
#include "HOL.h"
#include "REP.h"
#include "TRL_uTAR_uTYPE_anonym.h"
enum  {
  vdm_TRL_uTAR_uTYPE_FIELD = TAG_TYPE_TRL_uTAR_uTYPE_FIELD,
  length_TRL_uTAR_uTYPE_FIELD = 2,
  pos_TRL_uTAR_uTYPE_FIELD_sel = 1,
  pos_TRL_uTAR_uTYPE_FIELD_tp = 2,
  vdm_TRL_uTAR_uTYPE_TYPE = TAG_TYPE_TRL_uTAR_uTYPE_TYPE,
  length_TRL_uTAR_uTYPE_TYPE = 2,
  pos_TRL_uTAR_uTYPE_TYPE_tp = 1,
  pos_TRL_uTAR_uTYPE_TYPE_fv = 2
};

class TYPE_TRL_uTAR_uTYPE_FIELD : public Record {
public:

  TYPE_TRL_uTAR_uTYPE_FIELD() : Record(TAG_TYPE_TRL_uTAR_uTYPE_FIELD, 2) {}
  void Init(TYPE_TRL_uTAR_uTYPE_Ids p2, TYPE_TRL_uTAR_uTYPE_Type p3);

  TYPE_TRL_uTAR_uTYPE_FIELD(const Generic &c) : Record(c) {}

  const char * GetTypeName() const { return "TYPE_TRL_uTAR_uTYPE_FIELD"; }
  TYPE_TRL_uTAR_uTYPE_Ids get_sel() const;
  void set_sel(const TYPE_TRL_uTAR_uTYPE_Ids &p);
  TYPE_TRL_uTAR_uTYPE_Type get_tp() const;
  void set_tp(const TYPE_TRL_uTAR_uTYPE_Type &p);
} ;

class TYPE_TRL_uTAR_uTYPE_TYPE : public Record {
public:

  TYPE_TRL_uTAR_uTYPE_TYPE() : Record(TAG_TYPE_TRL_uTAR_uTYPE_TYPE, 2) {}
  void Init(TYPE_HOL_type_uexpr p2, type_cLS p3);

  TYPE_TRL_uTAR_uTYPE_TYPE(const Generic &c) : Record(c) {}

  const char * GetTypeName() const { return "TYPE_TRL_uTAR_uTYPE_TYPE"; }
  TYPE_HOL_type_uexpr get_tp() const;
  void set_tp(const TYPE_HOL_type_uexpr &p);
  type_cLS get_fv() const;
  void set_fv(const type_cLS &p);
} ;
void init_TRL_uTAR_uTYPE();
TYPE_TRL_uTAR_uTYPE_BasicType vdm_TRL_uTAR_uTYPE_tar_uBooleanType(const TYPE_CI_ContextId &);
TYPE_TRL_uTAR_uTYPE_BracketedType vdm_TRL_uTAR_uTYPE_tar_uBracketedType(const TYPE_TRL_uTAR_uTYPE_Type &, const TYPE_CI_ContextId &);
TYPE_TRL_uTAR_uTYPE_BasicType vdm_TRL_uTAR_uTYPE_tar_uCharType(const TYPE_CI_ContextId &);
TYPE_TRL_uTAR_uTYPE_CompositeType vdm_TRL_uTAR_uTYPE_tar_uCompositeType(const TYPE_TRL_uTAR_uTYPE_Ids &, const type_20TRL_uTAR_uTYPE_FIELDCL &, const TYPE_CI_ContextId &);
TYPE_TRL_uTAR_uTYPE_Field vdm_TRL_uTAR_uTYPE_tar_uField(const TYPE_TRL_uTAR_uTYPE_Ids &, const TYPE_TRL_uTAR_uTYPE_Type &, const Bool &, const TYPE_CI_ContextId &);
TYPE_TRL_uTAR_uTYPE_GeneralMapType vdm_TRL_uTAR_uTYPE_tar_uGeneralMapType(const TYPE_TRL_uTAR_uTYPE_Type &, const TYPE_TRL_uTAR_uTYPE_Type &, const TYPE_CI_ContextId &);
TYPE_TRL_uTAR_uTYPE_Ids vdm_TRL_uTAR_uTYPE_tar_uIds(const TYPE_AS_Ids &);
TYPE_TRL_uTAR_uTYPE_InjectiveMapType vdm_TRL_uTAR_uTYPE_tar_uInjectiveMapType(const TYPE_TRL_uTAR_uTYPE_Type &, const TYPE_TRL_uTAR_uTYPE_Type &, const TYPE_CI_ContextId &);
TYPE_TRL_uTAR_uTYPE_BasicType vdm_TRL_uTAR_uTYPE_tar_uIntegerType(const TYPE_CI_ContextId &);
TYPE_TRL_uTAR_uTYPE_Name vdm_TRL_uTAR_uTYPE_tar_uName(const TYPE_TRL_uTAR_uTYPE_Ids &, const TYPE_CI_ContextId &);
TYPE_TRL_uTAR_uTYPE_BasicType vdm_TRL_uTAR_uTYPE_tar_uNatOneType(const TYPE_CI_ContextId &);
TYPE_TRL_uTAR_uTYPE_BasicType vdm_TRL_uTAR_uTYPE_tar_uNatType(const TYPE_CI_ContextId &);
TYPE_TRL_uTAR_uTYPE_OptionalType vdm_TRL_uTAR_uTYPE_tar_uOptionalType(const TYPE_TRL_uTAR_uTYPE_Type &, const TYPE_CI_ContextId &);
TYPE_TRL_uTAR_uTYPE_PartialFnType vdm_TRL_uTAR_uTYPE_tar_uPartialFnType(const type_19TRL_uTAR_uTYPE_TYPECL &, const TYPE_TRL_uTAR_uTYPE_Type &, const TYPE_CI_ContextId &);
TYPE_TRL_uTAR_uTYPE_ProductType vdm_TRL_uTAR_uTYPE_tar_uProductType(const type_19TRL_uTAR_uTYPE_TYPECL &, const TYPE_CI_ContextId &);
TYPE_TRL_uTAR_uTYPE_QuoteType vdm_TRL_uTAR_uTYPE_tar_uQuoteType(const TYPE_AS_QuoteLit &, const TYPE_CI_ContextId &);
TYPE_TRL_uTAR_uTYPE_BasicType vdm_TRL_uTAR_uTYPE_tar_uRatType(const TYPE_CI_ContextId &);
TYPE_TRL_uTAR_uTYPE_BasicType vdm_TRL_uTAR_uTYPE_tar_uRealType(const TYPE_CI_ContextId &);
TYPE_TRL_uTAR_uTYPE_Seq0Type vdm_TRL_uTAR_uTYPE_tar_uSeq0Type(const TYPE_TRL_uTAR_uTYPE_Type &, const TYPE_CI_ContextId &);
TYPE_TRL_uTAR_uTYPE_Seq1Type vdm_TRL_uTAR_uTYPE_tar_uSeq1Type(const TYPE_TRL_uTAR_uTYPE_Type &, const TYPE_CI_ContextId &);
TYPE_TRL_uTAR_uTYPE_SetType vdm_TRL_uTAR_uTYPE_tar_uSetType(const TYPE_TRL_uTAR_uTYPE_Type &, const TYPE_CI_ContextId &);
TYPE_TRL_uTAR_uTYPE_BasicType vdm_TRL_uTAR_uTYPE_tar_uTokenType(const TYPE_CI_ContextId &);
TYPE_TRL_uTAR_uTYPE_TotalFnType vdm_TRL_uTAR_uTYPE_tar_uTotalFnType(const type_19TRL_uTAR_uTYPE_TYPECL &, const TYPE_TRL_uTAR_uTYPE_Type &, const TYPE_CI_ContextId &);
TYPE_TRL_uTAR_uTYPE_TypeName vdm_TRL_uTAR_uTYPE_tar_uTypeName(const TYPE_TRL_uTAR_uTYPE_Ids &, const TYPE_CI_ContextId &);
TYPE_TRL_uTAR_uTYPE_TypeVar vdm_TRL_uTAR_uTYPE_tar_uTypeVar(const TYPE_TRL_uTAR_uTYPE_Ids &, const TYPE_CI_ContextId &);
TYPE_TRL_uTAR_uTYPE_UnionType vdm_TRL_uTAR_uTYPE_tar_uUnionType(const type_19TRL_uTAR_uTYPE_TYPECL &, const TYPE_CI_ContextId &);

#endif

