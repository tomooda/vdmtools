//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Tue 21-Dec-99 by the VDM-SLtoC++ Code Generator
// (v3.3 - Thu 06-May-99)
//
// Supported compilers:
// 	egcs version 1.1 on SunOS4, SunOS5, Linux, HP-UX10
// 	VC++ version 6.0 on Windows95, Windows NT
//

#ifndef _TIMEMAP_h
#define _TIMEMAP_h

#include <math.h>
#include "metaiv.h"
#include "cg.h"
#include "cg_aux.h"
#include "REP.h"
#include "TIMEPARSER.h"
#include "TIMEMAP_anonym.h"
enum  {
  vdm_TIMEMAP_Error = TAG_TYPE_TIMEMAP_Error,
  length_TIMEMAP_Error = 2,
  pos_TIMEMAP_Error_entry = 1,
  pos_TIMEMAP_Error_reps = 2
};

class TYPE_TIMEMAP_Error : public Record {
public:

  TYPE_TIMEMAP_Error() : Record(TAG_TYPE_TIMEMAP_Error, 2) {}
  TYPE_TIMEMAP_Error &Init(TYPE_TIMEPARSER_TimeEntry p2, type_FS p3);

  TYPE_TIMEMAP_Error(const Generic &c) : Record(c) {}

  const wchar_t * GetTypeName() const { return L"TYPE_TIMEMAP_Error"; }
  TYPE_TIMEPARSER_TimeEntry get_entry() const;
  void set_entry(const TYPE_TIMEPARSER_TimeEntry &p);
  type_FS get_reps() const;
  void set_reps(const type_FS &p);
} ;
extern Int vdm_TIMEMAP_defaultDuration;
void init_TIMEMAP();
TYPE_TIMEMAP_Timemap vdm_TIMEMAP_MkTimeMap(const TYPE_TIMEPARSER_Timefile &);
Bool vdm_TIMEMAP_pre_MkTimeMap(const TYPE_TIMEPARSER_Timefile &);
TYPE_TIMEMAP_Timemap vdm_TIMEMAP_defaultTimemap();
type_13TIMEMAP_ErrorCS vdm_TIMEMAP_wf_uTimefile(const TYPE_TIMEPARSER_Timefile &);

#endif

