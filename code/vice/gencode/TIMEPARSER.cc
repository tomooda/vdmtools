//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Fri 10-Mar-00 by the VDM-SLtoC++ Code Generator
// (v3.3 - Thu 06-May-99)
//
// Supported compilers:
// 	egcs version 1.1 on SunOS4, SunOS5, Linux, HP-UX10
// 	VC++ version 6.0 on Windows95, Windows NT
//



#include "TIMEPARSER.h"

TYPE_TIMEPARSER_Abs &TYPE_TIMEPARSER_Abs::Init() { return * this; }

TYPE_TIMEPARSER_AddEnv &TYPE_TIMEPARSER_AddEnv::Init() { return * this; }

TYPE_TIMEPARSER_Addset &TYPE_TIMEPARSER_Addset::Init() { return * this; }

TYPE_TIMEPARSER_AllorExists &TYPE_TIMEPARSER_AllorExists::Init() { return * this; }

TYPE_TIMEPARSER_Always &TYPE_TIMEPARSER_Always::Init() { return * this; }

TYPE_TIMEPARSER_And &TYPE_TIMEPARSER_And::Init() { return * this; }

TYPE_TIMEPARSER_Appendmap &TYPE_TIMEPARSER_Appendmap::Init() { return * this; }

TYPE_TIMEPARSER_Appendseq &TYPE_TIMEPARSER_Appendseq::Init() { return * this; }

TYPE_TIMEPARSER_Appendtup &TYPE_TIMEPARSER_Appendtup::Init() { return * this; }

TYPE_TIMEPARSER_Apply &TYPE_TIMEPARSER_Apply::Init() { return * this; }

TYPE_TIMEPARSER_AssemblyEntry &TYPE_TIMEPARSER_AssemblyEntry::Init(TYPE_TIMEPARSER_AssemblyInstruction p1, Int p2, TYPE_TIMEPARSER_ContextInfo p3) {
  SetField(1, p1);
  SetField(2, p2);
  SetField(3, p3);
  return * this;
}

TYPE_TIMEPARSER_AssemblyInstruction TYPE_TIMEPARSER_AssemblyEntry::get_instr() const { return (TYPE_TIMEPARSER_AssemblyInstruction) GetField(1); }

void TYPE_TIMEPARSER_AssemblyEntry::set_instr(const TYPE_TIMEPARSER_AssemblyInstruction &p) { SetField(1, p); }

Int TYPE_TIMEPARSER_AssemblyEntry::get_time() const { return (Int) GetField(2); }

void TYPE_TIMEPARSER_AssemblyEntry::set_time(const Int &p) { SetField(2, p); }

TYPE_TIMEPARSER_ContextInfo TYPE_TIMEPARSER_AssemblyEntry::get_cid() const { return (TYPE_TIMEPARSER_ContextInfo) GetField(3); }

void TYPE_TIMEPARSER_AssemblyEntry::set_cid(const TYPE_TIMEPARSER_ContextInfo &p) { SetField(3, p); }

TYPE_TIMEPARSER_Assembly_uAdd &TYPE_TIMEPARSER_Assembly_uAdd::Init() { return * this; }

TYPE_TIMEPARSER_Assembly_uBranch &TYPE_TIMEPARSER_Assembly_uBranch::Init() { return * this; }

TYPE_TIMEPARSER_Assembly_uCall &TYPE_TIMEPARSER_Assembly_uCall::Init() { return * this; }

TYPE_TIMEPARSER_Assembly_uCas &TYPE_TIMEPARSER_Assembly_uCas::Init() { return * this; }

TYPE_TIMEPARSER_Assembly_uCompare &TYPE_TIMEPARSER_Assembly_uCompare::Init() { return * this; }

TYPE_TIMEPARSER_Assembly_uDiv &TYPE_TIMEPARSER_Assembly_uDiv::Init() { return * this; }

TYPE_TIMEPARSER_Assembly_uFsqrt &TYPE_TIMEPARSER_Assembly_uFsqrt::Init() { return * this; }

TYPE_TIMEPARSER_Assembly_uLogic &TYPE_TIMEPARSER_Assembly_uLogic::Init() { return * this; }

TYPE_TIMEPARSER_Assembly_uMul &TYPE_TIMEPARSER_Assembly_uMul::Init() { return * this; }

TYPE_TIMEPARSER_Assembly_uNeg &TYPE_TIMEPARSER_Assembly_uNeg::Init() { return * this; }

TYPE_TIMEPARSER_Assembly_uPop &TYPE_TIMEPARSER_Assembly_uPop::Init() { return * this; }

TYPE_TIMEPARSER_Assembly_uPush &TYPE_TIMEPARSER_Assembly_uPush::Init() { return * this; }

TYPE_TIMEPARSER_Assembly_uReturn &TYPE_TIMEPARSER_Assembly_uReturn::Init() { return * this; }

TYPE_TIMEPARSER_Assembly_uSub &TYPE_TIMEPARSER_Assembly_uSub::Init() { return * this; }

TYPE_TIMEPARSER_Div &TYPE_TIMEPARSER_Div::Init() { return * this; }

TYPE_TIMEPARSER_Equal &TYPE_TIMEPARSER_Equal::Init() { return * this; }

TYPE_TIMEPARSER_GreaterThan &TYPE_TIMEPARSER_GreaterThan::Init() { return * this; }

TYPE_TIMEPARSER_GreaterThanOrEqual &TYPE_TIMEPARSER_GreaterThanOrEqual::Init() { return * this; }

TYPE_TIMEPARSER_Intdiv &TYPE_TIMEPARSER_Intdiv::Init() { return * this; }

TYPE_TIMEPARSER_Minus &TYPE_TIMEPARSER_Minus::Init() { return * this; }

TYPE_TIMEPARSER_Mod &TYPE_TIMEPARSER_Mod::Init() { return * this; }

TYPE_TIMEPARSER_Mult &TYPE_TIMEPARSER_Mult::Init() { return * this; }

TYPE_TIMEPARSER_Or &TYPE_TIMEPARSER_Or::Init() { return * this; }

TYPE_TIMEPARSER_Plus &TYPE_TIMEPARSER_Plus::Init() { return * this; }

TYPE_TIMEPARSER_Rem &TYPE_TIMEPARSER_Rem::Init() { return * this; }

TYPE_TIMEPARSER_BindList &TYPE_TIMEPARSER_BindList::Init() { return * this; }

TYPE_TIMEPARSER_BlockStmt &TYPE_TIMEPARSER_BlockStmt::Init() { return * this; }

TYPE_TIMEPARSER_Br &TYPE_TIMEPARSER_Br::Init() { return * this; }

TYPE_TIMEPARSER_Call &TYPE_TIMEPARSER_Call::Init() { return * this; }

TYPE_TIMEPARSER_Cbr &TYPE_TIMEPARSER_Cbr::Init() { return * this; }

TYPE_TIMEPARSER_ContextInfo &TYPE_TIMEPARSER_ContextInfo::Init(Int p1) {
  SetField(1, p1);
  return * this;
}

Int TYPE_TIMEPARSER_ContextInfo::get_line() const { return (Int) GetField(1); }

void TYPE_TIMEPARSER_ContextInfo::set_line(const Int &p) { SetField(1, p); }

TYPE_TIMEPARSER_Exit &TYPE_TIMEPARSER_Exit::Init() { return * this; }

TYPE_TIMEPARSER_Fieldsel &TYPE_TIMEPARSER_Fieldsel::Init() { return * this; }

TYPE_TIMEPARSER_Floor &TYPE_TIMEPARSER_Floor::Init() { return * this; }

TYPE_TIMEPARSER_Guard &TYPE_TIMEPARSER_Guard::Init() { return * this; }

TYPE_TIMEPARSER_History &TYPE_TIMEPARSER_History::Init() { return * this; }

TYPE_TIMEPARSER_Iota &TYPE_TIMEPARSER_Iota::Init() { return * this; }

TYPE_TIMEPARSER_Isexpr &TYPE_TIMEPARSER_Isexpr::Init() { return * this; }

TYPE_TIMEPARSER_Isofbaseclass &TYPE_TIMEPARSER_Isofbaseclass::Init() { return * this; }

TYPE_TIMEPARSER_Isofclass &TYPE_TIMEPARSER_Isofclass::Init() { return * this; }

TYPE_TIMEPARSER_LambdaExpr &TYPE_TIMEPARSER_LambdaExpr::Init() { return * this; }

TYPE_TIMEPARSER_LetBeST &TYPE_TIMEPARSER_LetBeST::Init() { return * this; }

TYPE_TIMEPARSER_Lookup &TYPE_TIMEPARSER_Lookup::Init() { return * this; }

TYPE_TIMEPARSER_Loop &TYPE_TIMEPARSER_Loop::Init() { return * this; }

TYPE_TIMEPARSER_MapInverse &TYPE_TIMEPARSER_MapInverse::Init() { return * this; }

TYPE_TIMEPARSER_MatchPattern &TYPE_TIMEPARSER_MatchPattern::Init() { return * this; }

TYPE_TIMEPARSER_Newobj &TYPE_TIMEPARSER_Newobj::Init() { return * this; }

TYPE_TIMEPARSER_NonDet &TYPE_TIMEPARSER_NonDet::Init() { return * this; }

TYPE_TIMEPARSER_Not &TYPE_TIMEPARSER_Not::Init() { return * this; }

TYPE_TIMEPARSER_Pattern &TYPE_TIMEPARSER_Pattern::Init() { return * this; }

TYPE_TIMEPARSER_Polyinst &TYPE_TIMEPARSER_Polyinst::Init() { return * this; }

TYPE_TIMEPARSER_RecTrap &TYPE_TIMEPARSER_RecTrap::Init() { return * this; }

TYPE_TIMEPARSER_Reccons &TYPE_TIMEPARSER_Reccons::Init() { return * this; }

TYPE_TIMEPARSER_Recmod &TYPE_TIMEPARSER_Recmod::Init() { return * this; }

TYPE_TIMEPARSER_Return &TYPE_TIMEPARSER_Return::Init() { return * this; }

TYPE_TIMEPARSER_Samebaseclass &TYPE_TIMEPARSER_Samebaseclass::Init() { return * this; }

TYPE_TIMEPARSER_Sameclass &TYPE_TIMEPARSER_Sameclass::Init() { return * this; }

TYPE_TIMEPARSER_Selfexpr &TYPE_TIMEPARSER_Selfexpr::Init() { return * this; }

TYPE_TIMEPARSER_Seqlen &TYPE_TIMEPARSER_Seqlen::Init() { return * this; }

TYPE_TIMEPARSER_Seqmapover &TYPE_TIMEPARSER_Seqmapover::Init() { return * this; }

TYPE_TIMEPARSER_Setcard &TYPE_TIMEPARSER_Setcard::Init() { return * this; }

TYPE_TIMEPARSER_Setrng &TYPE_TIMEPARSER_Setrng::Init() { return * this; }

TYPE_TIMEPARSER_Start &TYPE_TIMEPARSER_Start::Init() { return * this; }

TYPE_TIMEPARSER_Subseq &TYPE_TIMEPARSER_Subseq::Init() { return * this; }

TYPE_TIMEPARSER_Threadid &TYPE_TIMEPARSER_Threadid::Init() { return * this; }

TYPE_TIMEPARSER_Trap &TYPE_TIMEPARSER_Trap::Init() { return * this; }

TYPE_TIMEPARSER_Tupsel &TYPE_TIMEPARSER_Tupsel::Init() { return * this; }

TYPE_TIMEPARSER_Update &TYPE_TIMEPARSER_Update::Init() { return * this; }

TYPE_TIMEPARSER_SimpleEntry &TYPE_TIMEPARSER_SimpleEntry::Init(TYPE_TIMEPARSER_Instruction p1, TYPE_TIMEPARSER_TimeExpr p2, TYPE_TIMEPARSER_ContextInfo p3) {
  SetField(1, p1);
  SetField(2, p2);
  SetField(3, p3);
  return * this;
}

TYPE_TIMEPARSER_Instruction TYPE_TIMEPARSER_SimpleEntry::get_instr() const { return (TYPE_TIMEPARSER_Instruction) GetField(1); }

void TYPE_TIMEPARSER_SimpleEntry::set_instr(const TYPE_TIMEPARSER_Instruction &p) { SetField(1, p); }

TYPE_TIMEPARSER_TimeExpr TYPE_TIMEPARSER_SimpleEntry::get_time() const { return (TYPE_TIMEPARSER_TimeExpr) GetField(2); }

void TYPE_TIMEPARSER_SimpleEntry::set_time(const TYPE_TIMEPARSER_TimeExpr &p) { SetField(2, p); }

TYPE_TIMEPARSER_ContextInfo TYPE_TIMEPARSER_SimpleEntry::get_cid() const { return (TYPE_TIMEPARSER_ContextInfo) GetField(3); }

void TYPE_TIMEPARSER_SimpleEntry::set_cid(const TYPE_TIMEPARSER_ContextInfo &p) { SetField(3, p); }

TYPE_TIMEPARSER_TimeBinaryExpr &TYPE_TIMEPARSER_TimeBinaryExpr::Init(TYPE_TIMEPARSER_TimeExpr p1, TYPE_TIMEPARSER_TimeBinaryOp p2, TYPE_TIMEPARSER_TimeExpr p3) {
  SetField(1, p1);
  SetField(2, p2);
  SetField(3, p3);
  return * this;
}

TYPE_TIMEPARSER_TimeExpr TYPE_TIMEPARSER_TimeBinaryExpr::get_lexpr() const { return (TYPE_TIMEPARSER_TimeExpr) GetField(1); }

void TYPE_TIMEPARSER_TimeBinaryExpr::set_lexpr(const TYPE_TIMEPARSER_TimeExpr &p) { SetField(1, p); }

TYPE_TIMEPARSER_TimeBinaryOp TYPE_TIMEPARSER_TimeBinaryExpr::get_op() const { return (TYPE_TIMEPARSER_TimeBinaryOp) GetField(2); }

void TYPE_TIMEPARSER_TimeBinaryExpr::set_op(const TYPE_TIMEPARSER_TimeBinaryOp &p) { SetField(2, p); }

TYPE_TIMEPARSER_TimeExpr TYPE_TIMEPARSER_TimeBinaryExpr::get_rexpr() const { return (TYPE_TIMEPARSER_TimeExpr) GetField(3); }

void TYPE_TIMEPARSER_TimeBinaryExpr::set_rexpr(const TYPE_TIMEPARSER_TimeExpr &p) { SetField(3, p); }

TYPE_TIMEPARSER_TimeMultiply &TYPE_TIMEPARSER_TimeMultiply::Init() { return * this; }

TYPE_TIMEPARSER_TimePlus &TYPE_TIMEPARSER_TimePlus::Init() { return * this; }

TYPE_TIMEPARSER_TimeBracketedExpr &TYPE_TIMEPARSER_TimeBracketedExpr::Init(TYPE_TIMEPARSER_TimeExpr p1) {
  SetField(1, p1);
  return * this;
}

TYPE_TIMEPARSER_TimeExpr TYPE_TIMEPARSER_TimeBracketedExpr::get_expr() const { return (TYPE_TIMEPARSER_TimeExpr) GetField(1); }

void TYPE_TIMEPARSER_TimeBracketedExpr::set_expr(const TYPE_TIMEPARSER_TimeExpr &p) { SetField(1, p); }

TYPE_TIMEPARSER_TypedEntry &TYPE_TIMEPARSER_TypedEntry::Init(TYPE_TIMEPARSER_Instruction p1, TYPE_TIMEPARSER_TimeExpr p2, TYPE_REP_BasicTypeRep p3, TYPE_TIMEPARSER_ContextInfo p4) {
  SetField(1, p1);
  SetField(2, p2);
  SetField(3, p3);
  SetField(4, p4);
  return * this;
}

TYPE_TIMEPARSER_Instruction TYPE_TIMEPARSER_TypedEntry::get_instr() const { return (TYPE_TIMEPARSER_Instruction) GetField(1); }

void TYPE_TIMEPARSER_TypedEntry::set_instr(const TYPE_TIMEPARSER_Instruction &p) { SetField(1, p); }

TYPE_TIMEPARSER_TimeExpr TYPE_TIMEPARSER_TypedEntry::get_time() const { return (TYPE_TIMEPARSER_TimeExpr) GetField(2); }

void TYPE_TIMEPARSER_TypedEntry::set_time(const TYPE_TIMEPARSER_TimeExpr &p) { SetField(2, p); }

TYPE_REP_BasicTypeRep TYPE_TIMEPARSER_TypedEntry::get_tp() const { return (TYPE_REP_BasicTypeRep) GetField(3); }

void TYPE_TIMEPARSER_TypedEntry::set_tp(const TYPE_REP_BasicTypeRep &p) { SetField(3, p); }

TYPE_TIMEPARSER_ContextInfo TYPE_TIMEPARSER_TypedEntry::get_cid() const { return (TYPE_TIMEPARSER_ContextInfo) GetField(4); }

void TYPE_TIMEPARSER_TypedEntry::set_cid(const TYPE_TIMEPARSER_ContextInfo &p) { SetField(4, p); }

void init_TIMEPARSER_VDMLib() {
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Abs, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Abs, L"TIMEPARSER`Abs");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_AddEnv, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_AddEnv, L"TIMEPARSER`AddEnv");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Addset, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Addset, L"TIMEPARSER`Addset");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_AllorExists, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_AllorExists, L"TIMEPARSER`AllorExists");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Always, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Always, L"TIMEPARSER`Always");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_And, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_And, L"TIMEPARSER`And");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Appendmap, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Appendmap, L"TIMEPARSER`Appendmap");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Appendseq, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Appendseq, L"TIMEPARSER`Appendseq");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Appendtup, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Appendtup, L"TIMEPARSER`Appendtup");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Apply, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Apply, L"TIMEPARSER`Apply");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_AssemblyEntry, 3);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_AssemblyEntry, L"TIMEPARSER`AssemblyEntry");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Assembly_uAdd, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Assembly_uAdd, L"TIMEPARSER`Assembly_uAdd");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Assembly_uBranch, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Assembly_uBranch, L"TIMEPARSER`Assembly_uBranch");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Assembly_uCall, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Assembly_uCall, L"TIMEPARSER`Assembly_uCall");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Assembly_uCas, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Assembly_uCas, L"TIMEPARSER`Assembly_uCas");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Assembly_uCompare, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Assembly_uCompare, L"TIMEPARSER`Assembly_uCompare");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Assembly_uDiv, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Assembly_uDiv, L"TIMEPARSER`Assembly_uDiv");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Assembly_uFsqrt, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Assembly_uFsqrt, L"TIMEPARSER`Assembly_uFsqrt");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Assembly_uLogic, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Assembly_uLogic, L"TIMEPARSER`Assembly_uLogic");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Assembly_uMul, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Assembly_uMul, L"TIMEPARSER`Assembly_uMul");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Assembly_uNeg, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Assembly_uNeg, L"TIMEPARSER`Assembly_uNeg");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Assembly_uPop, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Assembly_uPop, L"TIMEPARSER`Assembly_uPop");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Assembly_uPush, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Assembly_uPush, L"TIMEPARSER`Assembly_uPush");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Assembly_uReturn, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Assembly_uReturn, L"TIMEPARSER`Assembly_uReturn");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Assembly_uSub, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Assembly_uSub, L"TIMEPARSER`Assembly_uSub");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_BindList, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_BindList, L"TIMEPARSER`BindList");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_BlockStmt, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_BlockStmt, L"TIMEPARSER`BlockStmt");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Br, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Br, L"TIMEPARSER`Br");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Call, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Call, L"TIMEPARSER`Call");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Cbr, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Cbr, L"TIMEPARSER`Cbr");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_ContextInfo, 1);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_ContextInfo, L"TIMEPARSER`ContextInfo");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Div, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Div, L"TIMEPARSER`Div");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Equal, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Equal, L"TIMEPARSER`Equal");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Exit, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Exit, L"TIMEPARSER`Exit");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Fieldsel, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Fieldsel, L"TIMEPARSER`Fieldsel");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Floor, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Floor, L"TIMEPARSER`Floor");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_GreaterThan, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_GreaterThan, L"TIMEPARSER`GreaterThan");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_GreaterThanOrEqual, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_GreaterThanOrEqual, L"TIMEPARSER`GreaterThanOrEqual");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Guard, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Guard, L"TIMEPARSER`Guard");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_History, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_History, L"TIMEPARSER`History");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Intdiv, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Intdiv, L"TIMEPARSER`Intdiv");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Iota, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Iota, L"TIMEPARSER`Iota");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Isexpr, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Isexpr, L"TIMEPARSER`Isexpr");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Isofbaseclass, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Isofbaseclass, L"TIMEPARSER`Isofbaseclass");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Isofclass, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Isofclass, L"TIMEPARSER`Isofclass");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_LambdaExpr, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_LambdaExpr, L"TIMEPARSER`LambdaExpr");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_LetBeST, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_LetBeST, L"TIMEPARSER`LetBeST");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Lookup, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Lookup, L"TIMEPARSER`Lookup");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Loop, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Loop, L"TIMEPARSER`Loop");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_MapInverse, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_MapInverse, L"TIMEPARSER`MapInverse");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_MatchPattern, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_MatchPattern, L"TIMEPARSER`MatchPattern");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Minus, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Minus, L"TIMEPARSER`Minus");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Mod, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Mod, L"TIMEPARSER`Mod");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Mult, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Mult, L"TIMEPARSER`Mult");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Newobj, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Newobj, L"TIMEPARSER`Newobj");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_NonDet, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_NonDet, L"TIMEPARSER`NonDet");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Not, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Not, L"TIMEPARSER`Not");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Or, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Or, L"TIMEPARSER`Or");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Pattern, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Pattern, L"TIMEPARSER`Pattern");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Plus, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Plus, L"TIMEPARSER`Plus");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Polyinst, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Polyinst, L"TIMEPARSER`Polyinst");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_RecTrap, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_RecTrap, L"TIMEPARSER`RecTrap");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Reccons, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Reccons, L"TIMEPARSER`Reccons");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Recmod, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Recmod, L"TIMEPARSER`Recmod");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Rem, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Rem, L"TIMEPARSER`Rem");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Return, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Return, L"TIMEPARSER`Return");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Samebaseclass, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Samebaseclass, L"TIMEPARSER`Samebaseclass");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Sameclass, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Sameclass, L"TIMEPARSER`Sameclass");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Selfexpr, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Selfexpr, L"TIMEPARSER`Selfexpr");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Seqlen, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Seqlen, L"TIMEPARSER`Seqlen");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Seqmapover, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Seqmapover, L"TIMEPARSER`Seqmapover");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Setcard, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Setcard, L"TIMEPARSER`Setcard");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Setrng, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Setrng, L"TIMEPARSER`Setrng");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_SimpleEntry, 3);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_SimpleEntry, L"TIMEPARSER`SimpleEntry");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Start, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Start, L"TIMEPARSER`Start");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Subseq, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Subseq, L"TIMEPARSER`Subseq");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Threadid, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Threadid, L"TIMEPARSER`Threadid");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_TimeBinaryExpr, 3);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_TimeBinaryExpr, L"TIMEPARSER`TimeBinaryExpr");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_TimeBracketedExpr, 1);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_TimeBracketedExpr, L"TIMEPARSER`TimeBracketedExpr");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_TimeMultiply, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_TimeMultiply, L"TIMEPARSER`TimeMultiply");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_TimePlus, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_TimePlus, L"TIMEPARSER`TimePlus");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Trap, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Trap, L"TIMEPARSER`Trap");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Tupsel, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Tupsel, L"TIMEPARSER`Tupsel");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_TypedEntry, 4);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_TypedEntry, L"TIMEPARSER`TypedEntry");
  VDMGetDefaultRecInfoMap().NewTag(TAG_TYPE_TIMEPARSER_Update, 0);
  VDMGetDefaultRecInfoMap().SetSymTag(TAG_TYPE_TIMEPARSER_Update, L"TIMEPARSER`Update");
  VDMGetDefaultRecInfoMap().NewTag(TOKEN, 1);
  VDMGetDefaultRecInfoMap().SetSymTag(TOKEN, L"token");
}
#ifdef DEF_TIMEPARSER_USERIMPL

#include "TIMEPARSER_userimpl.cc"

#endif


void init_TIMEPARSER() { init_TIMEPARSER_VDMLib(); }
#ifndef DEF_TIMEPARSER_AssemblyInstrMap

type_cL vdm_TIMEPARSER_AssemblyInstrMap(const TYPE_TIMEPARSER_AssemblyInstruction &vdm_TIMEPARSER_ai) {
  Sequence varRes_3;
  bool succ_4 = true;
  {
    succ_4 = true;
    if (vdm_TIMEPARSER_ai.IsRecord() && vdm_TIMEPARSER_Assembly_uAdd == ((Record) vdm_TIMEPARSER_ai).GetTag()) {
      Sequence e_l_7;
      for (int i_8 = 1; i_8 <= ((Record) vdm_TIMEPARSER_ai).Length(); i_8++) 
        e_l_7.ImpAppend(((Record) vdm_TIMEPARSER_ai).GetField(i_8));
      succ_4 = 0 == (Int) e_l_7.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"add");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_ai.IsRecord() && vdm_TIMEPARSER_Assembly_uBranch == ((Record) vdm_TIMEPARSER_ai).GetTag()) {
      Sequence e_l_9;
      for (int i_10 = 1; i_10 <= ((Record) vdm_TIMEPARSER_ai).Length(); i_10++) 
        e_l_9.ImpAppend(((Record) vdm_TIMEPARSER_ai).GetField(i_10));
      succ_4 = 0 == (Int) e_l_9.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"branch");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_ai.IsRecord() && vdm_TIMEPARSER_Assembly_uCall == ((Record) vdm_TIMEPARSER_ai).GetTag()) {
      Sequence e_l_11;
      for (int i_12 = 1; i_12 <= ((Record) vdm_TIMEPARSER_ai).Length(); i_12++) 
        e_l_11.ImpAppend(((Record) vdm_TIMEPARSER_ai).GetField(i_12));
      succ_4 = 0 == (Int) e_l_11.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"call");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_ai.IsRecord() && vdm_TIMEPARSER_Assembly_uCompare == ((Record) vdm_TIMEPARSER_ai).GetTag()) {
      Sequence e_l_13;
      for (int i_14 = 1; i_14 <= ((Record) vdm_TIMEPARSER_ai).Length(); i_14++) 
        e_l_13.ImpAppend(((Record) vdm_TIMEPARSER_ai).GetField(i_14));
      succ_4 = 0 == (Int) e_l_13.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"compare");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_ai.IsRecord() && vdm_TIMEPARSER_Assembly_uReturn == ((Record) vdm_TIMEPARSER_ai).GetTag()) {
      Sequence e_l_15;
      for (int i_16 = 1; i_16 <= ((Record) vdm_TIMEPARSER_ai).Length(); i_16++) 
        e_l_15.ImpAppend(((Record) vdm_TIMEPARSER_ai).GetField(i_16));
      succ_4 = 0 == (Int) e_l_15.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"return");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_ai.IsRecord() && vdm_TIMEPARSER_Assembly_uSub == ((Record) vdm_TIMEPARSER_ai).GetTag()) {
      Sequence e_l_17;
      for (int i_18 = 1; i_18 <= ((Record) vdm_TIMEPARSER_ai).Length(); i_18++) 
        e_l_17.ImpAppend(((Record) vdm_TIMEPARSER_ai).GetField(i_18));
      succ_4 = 0 == (Int) e_l_17.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"sub");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_ai.IsRecord() && vdm_TIMEPARSER_Assembly_uDiv == ((Record) vdm_TIMEPARSER_ai).GetTag()) {
      Sequence e_l_19;
      for (int i_20 = 1; i_20 <= ((Record) vdm_TIMEPARSER_ai).Length(); i_20++) 
        e_l_19.ImpAppend(((Record) vdm_TIMEPARSER_ai).GetField(i_20));
      succ_4 = 0 == (Int) e_l_19.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"div");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_ai.IsRecord() && vdm_TIMEPARSER_Assembly_uMul == ((Record) vdm_TIMEPARSER_ai).GetTag()) {
      Sequence e_l_21;
      for (int i_22 = 1; i_22 <= ((Record) vdm_TIMEPARSER_ai).Length(); i_22++) 
        e_l_21.ImpAppend(((Record) vdm_TIMEPARSER_ai).GetField(i_22));
      succ_4 = 0 == (Int) e_l_21.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"mul");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_ai.IsRecord() && vdm_TIMEPARSER_Assembly_uNeg == ((Record) vdm_TIMEPARSER_ai).GetTag()) {
      Sequence e_l_23;
      for (int i_24 = 1; i_24 <= ((Record) vdm_TIMEPARSER_ai).Length(); i_24++) 
        e_l_23.ImpAppend(((Record) vdm_TIMEPARSER_ai).GetField(i_24));
      succ_4 = 0 == (Int) e_l_23.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"neg");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_ai.IsRecord() && vdm_TIMEPARSER_Assembly_uFsqrt == ((Record) vdm_TIMEPARSER_ai).GetTag()) {
      Sequence e_l_25;
      for (int i_26 = 1; i_26 <= ((Record) vdm_TIMEPARSER_ai).Length(); i_26++) 
        e_l_25.ImpAppend(((Record) vdm_TIMEPARSER_ai).GetField(i_26));
      succ_4 = 0 == (Int) e_l_25.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"fsqrt");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_ai.IsRecord() && vdm_TIMEPARSER_Assembly_uLogic == ((Record) vdm_TIMEPARSER_ai).GetTag()) {
      Sequence e_l_27;
      for (int i_28 = 1; i_28 <= ((Record) vdm_TIMEPARSER_ai).Length(); i_28++) 
        e_l_27.ImpAppend(((Record) vdm_TIMEPARSER_ai).GetField(i_28));
      succ_4 = 0 == (Int) e_l_27.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"logic");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_ai.IsRecord() && vdm_TIMEPARSER_Assembly_uCas == ((Record) vdm_TIMEPARSER_ai).GetTag()) {
      Sequence e_l_29;
      for (int i_30 = 1; i_30 <= ((Record) vdm_TIMEPARSER_ai).Length(); i_30++) 
        e_l_29.ImpAppend(((Record) vdm_TIMEPARSER_ai).GetField(i_30));
      succ_4 = 0 == (Int) e_l_29.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"cas");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_ai.IsRecord() && vdm_TIMEPARSER_Assembly_uPush == ((Record) vdm_TIMEPARSER_ai).GetTag()) {
      Sequence e_l_31;
      for (int i_32 = 1; i_32 <= ((Record) vdm_TIMEPARSER_ai).Length(); i_32++) 
        e_l_31.ImpAppend(((Record) vdm_TIMEPARSER_ai).GetField(i_32));
      succ_4 = 0 == (Int) e_l_31.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"push");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_ai.IsRecord() && vdm_TIMEPARSER_Assembly_uPop == ((Record) vdm_TIMEPARSER_ai).GetTag()) {
      Sequence e_l_33;
      for (int i_34 = 1; i_34 <= ((Record) vdm_TIMEPARSER_ai).Length(); i_34++) 
        e_l_33.ImpAppend(((Record) vdm_TIMEPARSER_ai).GetField(i_34));
      succ_4 = 0 == (Int) e_l_33.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"pop");
  }
  if (!succ_4) 
    RunTime(L"No \'others\' branch in CasesExpr");
  return (Generic) varRes_3;
}
#endif

#ifndef DEF_TIMEPARSER_InstrMap

type_cL vdm_TIMEPARSER_InstrMap(const TYPE_TIMEPARSER_Instruction &vdm_TIMEPARSER_i) {
  Sequence varRes_3;
  bool succ_4 = true;
  {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_AddEnv == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_7;
      for (int i_8 = 1; i_8 <= ((Record) vdm_TIMEPARSER_i).Length(); i_8++) 
        e_l_7.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_8));
      succ_4 = 0 == (Int) e_l_7.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"AddEnv");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Addset == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_9;
      for (int i_10 = 1; i_10 <= ((Record) vdm_TIMEPARSER_i).Length(); i_10++) 
        e_l_9.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_10));
      succ_4 = 0 == (Int) e_l_9.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Addset ");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_AllorExists == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_11;
      for (int i_12 = 1; i_12 <= ((Record) vdm_TIMEPARSER_i).Length(); i_12++) 
        e_l_11.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_12));
      succ_4 = 0 == (Int) e_l_11.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"AllorExists");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Always == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_13;
      for (int i_14 = 1; i_14 <= ((Record) vdm_TIMEPARSER_i).Length(); i_14++) 
        e_l_13.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_14));
      succ_4 = 0 == (Int) e_l_13.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Always");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Appendmap == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_15;
      for (int i_16 = 1; i_16 <= ((Record) vdm_TIMEPARSER_i).Length(); i_16++) 
        e_l_15.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_16));
      succ_4 = 0 == (Int) e_l_15.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Appendmap ");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Appendseq == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_17;
      for (int i_18 = 1; i_18 <= ((Record) vdm_TIMEPARSER_i).Length(); i_18++) 
        e_l_17.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_18));
      succ_4 = 0 == (Int) e_l_17.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Appendseq ");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Appendtup == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_19;
      for (int i_20 = 1; i_20 <= ((Record) vdm_TIMEPARSER_i).Length(); i_20++) 
        e_l_19.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_20));
      succ_4 = 0 == (Int) e_l_19.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Appendtup ");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Apply == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_21;
      for (int i_22 = 1; i_22 <= ((Record) vdm_TIMEPARSER_i).Length(); i_22++) 
        e_l_21.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_22));
      succ_4 = 0 == (Int) e_l_21.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Apply ");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_BindList == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_23;
      for (int i_24 = 1; i_24 <= ((Record) vdm_TIMEPARSER_i).Length(); i_24++) 
        e_l_23.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_24));
      succ_4 = 0 == (Int) e_l_23.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"BindList");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_BlockStmt == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_25;
      for (int i_26 = 1; i_26 <= ((Record) vdm_TIMEPARSER_i).Length(); i_26++) 
        e_l_25.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_26));
      succ_4 = 0 == (Int) e_l_25.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"BlockStmt");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Br == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_27;
      for (int i_28 = 1; i_28 <= ((Record) vdm_TIMEPARSER_i).Length(); i_28++) 
        e_l_27.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_28));
      succ_4 = 0 == (Int) e_l_27.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Br ");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Call == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_29;
      for (int i_30 = 1; i_30 <= ((Record) vdm_TIMEPARSER_i).Length(); i_30++) 
        e_l_29.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_30));
      succ_4 = 0 == (Int) e_l_29.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Call");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Cbr == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_31;
      for (int i_32 = 1; i_32 <= ((Record) vdm_TIMEPARSER_i).Length(); i_32++) 
        e_l_31.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_32));
      succ_4 = 0 == (Int) e_l_31.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Cbr ");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Exit == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_33;
      for (int i_34 = 1; i_34 <= ((Record) vdm_TIMEPARSER_i).Length(); i_34++) 
        e_l_33.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_34));
      succ_4 = 0 == (Int) e_l_33.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Exit");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Fieldsel == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_35;
      for (int i_36 = 1; i_36 <= ((Record) vdm_TIMEPARSER_i).Length(); i_36++) 
        e_l_35.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_36));
      succ_4 = 0 == (Int) e_l_35.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Fieldsel ");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Guard == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_37;
      for (int i_38 = 1; i_38 <= ((Record) vdm_TIMEPARSER_i).Length(); i_38++) 
        e_l_37.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_38));
      succ_4 = 0 == (Int) e_l_37.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Guard");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_History == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_39;
      for (int i_40 = 1; i_40 <= ((Record) vdm_TIMEPARSER_i).Length(); i_40++) 
        e_l_39.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_40));
      succ_4 = 0 == (Int) e_l_39.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"History ");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Iota == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_41;
      for (int i_42 = 1; i_42 <= ((Record) vdm_TIMEPARSER_i).Length(); i_42++) 
        e_l_41.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_42));
      succ_4 = 0 == (Int) e_l_41.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Iota");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Isexpr == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_43;
      for (int i_44 = 1; i_44 <= ((Record) vdm_TIMEPARSER_i).Length(); i_44++) 
        e_l_43.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_44));
      succ_4 = 0 == (Int) e_l_43.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Isexpr ");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Isofbaseclass == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_45;
      for (int i_46 = 1; i_46 <= ((Record) vdm_TIMEPARSER_i).Length(); i_46++) 
        e_l_45.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_46));
      succ_4 = 0 == (Int) e_l_45.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Isofbaseclass ");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Isofclass == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_47;
      for (int i_48 = 1; i_48 <= ((Record) vdm_TIMEPARSER_i).Length(); i_48++) 
        e_l_47.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_48));
      succ_4 = 0 == (Int) e_l_47.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Isofclass ");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_LambdaExpr == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_49;
      for (int i_50 = 1; i_50 <= ((Record) vdm_TIMEPARSER_i).Length(); i_50++) 
        e_l_49.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_50));
      succ_4 = 0 == (Int) e_l_49.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"LambdaExpr");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_LetBeST == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_51;
      for (int i_52 = 1; i_52 <= ((Record) vdm_TIMEPARSER_i).Length(); i_52++) 
        e_l_51.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_52));
      succ_4 = 0 == (Int) e_l_51.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"LetBeST");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Lookup == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_53;
      for (int i_54 = 1; i_54 <= ((Record) vdm_TIMEPARSER_i).Length(); i_54++) 
        e_l_53.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_54));
      succ_4 = 0 == (Int) e_l_53.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Lookup ");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Loop == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_55;
      for (int i_56 = 1; i_56 <= ((Record) vdm_TIMEPARSER_i).Length(); i_56++) 
        e_l_55.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_56));
      succ_4 = 0 == (Int) e_l_55.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Loop");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_MapInverse == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_57;
      for (int i_58 = 1; i_58 <= ((Record) vdm_TIMEPARSER_i).Length(); i_58++) 
        e_l_57.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_58));
      succ_4 = 0 == (Int) e_l_57.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"MapInverse");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_MatchPattern == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_59;
      for (int i_60 = 1; i_60 <= ((Record) vdm_TIMEPARSER_i).Length(); i_60++) 
        e_l_59.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_60));
      succ_4 = 0 == (Int) e_l_59.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"MatchPattern");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Newobj == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_61;
      for (int i_62 = 1; i_62 <= ((Record) vdm_TIMEPARSER_i).Length(); i_62++) 
        e_l_61.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_62));
      succ_4 = 0 == (Int) e_l_61.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Newobj ");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_NonDet == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_63;
      for (int i_64 = 1; i_64 <= ((Record) vdm_TIMEPARSER_i).Length(); i_64++) 
        e_l_63.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_64));
      succ_4 = 0 == (Int) e_l_63.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"NonDet");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Pattern == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_65;
      for (int i_66 = 1; i_66 <= ((Record) vdm_TIMEPARSER_i).Length(); i_66++) 
        e_l_65.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_66));
      succ_4 = 0 == (Int) e_l_65.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Pattern");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Polyinst == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_67;
      for (int i_68 = 1; i_68 <= ((Record) vdm_TIMEPARSER_i).Length(); i_68++) 
        e_l_67.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_68));
      succ_4 = 0 == (Int) e_l_67.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Polyinst ");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_RecTrap == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_69;
      for (int i_70 = 1; i_70 <= ((Record) vdm_TIMEPARSER_i).Length(); i_70++) 
        e_l_69.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_70));
      succ_4 = 0 == (Int) e_l_69.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"RecTrap");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Reccons == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_71;
      for (int i_72 = 1; i_72 <= ((Record) vdm_TIMEPARSER_i).Length(); i_72++) 
        e_l_71.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_72));
      succ_4 = 0 == (Int) e_l_71.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Reccons ");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Recmod == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_73;
      for (int i_74 = 1; i_74 <= ((Record) vdm_TIMEPARSER_i).Length(); i_74++) 
        e_l_73.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_74));
      succ_4 = 0 == (Int) e_l_73.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Recmod ");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Return == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_75;
      for (int i_76 = 1; i_76 <= ((Record) vdm_TIMEPARSER_i).Length(); i_76++) 
        e_l_75.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_76));
      succ_4 = 0 == (Int) e_l_75.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Return");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Samebaseclass == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_77;
      for (int i_78 = 1; i_78 <= ((Record) vdm_TIMEPARSER_i).Length(); i_78++) 
        e_l_77.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_78));
      succ_4 = 0 == (Int) e_l_77.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Samebaseclass ");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Sameclass == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_79;
      for (int i_80 = 1; i_80 <= ((Record) vdm_TIMEPARSER_i).Length(); i_80++) 
        e_l_79.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_80));
      succ_4 = 0 == (Int) e_l_79.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Sameclass ");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Selfexpr == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_81;
      for (int i_82 = 1; i_82 <= ((Record) vdm_TIMEPARSER_i).Length(); i_82++) 
        e_l_81.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_82));
      succ_4 = 0 == (Int) e_l_81.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Selfexpr ");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Seqlen == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_83;
      for (int i_84 = 1; i_84 <= ((Record) vdm_TIMEPARSER_i).Length(); i_84++) 
        e_l_83.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_84));
      succ_4 = 0 == (Int) e_l_83.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Seqlen ");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Seqmapover == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_85;
      for (int i_86 = 1; i_86 <= ((Record) vdm_TIMEPARSER_i).Length(); i_86++) 
        e_l_85.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_86));
      succ_4 = 0 == (Int) e_l_85.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Seqmapover ");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Setcard == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_87;
      for (int i_88 = 1; i_88 <= ((Record) vdm_TIMEPARSER_i).Length(); i_88++) 
        e_l_87.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_88));
      succ_4 = 0 == (Int) e_l_87.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Setcard ");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Setrng == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_89;
      for (int i_90 = 1; i_90 <= ((Record) vdm_TIMEPARSER_i).Length(); i_90++) 
        e_l_89.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_90));
      succ_4 = 0 == (Int) e_l_89.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Setrng ");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Start == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_91;
      for (int i_92 = 1; i_92 <= ((Record) vdm_TIMEPARSER_i).Length(); i_92++) 
        e_l_91.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_92));
      succ_4 = 0 == (Int) e_l_91.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Start");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Subseq == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_93;
      for (int i_94 = 1; i_94 <= ((Record) vdm_TIMEPARSER_i).Length(); i_94++) 
        e_l_93.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_94));
      succ_4 = 0 == (Int) e_l_93.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Subseq ");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Threadid == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_95;
      for (int i_96 = 1; i_96 <= ((Record) vdm_TIMEPARSER_i).Length(); i_96++) 
        e_l_95.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_96));
      succ_4 = 0 == (Int) e_l_95.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Threadid ");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Trap == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_97;
      for (int i_98 = 1; i_98 <= ((Record) vdm_TIMEPARSER_i).Length(); i_98++) 
        e_l_97.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_98));
      succ_4 = 0 == (Int) e_l_97.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Trap");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Tupsel == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_99;
      for (int i_100 = 1; i_100 <= ((Record) vdm_TIMEPARSER_i).Length(); i_100++) 
        e_l_99.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_100));
      succ_4 = 0 == (Int) e_l_99.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Tupsel ");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Update == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_101;
      for (int i_102 = 1; i_102 <= ((Record) vdm_TIMEPARSER_i).Length(); i_102++) 
        e_l_101.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_102));
      succ_4 = 0 == (Int) e_l_101.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Update");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Plus == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_103;
      for (int i_104 = 1; i_104 <= ((Record) vdm_TIMEPARSER_i).Length(); i_104++) 
        e_l_103.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_104));
      succ_4 = 0 == (Int) e_l_103.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Plus");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Minus == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_105;
      for (int i_106 = 1; i_106 <= ((Record) vdm_TIMEPARSER_i).Length(); i_106++) 
        e_l_105.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_106));
      succ_4 = 0 == (Int) e_l_105.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Minus");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Mult == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_107;
      for (int i_108 = 1; i_108 <= ((Record) vdm_TIMEPARSER_i).Length(); i_108++) 
        e_l_107.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_108));
      succ_4 = 0 == (Int) e_l_107.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Mult");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Div == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_109;
      for (int i_110 = 1; i_110 <= ((Record) vdm_TIMEPARSER_i).Length(); i_110++) 
        e_l_109.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_110));
      succ_4 = 0 == (Int) e_l_109.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Div");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Rem == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_111;
      for (int i_112 = 1; i_112 <= ((Record) vdm_TIMEPARSER_i).Length(); i_112++) 
        e_l_111.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_112));
      succ_4 = 0 == (Int) e_l_111.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Rem");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Mod == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_113;
      for (int i_114 = 1; i_114 <= ((Record) vdm_TIMEPARSER_i).Length(); i_114++) 
        e_l_113.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_114));
      succ_4 = 0 == (Int) e_l_113.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Mod");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Intdiv == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_115;
      for (int i_116 = 1; i_116 <= ((Record) vdm_TIMEPARSER_i).Length(); i_116++) 
        e_l_115.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_116));
      succ_4 = 0 == (Int) e_l_115.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Intdiv");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_And == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_117;
      for (int i_118 = 1; i_118 <= ((Record) vdm_TIMEPARSER_i).Length(); i_118++) 
        e_l_117.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_118));
      succ_4 = 0 == (Int) e_l_117.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"And");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Or == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_119;
      for (int i_120 = 1; i_120 <= ((Record) vdm_TIMEPARSER_i).Length(); i_120++) 
        e_l_119.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_120));
      succ_4 = 0 == (Int) e_l_119.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Or");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Equal == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_121;
      for (int i_122 = 1; i_122 <= ((Record) vdm_TIMEPARSER_i).Length(); i_122++) 
        e_l_121.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_122));
      succ_4 = 0 == (Int) e_l_121.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Equal");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_GreaterThan == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_123;
      for (int i_124 = 1; i_124 <= ((Record) vdm_TIMEPARSER_i).Length(); i_124++) 
        e_l_123.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_124));
      succ_4 = 0 == (Int) e_l_123.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"GreaterThan");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_GreaterThanOrEqual == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_125;
      for (int i_126 = 1; i_126 <= ((Record) vdm_TIMEPARSER_i).Length(); i_126++) 
        e_l_125.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_126));
      succ_4 = 0 == (Int) e_l_125.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"GreaterThanOrEqual");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Abs == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_127;
      for (int i_128 = 1; i_128 <= ((Record) vdm_TIMEPARSER_i).Length(); i_128++) 
        e_l_127.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_128));
      succ_4 = 0 == (Int) e_l_127.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Abs");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Floor == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_129;
      for (int i_130 = 1; i_130 <= ((Record) vdm_TIMEPARSER_i).Length(); i_130++) 
        e_l_129.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_130));
      succ_4 = 0 == (Int) e_l_129.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Floor");
  }
  if (!succ_4) {
    succ_4 = true;
    if (vdm_TIMEPARSER_i.IsRecord() && vdm_TIMEPARSER_Not == ((Record) vdm_TIMEPARSER_i).GetTag()) {
      Sequence e_l_131;
      for (int i_132 = 1; i_132 <= ((Record) vdm_TIMEPARSER_i).Length(); i_132++) 
        e_l_131.ImpAppend(((Record) vdm_TIMEPARSER_i).GetField(i_132));
      succ_4 = 0 == (Int) e_l_131.Length();
    }
    else 
      succ_4 = false;
    if (succ_4) 
      varRes_3 = Sequence(L"Not");
  }
  if (!succ_4) 
    varRes_3 = Sequence(L"Unknown");
  return (Generic) varRes_3;
}
#endif

