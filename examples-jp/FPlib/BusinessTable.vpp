\subsection{FBusinessTable}
ビジネス上の規則に使用される表に関わる関数を提供する。

\begin{vdm_al}
--"$Id"
class FBusinessTable
values
public MAXNUMBER = 2 ** 53 - 1;

types
\end{vdm_al}

Entryは、lower <= key <= upperであれば、dataが対応することを示す表の要素である。
表TableはEntryの列で表す。
\begin{vdm_al}
public Entry ::
	lower : rat
	upper : rat
	data : rat ;

functions
\end{vdm_al}

Findは、表tableを検索して、keyに対応するdataを返す。
対応する値がない場合はnilを返す。
\begin{vdm_al}
static public Find : seq of Entry * rat -> [rat]
Find(table, key) ==
	let	r = [table(i).data | i in set inds table & table(i).lower <= key and key <= table(i).upper]
	in
	if r = [] then
		nil
	else 
		r(1)
pre
	forall i, j in set inds table & 
		i < j => 
			table(i).lower <= table(i).upper and
			table(i).upper < table(j).lower and
			table(j).lower <= table(j).upper
post
	(exists1 i in set inds table & 
		table(i).lower <= key and key <= table(i).upper and RESULT = table(i).data)
	or
	RESULT = nil;
\end{vdm_al}

FindInRegularIntervalsTablesは、一定間隔(interval)のunitを持つ表tableを検索して、keyに対応するunit数を返す。
例えば、「売買代金1,000万円超の場合は、100万円まで毎に50円追加」という規則があった場合に、
売買代金key=11300000の追加料金計算をするには、
FindInRegularIntervalsTables(10000000, 50, 1000000, 11300000)とすれば100を返す。
key < base ならば、0を返す。
\begin{vdm_al}
static public FindInRegularIntervalsTables : int * int * int * rat -> rat
FindInRegularIntervalsTables(base, unit, interval, key) ==
	let	x = key - base,
		q = x div interval,
		m = 
			if (x mod interval) = 0 then
				0
			else
				1
	in
	if x < 0 then
		0
	else
		(q + m) * unit ;

end FBusinessTable
\end{vdm_al}


\begin{rtinfo}
[FBusinessTable]{vdm.tc}[FBusinessTable]
\end{rtinfo}