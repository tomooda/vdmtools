/*
$Id: testalarm.vpp,v 1.1 2006/01/04 06:44:17 vdmtools Exp $
テストグループ
	専門家呼出システムのテスト
作成者
	佐原伸
*/
class  専門家呼出システムT is subclass of TestDriver
functions
tests : () -> seq of TestCase
tests () == 
	[
	new  専門家呼出システムT01()
	];
end 専門家呼出システムT
-------------------------------------------------------------
/*
シナリオID
	専門家呼出システムのテスト。
内容
	専門家呼出システムのテスト。
*/
class 専門家呼出システムT01 is subclass of TestCase
types
期間型 = 工場クラス`期間型;
計画型 = 工場クラス`計画型
values
月曜昼 = mk_token("月曜昼");
月曜夜:期間型 = mk_token("月曜夜");
火曜昼:期間型 = mk_token("火曜昼");
火曜夜:期間型 = mk_token("火曜夜");
水曜昼:期間型 = mk_token("水曜昼");

佐原 = new 専門家クラス({<電気>});
酒匂:専門家クラス = new 専門家クラス({<機械>,<化学>});
西川:専門家クラス = new 専門家クラス({<生物>,<化学>,<電気>});
染谷:専門家クラス = new 専門家クラス({<生物>});
佐藤:専門家クラス = new 専門家クラス({<化学>,<生物>});
森:専門家クラス = new 専門家クラス({<電気>,<化学>,<生物>,<機械>});
谷津:専門家クラス = new 専門家クラス({<電気>,<機械>});
ラルセン:専門家クラス = new 専門家クラス({<機械>,<生物>});
ブッシュ:専門家クラス = new 専門家クラス({});

ある計画 : 計画型 =
	{月曜昼 |-> {谷津,染谷,佐原,酒匂},
	月曜夜 |-> {森},
	火曜昼 |-> {佐原,西川,ラルセン},
	火曜夜 |-> {森},
	水曜昼 |-> {西川,酒匂}};

電源停止:警報クラス = new 警報クラス("電源停止",<電気>);
タンク溢れ:警報クラス = new 警報クラス("タンク溢れ",<機械>);
CO2検出:警報クラス = new 警報クラス("CO2検出",<化学>);

テスト工場 : 工場クラス = new 工場クラス(ある計画,{電源停止,タンク溢れ,CO2検出})
  
operations 
protected test: () ==> bool
test() == 
	(
	return 
		テスト工場.専門家の数(月曜昼) = 4 and
		テスト工場.専門家が働く期間(佐原) = {月曜昼, 火曜昼} and
		(テスト工場.専門家を捜す(電源停止,火曜昼) = 佐原 or
		テスト工場.専門家を捜す(電源停止,火曜昼) = ラルセン or 
		テスト工場.専門家を捜す(電源停止,火曜昼) = 西川) and
		テスト工場.計画(月曜昼) = {谷津,染谷,佐原,酒匂} and
		(let ある期間 in set dom ある計画 be st
			forall 他の期間 in set dom ある計画 &
				他の期間 <> ある期間 =>
					card ある計画(ある期間) >= card ある計画(他の期間) 
		in
		ある期間 = 月曜昼
		) and
		月曜夜 in set テスト工場.専門家が働く期間(森) and
		(<電気> in set ラルセン.資格集合) = false and
		(forall 警報 in set テスト工場.警報集合 &
			forall 期間 in set dom テスト工場.計画 &
				テスト工場.資格OK？(テスト工場.計画(期間),警報.資格を求める()))
	)
;
protected 準備する: () ==> ()
準備する() == テスト名 := "専門家呼出システムT01:\t専門家の数。";
protected 後始末する: () ==> ()
後始末する() == return;
end 専門家呼出システムT01