--$Header: /home/vdmtools/cvsroot/toolbox/examples-jp/pp/ModelingSystemByJapanese/examples/traffic2.vpp,v 1.1 2006/01/04 06:44:17 vdmtools Exp $
-- 第５章（基本要素）の交通信号機核
-- タイミングの制約を考慮した第２版
class 交通信号機核

values

-- 以下の値定義は図5.2の交差点の表現を構築するのに使用される

  A1北 : 方向型 = mk_token("A1北");

  A1南 : 方向型 = mk_token("A1南");

  A66東 : 方向型 = mk_token("A66東");

  A66西 : 方向型 = mk_token("A66西");

  信号写像 : map 方向型 to 信号型
         = {A1北 |-> <赤>,
            A1南 |-> <赤>,
            A66東 |-> <青>,
            A66西 |-> <青>};

  交差点 : set of 交差型
            = {mk_交差型(A1北,A66東),
               mk_交差型(A1北,A66西),
               mk_交差型(A1南,A66東),
               mk_交差型(A1南,A66西),
               mk_交差型(A66東,A1北),
               mk_交差型(A66西,A1北),
               mk_交差型(A66東,A1南),
               mk_交差型(A66西,A1南)};

  最後に変更 : map 方向型 to 時間型
              = {A1北 |-> 0,A1南 |-> 0,A66東 |-> 0,A66西 |-> 0};

 核 : 核型 
         = mk_核型(信号写像,交差点,最後に変更)

types

  信号型 = <赤> | <黄> | <青>;

  時間型 = real
  inv 時間 == 時間 >= 0;

  方向型 = token;
  
  交差型 :: 方向1: 方向型
              方向2: 方向型
  inv mk_交差型(A1北,A1南) == A1北 <> A1南;

-- 核データ構造は３つの構成要素を持つ。
-- 1) 各方向の信号の現在状態を持つ写像
-- 2) 交差点の集合
-- 3) 各方向の信号が最後に変更された時間の情報を持つ写像
 
核型 ::
	信号写像	: map 方向型 to 信号型
	交差点集合	: set of 交差型
	最後の変更	: map 方向型 to 時間型
inv mk_核型(ある信号写像,ある交差点集合,ある最後の変更) ==
        dom ある信号写像 = dom ある最後の変更 and
        forall 交差点 in set ある交差点集合 &  
              mk_交差型(交差点.方向2,交差点.方向1) in set ある交差点集合 and
              交差点.方向1 in set dom ある信号写像 and 
	      交差点.方向2 in set dom ある信号写像 and 
              (ある信号写像(交差点.方向1) = <赤> or ある信号写像(交差点.方向2) = <赤>)

values

  赤の整理 : 時間型 = 2.6;

  青の最小 : 時間型 = 1;
  
  黄から変更  : 時間型 = 2.6

functions

-- 与えられた方向の信号を青にする

  青にする: 方向型 * 核型 * 時間型 -> 核型
  青にする(ある方向,mk_核型(信号写像,交差点集合,最後の変更),ある時間) ==
    mk_核型(信号を変える(信号写像,ある方向,<青>),交差点集合,
              時間を変える(最後の変更,ある方向,ある時間))
  pre ある方向 in set dom 信号写像 and
      信号写像(ある方向) = <赤> and
      forall mk_交差型(ある方向1, ある方向2) in set 交差点集合 &
             (ある方向 = ある方向1 => (信号写像(ある方向2) = <赤> and
                         赤の整理 < ある時間 - 最後の変更(ある方向2))) and
             (ある方向 = ある方向2 => (信号写像(ある方向1) = <赤> and
                         赤の整理 < ある時間 - 最後の変更(ある方向1)));

-- 与えられた方向の信号を赤にする

  赤にする: 方向型 * 核型 * 時間型 -> 核型
  赤にする(ある方向,mk_核型(信号写像,交差点集合,最後の変更),ある時間) ==
    mk_核型(信号を変える(信号写像,ある方向,<赤>),交差点集合,
              時間を変える(最後の変更,ある方向,ある時間))
  pre ある方向 in set dom 信号写像 and 信号写像(ある方向) = <黄> and
      黄から変更 < ある時間 - 最後の変更(ある方向);

-- 与えられた方向の信号を黄にする

  黄にする: 方向型 * 核型 * 時間型 -> 核型
  黄にする(ある方向,mk_核型(信号写像,交差点集合,最後の変更),ある時間) ==
    mk_核型(信号を変える(信号写像,ある方向,<黄>),交差点集合,
              時間を変える(最後の変更,ある方向,ある時間))
  pre ある方向 in set dom 信号写像 and 信号写像(ある方向) = <青> and
      青の最小 < ある時間 - 最後の変更(ある方向);

-- 与えられた方向の信号を変更する汎用の関数

  色にする: 方向型 * 核型 * 時間型 * 信号型 -> 核型
  色にする(ある方向,ある核,ある時間,ある信号) ==
    cases ある信号:
      <赤> -> 赤にする(ある方向,ある核,ある時間), 
      <黄> -> 黄にする(ある方向,ある核,ある時間),
      <青> -> 青にする(ある方向,ある核,ある時間)
    end
  pre ((ある信号 = <赤>)   => pre_赤にする(ある方向,ある核,ある時間)) and
      ((ある信号 = <黄>) => pre_黄にする(ある方向,ある核,ある時間)) and
      ((ある信号 = <青>) => pre_青にする(ある方向,ある核,ある時間));

  信号を変える: (map 方向型 to 信号型) * 方向型 * 信号型 -> (map 方向型 to 信号型)
  信号を変える(信号写像,ある方向,ある信号) ==
    信号写像 ++ {ある方向 |-> ある信号}; 

  時間を変える: (map 方向型 to 時間型) * 方向型 * 時間型 -> (map 方向型 to 時間型)
  時間を変える(ある最後の変更,ある方向,ある時間) ==
    ある最後の変更 ++ {ある方向 |-> ある時間} 

end 交通信号機核
