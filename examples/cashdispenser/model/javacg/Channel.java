//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Fri 27-May-2005 by the VDM++ JAVA Code Generator
// (v6.8.5 - Wed 25-May-2005 13:41:53)
//
// Supported compilers:
// jdk1.3
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO

// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
// ***** VDMTOOLS END Name=package


// ***** VDMTOOLS START Name=imports KEEP=NO

import jp.vdmtools.VDM.*;
import java.util.*;
import jp.vdmtools.VDM.jdk.*;
// ***** VDMTOOLS END Name=imports



public class Channel implements EvaluatePP {


// ***** VDMTOOLS START Name=Request KEEP=NO
  public static class Request implements Record {

    public Object command;

    public HashSet data;


    public Request () {}


    public Request (Object p1, HashSet p2) {
      command = p1;
      data = p2;
    }


    public Object clone () {
      return new Request((Object) UTIL.clone(command),(HashSet) UTIL.clone(data));
    }


    public String toString () {
      return "mk_Channel`Request(" + UTIL.toString(command) + "," + UTIL.toString(data) + ")";
    }


    public boolean equals (Object obj) {
      if (!(obj instanceof Request)) 
        return false;
      else {        
        Request temp = (Request) obj;
        return UTIL.equals(command, temp.command) && UTIL.equals(data, temp.data);
      }
    }


    public int hashCode () {
      return (command == null ? 0 : command.hashCode()) + (data == null ? 0 : data.hashCode());
    }

  }
// ***** VDMTOOLS END Name=Request
 ;
// ***** VDMTOOLS START Name=ReqData KEEP=NO
  public static interface ReqData {
  }
// ***** VDMTOOLS END Name=ReqData
;


// ***** VDMTOOLS START Name=CardId KEEP=NO
  public static class CardId implements ReqData , Record {

    public Integer val;


    public CardId () {}


    public CardId (Integer p1) {
      val = p1;
    }


    public Object clone () {
      return new CardId(val);
    }


    public String toString () {
      return "mk_Channel`CardId(" + UTIL.toString(val) + ")";
    }


    public boolean equals (Object obj) {
      if (!(obj instanceof CardId)) 
        return false;
      else {        
        CardId temp = (CardId) obj;
        return UTIL.equals(val, temp.val);
      }
    }


    public int hashCode () {
      return val == null ? 0 : val.hashCode();
    }

  }
// ***** VDMTOOLS END Name=CardId
 ;


// ***** VDMTOOLS START Name=AccountId KEEP=NO
  public static class AccountId implements ReqData , Record {

    public Integer val;


    public AccountId () {}


    public AccountId (Integer p1) {
      val = p1;
    }


    public Object clone () {
      return new AccountId(val);
    }


    public String toString () {
      return "mk_Channel`AccountId(" + UTIL.toString(val) + ")";
    }


    public boolean equals (Object obj) {
      if (!(obj instanceof AccountId)) 
        return false;
      else {        
        AccountId temp = (AccountId) obj;
        return UTIL.equals(val, temp.val);
      }
    }


    public int hashCode () {
      return val == null ? 0 : val.hashCode();
    }

  }
// ***** VDMTOOLS END Name=AccountId
 ;


// ***** VDMTOOLS START Name=Amount KEEP=NO
  public static class Amount implements ReqData , Record {

    public Integer val;


    public Amount () {}


    public Amount (Integer p1) {
      val = p1;
    }


    public Object clone () {
      return new Amount(val);
    }


    public String toString () {
      return "mk_Channel`Amount(" + UTIL.toString(val) + ")";
    }


    public boolean equals (Object obj) {
      if (!(obj instanceof Amount)) 
        return false;
      else {        
        Amount temp = (Amount) obj;
        return UTIL.equals(val, temp.val);
      }
    }


    public int hashCode () {
      return val == null ? 0 : val.hashCode();
    }

  }
// ***** VDMTOOLS END Name=Amount
 ;


// ***** VDMTOOLS START Name=Response KEEP=NO
  public static class Response implements Record {

    public Object command;

    public Object data;


    public Response () {}


    public Response (Object p1, Object p2) {
      command = p1;
      data = p2;
    }


    public Object clone () {
      return new Response((Object) UTIL.clone(command),(Object) UTIL.clone(data));
    }


    public String toString () {
      return "mk_Channel`Response(" + UTIL.toString(command) + "," + UTIL.toString(data) + ")";
    }


    public boolean equals (Object obj) {
      if (!(obj instanceof Response)) 
        return false;
      else {        
        Response temp = (Response) obj;
        return UTIL.equals(command, temp.command) && UTIL.equals(data, temp.data);
      }
    }


    public int hashCode () {
      return (command == null ? 0 : command.hashCode()) + (data == null ? 0 : data.hashCode());
    }

  }
// ***** VDMTOOLS END Name=Response
 ;

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=req KEEP=NO
  private volatile Request req = null;
// ***** VDMTOOLS END Name=req

// ***** VDMTOOLS START Name=resp KEEP=NO
  private volatile Response resp = null;
// ***** VDMTOOLS END Name=resp

// ***** VDMTOOLS START Name=timer KEEP=NO
  private volatile Timer timer = null;
// ***** VDMTOOLS END Name=timer

// ***** VDMTOOLS START Name=curTime KEEP=NO
  private volatile Integer curTime = null;
// ***** VDMTOOLS END Name=curTime

// ***** VDMTOOLS START Name=sentinel KEEP=NO
  volatile Sentinel sentinel;
// ***** VDMTOOLS END Name=sentinel

// ***** VDMTOOLS START Name=perThread KEEP=NO
  PeriodicThread perThread;
// ***** VDMTOOLS END Name=perThread


// ***** VDMTOOLS START Name=ChannelSentinel KEEP=NO
  class ChannelSentinel extends Sentinel {

    public final int Wait = 0;

    public final int CheckTime = 1;

    public final int SendRequest = 2;

    public final int SendResponse = 3;

    public final int ReceiveRequest = 4;

    public final int ReceiveResponse = 5;

    public final int nr_functions = 6;


    public ChannelSentinel () throws CGException {}


    public ChannelSentinel (EvaluatePP instance) throws CGException {
      init(nr_functions, instance);
    }

  }
// ***** VDMTOOLS END Name=ChannelSentinel
;

// ***** VDMTOOLS START Name=evaluatePP KEEP=NO
  public Boolean evaluatePP (int fnr) throws CGException {    
    Boolean temp;    switch(fnr) {
    case 0: {
      {
        if (!(temp = new Boolean((curTime.intValue()) > (timeout.intValue()))).booleanValue()) 
          temp = new Boolean(!UTIL.equals(resp, null));
      }
      return temp;
    }    case 2: {      
      Boolean var1_7 = null;
      {
        if ((var1_7 = AllReceived(UTIL.NumberToInt(new Integer(sentinel.act[((ChannelSentinel) sentinel).SendRequest])), UTIL.NumberToInt(new Integer(sentinel.fin[((ChannelSentinel) sentinel).SendRequest])), UTIL.NumberToInt(new Integer(sentinel.act[((ChannelSentinel) sentinel).ReceiveRequest])), UTIL.NumberToInt(new Integer(sentinel.fin[((ChannelSentinel) sentinel).ReceiveRequest])))).booleanValue()) 
          var1_7 = AllReceived(UTIL.NumberToInt(new Integer(sentinel.act[((ChannelSentinel) sentinel).SendResponse])), UTIL.NumberToInt(new Integer(sentinel.fin[((ChannelSentinel) sentinel).SendResponse])), UTIL.NumberToInt(new Integer(sentinel.act[((ChannelSentinel) sentinel).ReceiveResponse])), UTIL.NumberToInt(new Integer(sentinel.fin[((ChannelSentinel) sentinel).ReceiveResponse])));
      }
      {
        if ((temp = var1_7).booleanValue()) 
          temp = new Boolean(UTIL.equals(new Integer(sentinel.act[((ChannelSentinel) sentinel).SendRequest]), new Integer(sentinel.fin[((ChannelSentinel) sentinel).ReceiveResponse])));
      }
      return temp;
    }    case 3: {      
      Boolean var1_21 = null;
      {
        if ((var1_21 = AllReceived(UTIL.NumberToInt(new Integer(sentinel.act[((ChannelSentinel) sentinel).SendRequest])), UTIL.NumberToInt(new Integer(sentinel.fin[((ChannelSentinel) sentinel).SendRequest])), UTIL.NumberToInt(new Integer(sentinel.act[((ChannelSentinel) sentinel).ReceiveRequest])), UTIL.NumberToInt(new Integer(sentinel.fin[((ChannelSentinel) sentinel).ReceiveRequest])))).booleanValue()) 
          var1_21 = AllReceived(UTIL.NumberToInt(new Integer(sentinel.act[((ChannelSentinel) sentinel).SendResponse])), UTIL.NumberToInt(new Integer(sentinel.fin[((ChannelSentinel) sentinel).SendResponse])), UTIL.NumberToInt(new Integer(sentinel.act[((ChannelSentinel) sentinel).ReceiveResponse])), UTIL.NumberToInt(new Integer(sentinel.fin[((ChannelSentinel) sentinel).ReceiveResponse])));
      }
      {
        if ((temp = var1_21).booleanValue()) 
          temp = new Boolean(new Integer(((Number) new Integer(sentinel.act[((ChannelSentinel) sentinel).SendRequest])).intValue() - ((Number) new Integer(sentinel.fin[((ChannelSentinel) sentinel).SendResponse])).intValue()).intValue() == new Integer(1).intValue());
      }
      return temp;
    }    case 4: {
      temp = (Boolean) new Boolean(!UTIL.equals(req, null));
      return temp;
    }}

    return new Boolean(true);
  }
// ***** VDMTOOLS END Name=evaluatePP


// ***** VDMTOOLS START Name=setSentinel KEEP=NO
  public void setSentinel () {
    try {
      sentinel = new ChannelSentinel(this);
    }
    catch (CGException e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=setSentinel


// ***** VDMTOOLS START Name=start KEEP=NO
  public void start () throws CGException {
    perThread.invoke();
  }
// ***** VDMTOOLS END Name=start

// ***** VDMTOOLS START Name=timeout KEEP=NO
  private static final Integer timeout = new Integer(1500);
// ***** VDMTOOLS END Name=timeout


// ***** VDMTOOLS START Name=Channel KEEP=NO
  public Channel () throws CGException {
    try {
      perThread = new PeriodicThread(new Integer(1000),perThread){

      public void threadDef () throws CGException {
        CheckTime();
      }

};
      setSentinel();
      req = null;
      resp = null;
      timer = (Timer) new Timer();
    }
    catch (Exception e){
      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=Channel


// ***** VDMTOOLS START Name=SendRequest KEEP=NO
  public void SendRequest (final Request r) throws CGException {
    sentinel.entering(((ChannelSentinel) sentinel).SendRequest);
    try {
      req = (Request) UTIL.clone(r);
      timer.Start();
    }
    finally {
      sentinel.leaving(((ChannelSentinel) sentinel).SendRequest);
    }
  }
// ***** VDMTOOLS END Name=SendRequest


// ***** VDMTOOLS START Name=pre_SendRequest KEEP=NO
  public Boolean pre_SendRequest (final Request r) throws CGException {
    return new Boolean(UTIL.equals(req, null));
  }
// ***** VDMTOOLS END Name=pre_SendRequest


// ***** VDMTOOLS START Name=ReceiveRequest KEEP=NO
  public Request ReceiveRequest () throws CGException {
    sentinel.entering(((ChannelSentinel) sentinel).ReceiveRequest);
    try {      
      Request r = req;
      {
        req = null;
        return r;
      }
    }
    finally {
      sentinel.leaving(((ChannelSentinel) sentinel).ReceiveRequest);
    }
  }
// ***** VDMTOOLS END Name=ReceiveRequest


// ***** VDMTOOLS START Name=SendResponse KEEP=NO
  public void SendResponse (final Response r) throws CGException {
    sentinel.entering(((ChannelSentinel) sentinel).SendResponse);
    try {
      resp = (Response) UTIL.clone(r);
      timer.Stop();
    }
    finally {
      sentinel.leaving(((ChannelSentinel) sentinel).SendResponse);
    }
  }
// ***** VDMTOOLS END Name=SendResponse


// ***** VDMTOOLS START Name=pre_SendResponse KEEP=NO
  public Boolean pre_SendResponse (final Response r) throws CGException {
    return new Boolean(UTIL.equals(resp, null));
  }
// ***** VDMTOOLS END Name=pre_SendResponse


// ***** VDMTOOLS START Name=ReceiveResponse KEEP=NO
  public Response ReceiveResponse () throws CGException {
    sentinel.entering(((ChannelSentinel) sentinel).ReceiveResponse);
    try {      
      Response r = resp;
      {
        resp = null;
        return r;
      }
    }
    finally {
      sentinel.leaving(((ChannelSentinel) sentinel).ReceiveResponse);
    }
  }
// ***** VDMTOOLS END Name=ReceiveResponse


// ***** VDMTOOLS START Name=Wait KEEP=NO
  public void Wait () throws CGException {
    sentinel.entering(((ChannelSentinel) sentinel).Wait);
    try {
      ;
    }
    finally {
      sentinel.leaving(((ChannelSentinel) sentinel).Wait);
    }
  }
// ***** VDMTOOLS END Name=Wait


// ***** VDMTOOLS START Name=CheckTime KEEP=NO
  private void CheckTime () throws CGException {
    sentinel.entering(((ChannelSentinel) sentinel).CheckTime);
    try {      
      Integer rhs_1 = null;
      rhs_1 = timer.GetTime();
      curTime = UTIL.NumberToInt(UTIL.clone(rhs_1));
    }
    finally {
      sentinel.leaving(((ChannelSentinel) sentinel).CheckTime);
    }
  }
// ***** VDMTOOLS END Name=CheckTime


// ***** VDMTOOLS START Name=AllReceived KEEP=NO
  private Boolean AllReceived (final Integer act_usend, final Integer fin_usend, final Integer act_urec, final Integer fin_urec) throws CGException {    
    Boolean varRes_5 = null;    
    Boolean var1_6 = null;
    {
      if ((var1_6 = new Boolean(act_usend.intValue() == fin_usend.intValue())).booleanValue()) 
        var1_6 = new Boolean(act_urec.intValue() == fin_urec.intValue());
    }
    {
      if ((varRes_5 = var1_6).booleanValue()) 
        varRes_5 = new Boolean(new Integer(act_usend.intValue() + fin_usend.intValue()).intValue() == new Integer(act_usend.intValue() + fin_usend.intValue()).intValue());
    }
    return varRes_5;
  }
// ***** VDMTOOLS END Name=AllReceived

}
;
