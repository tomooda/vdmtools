//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Fri 27-May-2005 by the VDM++ JAVA Code Generator
// (v6.8.5 - Wed 25-May-2005 13:41:53)
//
// Supported compilers:
// jdk1.3
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO

// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
// ***** VDMTOOLS END Name=package


// ***** VDMTOOLS START Name=imports KEEP=NO

import jp.vdmtools.VDM.*;
import java.util.*;
import jp.vdmtools.VDM.jdk.*;
// ***** VDMTOOLS END Name=imports



public class LocalResource implements EvaluatePP {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=c KEEP=NO
  private volatile Channel c = null;
// ***** VDMTOOLS END Name=c

// ***** VDMTOOLS START Name=sentinel KEEP=NO
  volatile Sentinel sentinel;
// ***** VDMTOOLS END Name=sentinel


// ***** VDMTOOLS START Name=LocalResourceSentinel KEEP=NO
  class LocalResourceSentinel extends Sentinel {

    public final int Wait = 0;

    public final int Create = 1;

    public final int GetBalance = 2;

    public final int Withdrawal = 3;

    public final int IsLegalCard = 4;

    public final int PostStatement = 5;

    public final int IncrNumberOfTries = 6;

    public final int ResetNumberOfTries = 7;

    public final int NumberOfTriesExceeded = 8;

    public final int nr_functions = 9;


    public LocalResourceSentinel () throws CGException {}


    public LocalResourceSentinel (EvaluatePP instance) throws CGException {
      init(nr_functions, instance);
    }

  }
// ***** VDMTOOLS END Name=LocalResourceSentinel
;

// ***** VDMTOOLS START Name=evaluatePP KEEP=NO
  public Boolean evaluatePP (int fnr) throws CGException {
    return new Boolean(true);
  }
// ***** VDMTOOLS END Name=evaluatePP


// ***** VDMTOOLS START Name=setSentinel KEEP=NO
  public void setSentinel () {
    try {
      sentinel = new LocalResourceSentinel(this);
    }
    catch (CGException e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=setSentinel


// ***** VDMTOOLS START Name=LocalResource KEEP=NO
  public LocalResource () throws CGException {
    try {
      setSentinel();
    }
    catch (Exception e){
      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=LocalResource


// ***** VDMTOOLS START Name=Create KEEP=NO
  public void Create (final Channel nc) throws CGException {
    sentinel.entering(((LocalResourceSentinel) sentinel).Create);
    try {
      c = (Channel) UTIL.clone(nc);
    }
    finally {
      sentinel.leaving(((LocalResourceSentinel) sentinel).Create);
    }
  }
// ***** VDMTOOLS END Name=Create


// ***** VDMTOOLS START Name=GetBalance KEEP=NO
  public Object GetBalance (final Integer accountId) throws CGException {
    sentinel.entering(((LocalResourceSentinel) sentinel).GetBalance);
    try {      
      Channel.Request tmpVal_3 = null;      
      HashSet tmpVar_5 = new HashSet();      
      Channel.AccountId enum_set_6 = null;
      enum_set_6 = new Channel.AccountId(accountId);
      tmpVar_5 = new HashSet();
      tmpVar_5.add(enum_set_6);
      tmpVal_3 = new Channel.Request(new quotes.GetBalance(),tmpVar_5);      
      Channel.Request req = null;
      req = tmpVal_3;
      {
        c.SendRequest(req);
        return Wait(new quotes.GetBalance());
      }
    }
    finally {
      sentinel.leaving(((LocalResourceSentinel) sentinel).GetBalance);
    }
  }
// ***** VDMTOOLS END Name=GetBalance


// ***** VDMTOOLS START Name=Wait KEEP=NO
  private Object Wait (final Object comm) throws CGException {
    sentinel.entering(((LocalResourceSentinel) sentinel).Wait);
    try {
      c.Wait();
      {        
        Channel.Response resp = null;
        resp = c.ReceiveResponse();
        if (new Boolean(UTIL.equals(resp, null)).booleanValue()) 
          return new quotes.Fail();
        else {          
          Boolean cond_10 = null;          
          Object var1_11 = null;
          var1_11 = (resp).command;
          cond_10 = new Boolean(!UTIL.equals(var1_11, comm));
          if (cond_10.booleanValue()) 
            return new quotes.Fail();
          else {            
            Object rexpr_8 = null;
            rexpr_8 = (resp).data;
            return rexpr_8;
          }
        }
      }
    }
    finally {
      sentinel.leaving(((LocalResourceSentinel) sentinel).Wait);
    }
  }
// ***** VDMTOOLS END Name=Wait


// ***** VDMTOOLS START Name=Withdrawal KEEP=NO
  public Object Withdrawal (final Integer accountId, final Integer cardId, final Integer amount) throws CGException {
    sentinel.entering(((LocalResourceSentinel) sentinel).Withdrawal);
    try {      
      Channel.Request tmpVal_5 = null;      
      HashSet tmpVar_7 = new HashSet();      
      Channel.AccountId enum_set_8 = null;
      enum_set_8 = new Channel.AccountId(accountId);
      tmpVar_7 = new HashSet();
      tmpVar_7.add(enum_set_8);      
      Channel.CardId enum_set_10 = null;
      enum_set_10 = new Channel.CardId(cardId);
      tmpVar_7.add(enum_set_10);      
      Channel.Amount enum_set_12 = null;
      enum_set_12 = new Channel.Amount(amount);
      tmpVar_7.add(enum_set_12);
      tmpVal_5 = new Channel.Request(new quotes.Withdrawal(),tmpVar_7);      
      Channel.Request req = null;
      req = tmpVal_5;
      {
        c.SendRequest(req);
        return Wait(new quotes.Withdrawal());
      }
    }
    finally {
      sentinel.leaving(((LocalResourceSentinel) sentinel).Withdrawal);
    }
  }
// ***** VDMTOOLS END Name=Withdrawal


// ***** VDMTOOLS START Name=PostStatement KEEP=NO
  public Object PostStatement (final Integer accountId, final Integer cardId) throws CGException {
    sentinel.entering(((LocalResourceSentinel) sentinel).PostStatement);
    try {      
      Channel.Request tmpVal_4 = null;      
      HashSet tmpVar_6 = new HashSet();      
      Channel.AccountId enum_set_7 = null;
      enum_set_7 = new Channel.AccountId(accountId);
      tmpVar_6 = new HashSet();
      tmpVar_6.add(enum_set_7);      
      Channel.CardId enum_set_9 = null;
      enum_set_9 = new Channel.CardId(cardId);
      tmpVar_6.add(enum_set_9);
      tmpVal_4 = new Channel.Request(new quotes.PostStmt(),tmpVar_6);      
      Channel.Request req = null;
      req = tmpVal_4;
      {
        c.SendRequest(req);
        return Wait(new quotes.PostStmt());
      }
    }
    finally {
      sentinel.leaving(((LocalResourceSentinel) sentinel).PostStatement);
    }
  }
// ***** VDMTOOLS END Name=PostStatement


// ***** VDMTOOLS START Name=IsLegalCard KEEP=NO
  public Object IsLegalCard (final Integer accountId, final Integer cardId) throws CGException {
    sentinel.entering(((LocalResourceSentinel) sentinel).IsLegalCard);
    try {      
      Channel.Request tmpVal_4 = null;      
      HashSet tmpVar_6 = new HashSet();      
      Channel.AccountId enum_set_7 = null;
      enum_set_7 = new Channel.AccountId(accountId);
      tmpVar_6 = new HashSet();
      tmpVar_6.add(enum_set_7);      
      Channel.CardId enum_set_9 = null;
      enum_set_9 = new Channel.CardId(cardId);
      tmpVar_6.add(enum_set_9);
      tmpVal_4 = new Channel.Request(new quotes.IsLegalCard(),tmpVar_6);      
      Channel.Request req = null;
      req = tmpVal_4;
      {
        c.SendRequest(req);
        return Wait(new quotes.IsLegalCard());
      }
    }
    finally {
      sentinel.leaving(((LocalResourceSentinel) sentinel).IsLegalCard);
    }
  }
// ***** VDMTOOLS END Name=IsLegalCard


// ***** VDMTOOLS START Name=NumberOfTriesExceeded KEEP=NO
  public Object NumberOfTriesExceeded (final Integer cardId) throws CGException {
    sentinel.entering(((LocalResourceSentinel) sentinel).NumberOfTriesExceeded);
    try {      
      Channel.Request tmpVal_3 = null;      
      HashSet tmpVar_5 = new HashSet();      
      Channel.CardId enum_set_6 = null;
      enum_set_6 = new Channel.CardId(cardId);
      tmpVar_5 = new HashSet();
      tmpVar_5.add(enum_set_6);
      tmpVal_3 = new Channel.Request(new quotes.TriesExceeded(),tmpVar_5);      
      Channel.Request req = null;
      req = tmpVal_3;
      {
        c.SendRequest(req);
        return Wait(new quotes.TriesExceeded());
      }
    }
    finally {
      sentinel.leaving(((LocalResourceSentinel) sentinel).NumberOfTriesExceeded);
    }
  }
// ***** VDMTOOLS END Name=NumberOfTriesExceeded


// ***** VDMTOOLS START Name=ResetNumberOfTries KEEP=NO
  public quotes.Fail ResetNumberOfTries (final Integer cardId) throws CGException {
    sentinel.entering(((LocalResourceSentinel) sentinel).ResetNumberOfTries);
    try {      
      Channel.Request tmpVal_3 = null;      
      HashSet tmpVar_5 = new HashSet();      
      Channel.CardId enum_set_6 = null;
      enum_set_6 = new Channel.CardId(cardId);
      tmpVar_5 = new HashSet();
      tmpVar_5.add(enum_set_6);
      tmpVal_3 = new Channel.Request(new quotes.ResetTries(),tmpVar_5);      
      Channel.Request req = null;
      req = tmpVal_3;
      {
        c.SendRequest(req);
        return (quotes.Fail) Wait(new quotes.ResetTries());
      }
    }
    finally {
      sentinel.leaving(((LocalResourceSentinel) sentinel).ResetNumberOfTries);
    }
  }
// ***** VDMTOOLS END Name=ResetNumberOfTries


// ***** VDMTOOLS START Name=IncrNumberOfTries KEEP=NO
  public quotes.Fail IncrNumberOfTries (final Integer cardId) throws CGException {
    sentinel.entering(((LocalResourceSentinel) sentinel).IncrNumberOfTries);
    try {      
      Channel.Request tmpVal_3 = null;      
      HashSet tmpVar_5 = new HashSet();      
      Channel.CardId enum_set_6 = null;
      enum_set_6 = new Channel.CardId(cardId);
      tmpVar_5 = new HashSet();
      tmpVar_5.add(enum_set_6);
      tmpVal_3 = new Channel.Request(new quotes.IncTries(),tmpVar_5);      
      Channel.Request req = null;
      req = tmpVal_3;
      {
        c.SendRequest(req);
        return (quotes.Fail) Wait(new quotes.IncTries());
      }
    }
    finally {
      sentinel.leaving(((LocalResourceSentinel) sentinel).IncrNumberOfTries);
    }
  }
// ***** VDMTOOLS END Name=IncrNumberOfTries

}
;
