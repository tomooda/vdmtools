//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Fri 27-May-2005 by the VDM++ JAVA Code Generator
// (v6.8.5 - Wed 25-May-2005 13:41:53)
//
// Supported compilers:
// jdk1.3
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO

// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
// ***** VDMTOOLS END Name=package


// ***** VDMTOOLS START Name=imports KEEP=NO

import jp.vdmtools.VDM.*;
import java.util.*;
import jp.vdmtools.VDM.jdk.*;
// ***** VDMTOOLS END Name=imports



public class Timer implements EvaluatePP {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=curTime KEEP=NO
  private volatile Integer curTime = null;
// ***** VDMTOOLS END Name=curTime

// ***** VDMTOOLS START Name=active KEEP=NO
  private volatile Boolean active = null;
// ***** VDMTOOLS END Name=active

// ***** VDMTOOLS START Name=sentinel KEEP=NO
  volatile Sentinel sentinel;
// ***** VDMTOOLS END Name=sentinel

// ***** VDMTOOLS START Name=perThread KEEP=NO
  PeriodicThread perThread;
// ***** VDMTOOLS END Name=perThread


// ***** VDMTOOLS START Name=TimerSentinel KEEP=NO
  class TimerSentinel extends Sentinel {

    public final int Stop = 0;

    public final int Start = 1;

    public final int GetTime = 2;

    public final int IncTime = 3;

    public final int nr_functions = 4;


    public TimerSentinel () throws CGException {}


    public TimerSentinel (EvaluatePP instance) throws CGException {
      init(nr_functions, instance);
    }

  }
// ***** VDMTOOLS END Name=TimerSentinel
;

// ***** VDMTOOLS START Name=evaluatePP KEEP=NO
  public Boolean evaluatePP (int fnr) throws CGException {
    return new Boolean(true);
  }
// ***** VDMTOOLS END Name=evaluatePP


// ***** VDMTOOLS START Name=setSentinel KEEP=NO
  public void setSentinel () {
    try {
      sentinel = new TimerSentinel(this);
    }
    catch (CGException e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=setSentinel


// ***** VDMTOOLS START Name=start KEEP=NO
  public void start () throws CGException {
    perThread.invoke();
  }
// ***** VDMTOOLS END Name=start


// ***** VDMTOOLS START Name=Timer KEEP=NO
  public Timer () throws CGException {
    try {
      perThread = new PeriodicThread(new Integer(1000),perThread){

      public void threadDef () throws CGException {
        IncTime();
      }

};
      setSentinel();
      curTime = new Integer(0);
      active = new Boolean(false);
    }
    catch (Exception e){
      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=Timer


// ***** VDMTOOLS START Name=Start KEEP=NO
  public void Start () throws CGException {
    sentinel.entering(((TimerSentinel) sentinel).Start);
    try {
      active = (Boolean) UTIL.clone(new Boolean(true));
      curTime = UTIL.NumberToInt(UTIL.clone(new Integer(0)));
    }
    finally {
      sentinel.leaving(((TimerSentinel) sentinel).Start);
    }
  }
// ***** VDMTOOLS END Name=Start


// ***** VDMTOOLS START Name=Stop KEEP=NO
  public void Stop () throws CGException {
    sentinel.entering(((TimerSentinel) sentinel).Stop);
    try {
      active = (Boolean) UTIL.clone(new Boolean(false));
    }
    finally {
      sentinel.leaving(((TimerSentinel) sentinel).Stop);
    }
  }
// ***** VDMTOOLS END Name=Stop


// ***** VDMTOOLS START Name=GetTime KEEP=NO
  public Integer GetTime () throws CGException {
    sentinel.entering(((TimerSentinel) sentinel).GetTime);
    try {
      return curTime;
    }
    finally {
      sentinel.leaving(((TimerSentinel) sentinel).GetTime);
    }
  }
// ***** VDMTOOLS END Name=GetTime


// ***** VDMTOOLS START Name=IncTime KEEP=NO
  private void IncTime () throws CGException {
    sentinel.entering(((TimerSentinel) sentinel).IncTime);
    try {
      if (active.booleanValue()) 
        curTime = UTIL.NumberToInt(UTIL.clone(new Integer(curTime.intValue() + new Integer(100).intValue())));
    }
    finally {
      sentinel.leaving(((TimerSentinel) sentinel).IncTime);
    }
  }
// ***** VDMTOOLS END Name=IncTime

}
;
