//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Wed 05-Nov-97 by the VDM++toC++ Code Generator
// (v6.0e - Tue 04-Nov-97)
//
// Supported compilers:
// 	g++ version 2.7.2 on SunOS4, SunOS5, Linux, HP-UX10
// 	Dec cxx version 5.5 on Alpha OSF1
// 	VC++ version 5.0 on Windows95, Windows NT
//



#include "Cone.h"

vdm_Cone::vdm_Cone() {
  RegisterAsDerived(vdm_GetId());
  vdm_angle = (Int) 0;
}

Bool vdm_Cone::vdm_DansCone(const Tuple &var_1_1, const Int &var_2_2, const Tuple &var_3_3, const Real &var_4_4, const Real &var_5_5) {
  Real vdm_angle;
  Real vdm_rayon_uau_usol;
  Int vdm_x1;
  Int vdm_x2;
  Int vdm_y1;
  Int vdm_y2;
  Int vdm_z1;
  bool succ_6 = true;
  if (var_1_1.IsTuple()) {
    Sequence e_l_28;
    for (int i_29 = 1; i_29 <= ((Tuple) var_1_1).Length(); i_29++) 
      e_l_28.ImpAppend(((Tuple) var_1_1).GetField(i_29));
    if (succ_6 = 2 == (Int) e_l_28.Length()) {
      vdm_x1 = (Int) e_l_28.Hd();
      vdm_y1 = (Int) e_l_28[2];
    }
  }
  else 
    succ_6 = false;
  vdm_z1 = var_2_2;
  if (var_3_3.IsTuple()) {
    Sequence e_l_30;
    for (int i_31 = 1; i_31 <= ((Tuple) var_3_3).Length(); i_31++) 
      e_l_30.ImpAppend(((Tuple) var_3_3).GetField(i_31));
    if (succ_6 = 2 == (Int) e_l_30.Length()) {
      vdm_x2 = (Int) e_l_30.Hd();
      vdm_y2 = (Int) e_l_30[2];
    }
  }
  else 
    succ_6 = false;
  vdm_rayon_uau_usol = var_4_4;
  vdm_angle = var_5_5;
  if (!succ_6) 
    RunTime("Pattern Match in Function Apply in function : DansCone failed");
  Bool varRes_7;
  Real var1_8;
  Int var1_9;
  Int var1_10;
  Int unArg_11;
  unArg_11 = (vdm_x1 - vdm_x2).Exp((Int) 2);
  int tmp_16 = unArg_11.GetValue();  if (tmp_16 < 0) 
    var1_10 = (Int) (-tmp_16);
  else 
    var1_10 = (Int) tmp_16;
  Int var2_17;
  Int unArg_18;
  unArg_18 = (vdm_y1 - vdm_y2).Exp((Int) 2);
  int tmp_23 = unArg_18.GetValue();  if (tmp_23 < 0) 
    var2_17 = (Int) (-tmp_23);
  else 
    var2_17 = (Int) tmp_23;
  var1_9 = var1_10 + var2_17;
  var1_8 = var1_9.Exp((Real) 0.5);
  varRes_7 = (Bool) ((var1_8.GetValue()) <= ((vdm_rayon_uau_usol / vdm_NMperCoordonnee).GetValue()));
  return varRes_7;
}
