//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Wed 05-Nov-97 by the VDM++toC++ Code Generator
// (v6.0e - Tue 04-Nov-97)
//
// Supported compilers:
// 	g++ version 2.7.2 on SunOS4, SunOS5, Linux, HP-UX10
// 	Dec cxx version 5.5 on Alpha OSF1
// 	VC++ version 5.0 on Windows95, Windows NT
//



#include "HWPistesRadar.h"
#include "Clock.h"
#include "PistesRadar.h"
#include "View.h"

vdm_HWPistesRadar::vdm_HWPistesRadar() { RegisterAsDerived(vdm_GetId()); }

void vdm_HWPistesRadar::vdm_Init(const ObjectRef &vdm_clock_q, const ObjectRef &vdm_radar_q, const ObjectRef &vdm_view_q, const Map &vdm_data_q) {
  vdm_clock = vdm_clock_q;
  vdm_radar = vdm_radar_q;
  vdm_view = vdm_view_q;
  vdm_data = vdm_data_q;
}

void vdm_HWPistesRadar::vdm_RefreshPistes() {
  Int tmpVal_2 = ObjGet_vdm_Clock(vdm_clock)->vdm_Now();
  Int vdm_now;
  vdm_now = tmpVal_2;
  {
    ObjGet_vdm_View(vdm_view)->vdm_ShowTime(vdm_now);
    Bool cond_5;
    cond_5 = (Bool) vdm_data.Dom().InSet(vdm_now);
    if (cond_5.GetValue()) {
      Map tmpVal_10;
      tmpVal_10 = (Map) vdm_data[vdm_now];
      Map vdm_modea_um;
      vdm_modea_um = tmpVal_10;
      {
        Set iset_13;
        iset_13 = vdm_modea_um.Dom();
        Record vdm_modea(vdm_MSAWTypes::vdm_ModeA, vdm_MSAWTypes::length_ModeA);
        Generic tmpe_30;
        for (int bb_29 = iset_13.First(tmpe_30); bb_29; bb_29 = iset_13.Next(tmpe_30)) {
          Record elem_14 = tmpe_30;
          vdm_modea = elem_14;          {
            bool succ_19;
            Tuple tmpVal_20(2);
            tmpVal_20 = (Tuple) vdm_modea_um[vdm_modea];
            Tuple vdm_xy(2);
            Int vdm_z;
            succ_19 = true;
            if (tmpVal_20.IsTuple()) {
              Sequence e_l_23;
              for (int i_24 = 1; i_24 <= ((Tuple) tmpVal_20).Length(); i_24++) 
                e_l_23.ImpAppend(((Tuple) tmpVal_20).GetField(i_24));
              if (succ_19 = 2 == (Int) e_l_23.Length()) {
                vdm_xy = (Generic) e_l_23.Hd();
                vdm_z = (Generic) e_l_23[2];
              }
            }
            else 
              succ_19 = false;
            if (!succ_19) 
              RunTime("Pattern match did not succeed in value definition");
            ObjGet_vdm_PistesRadar(vdm_radar)->vdm_SetPosition(vdm_modea, vdm_now, vdm_xy, vdm_z);
          }
        }
      }
    }
  }
}
