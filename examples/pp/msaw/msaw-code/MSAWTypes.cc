//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Wed 05-Nov-97 by the VDM++toC++ Code Generator
// (v6.0e - Tue 04-Nov-97)
//
// Supported compilers:
// 	g++ version 2.7.2 on SunOS4, SunOS5, Linux, HP-UX10
// 	Dec cxx version 5.5 on Alpha OSF1
// 	VC++ version 5.0 on Windows95, Windows NT
//



#include "MSAWTypes.h"

Bool vdm_MSAWTypes::vdm_inv_Coordonnee(const Int &vdm_c) { return (Bool) ((vdm_c.GetValue()) <= (((Int) 32).GetValue())); }

Bool vdm_MSAWTypes::vdm_inv_Degrees(const Real &vdm_d) {
  Bool varRes_3;
{ if ((varRes_3 = (Bool) ((((Int) 0).GetValue()) <= (vdm_d.GetValue()))).GetValue()) 
   varRes_3 = (Bool) ((vdm_d.GetValue()) <= (((Int) 360).GetValue())); }
  return varRes_3;
}

vdm_MSAWTypes::vdm_MSAWTypes() {
  RegisterAsBase(vdm_GetId());
  {
    Int tmpVal_1;
    tmpVal_1 = (Int) 1;
    vdm_NMperCoordonnee = tmpVal_1;
  }
  {
    Int tmpVal_1;
    tmpVal_1 = (Int) 1;
    vdm_Secondes = tmpVal_1;
  }
  {
    Int tmpVal_1;
    tmpVal_1 = (Int) 10 * vdm_Secondes;
    vdm_BalayageRadar = tmpVal_1;
  }
}

Bool vdm_MSAWTypes::vdm_PlusTard(const Int &vdm_t1, const Int &vdm_t2) { return (Bool) ((vdm_t1.GetValue()) > (vdm_t2.GetValue())); }

Int vdm_MSAWTypes::vdm_LaPlusRecente(const Set &vdm_ts) {
  Int varRes_3;
  {
    Set tmpSet_4;
    tmpSet_4 = vdm_ts;
    Int vdm_t;
    bool succ_6 = false;
    Generic tmpe_24;
    for (int bb_23 = tmpSet_4.First(tmpe_24); bb_23 && !succ_6; bb_23 = tmpSet_4.Next(tmpe_24)) {
      Int tmpElem_7 = tmpe_24;
      vdm_t = tmpElem_7;      {
        Bool tmpB_8;
        Bool unArg_9;
        bool tmpQuant_10 = false;
        {
          bool succ_18 = true;

          Int vdm_t_q;
          {
            Generic tmpe_22;
            for (int bb_21 = vdm_ts.First(tmpe_22); bb_21 && !tmpQuant_10; bb_21 = vdm_ts.Next(tmpe_22)) {
              Int elem_20 = tmpe_22;
              succ_18 = true;              vdm_t_q = elem_20;              if (succ_18) {
                Bool pred_11;
{ if ((pred_11 = (Bool) !(vdm_t == vdm_t_q)).GetValue()) 
   pred_11 = vdm_PlusTard(vdm_t_q, vdm_t); }
                if (pred_11.GetValue()) 
                  tmpQuant_10 = true;
              }
            }
          }
        }
        unArg_9 = (Bool) tmpQuant_10;
        tmpB_8 = (Bool) !unArg_9.GetValue();
        succ_6 = tmpB_8.GetValue();
      }
    }
    if (!succ_6) 
      RunTime("The binding environment was empty");
    varRes_3 = vdm_t;
  }
  return varRes_3;
}

Bool vdm_MSAWTypes::vdm_pre_LaPlusRecente(const Set &vdm_ts) { return (Bool) !(vdm_ts == Set()); }

Real vdm_MSAWTypes::vdm_Distance(const Tuple &vdm_position, const Record &vdm_station) {
  Generic varRes_4;
  RunTime("Can not evaluate an undefined expression");
  return varRes_4;
}
