//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Wed 05-Nov-97 by the VDM++toC++ Code Generator
// (v6.0e - Tue 04-Nov-97)
//
// Supported compilers:
// 	g++ version 2.7.2 on SunOS4, SunOS5, Linux, HP-UX10
// 	Dec cxx version 5.5 on Alpha OSF1
// 	VC++ version 5.0 on Windows95, Windows NT
//



#include "ObstacleArtificiel.h"
#include "SegmentDePrediction.h"

vdm_ObstacleArtificiel::vdm_ObstacleArtificiel() { RegisterAsDerived(vdm_GetId()); }

Bool vdm_ObstacleArtificiel::vdm_Intersection(const ObjectRef &vdm_segment_ude_uprediction) {
  Set tmpVal_2 = ObjGet_vdm_SegmentDePrediction(vdm_segment_ude_uprediction)->vdm_GetPoints();
  Set vdm_points_ude_uvecteur;
  vdm_points_ude_uvecteur = tmpVal_2;
  Bool rexpr_4;
  bool tmpQuant_5 = false;
  {
    bool succ_12 = true;

    Tuple vdm_xy(2);    Int vdm_z;
    {
      Generic tmpe_18;
      for (int bb_17 = vdm_points_ude_uvecteur.First(tmpe_18); bb_17 && !tmpQuant_5; bb_17 = vdm_points_ude_uvecteur.Next(tmpe_18)) {
        Tuple elem_14 = tmpe_18;
        succ_12 = true;        if (elem_14.IsTuple()) {
          Sequence e_l_15;
          for (int i_16 = 1; i_16 <= ((Tuple) elem_14).Length(); i_16++) 
            e_l_15.ImpAppend(((Tuple) elem_14).GetField(i_16));
          if (succ_12 = 2 == (Int) e_l_15.Length()) {
            succ_12 = true;
            if (((Bool) ((Generic) e_l_15.Hd()).IsTuple()).GetValue()) 
              vdm_xy = (Generic) e_l_15.Hd();
            else 
              succ_12 = false;
            if (succ_12) { if (((Bool) (IsInteger((Generic) e_l_15[2]) && ((Int) (Generic) e_l_15[2]).GetValue() >= 0)).GetValue()) 
   vdm_z = (Generic) e_l_15[2];
 else 
   succ_12 = false; }
          }
        }
        else 
          succ_12 = false;        if (succ_12) { if (vdm_DansCylindre(vdm_xy, vdm_z, vdm_centre, vdm_rayon, vdm_altitude_umaximale).GetValue()) 
   tmpQuant_5 = true; }
      }
    }
  }
  rexpr_4 = (Bool) tmpQuant_5;
  return rexpr_4;
}

void vdm_ObstacleArtificiel::vdm_Set(const Tuple &vdm_centre_q, const Real &vdm_rayon_q, const Int &vdm_altitude_umaximale_q) {
  vdm_centre = vdm_centre_q;
  vdm_rayon = vdm_rayon_q;
  vdm_altitude_umaximale = vdm_altitude_umaximale_q;
}
