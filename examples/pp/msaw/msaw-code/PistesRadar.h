//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Wed 05-Nov-97 by the VDM++toC++ Code Generator
// (v6.0e - Tue 04-Nov-97)
//
// Supported compilers:
// 	g++ version 2.7.2 on SunOS4, SunOS5, Linux, HP-UX10
// 	Dec cxx version 5.5 on Alpha OSF1
// 	VC++ version 5.0 on Windows95, Windows NT
//

#ifndef _PistesRadar_h
#define _PistesRadar_h

#include <math.h>
#include "metaiv.h"
#include "cg.h"
#include "cg_aux.h"
#include "CGBase.h"
#include "MSAWTypes.h"



class vdm_PistesRadar : public virtual vdm_MSAWTypes {
protected:
  Map vdm_pistes;
  enum  {
    vdm_PisteInfo = 3,
    length_PisteInfo = 4,
    pos_PisteInfo_position = 1,
    pos_PisteInfo_modeC = 2,
    pos_PisteInfo_vitesse = 3,
    pos_PisteInfo_alarmes = 4
  } ;
  virtual Generic vdm_TypedAlarm(const ObjectRef &);
public:

  virtual vdm_PistesRadar * Get_vdm_PistesRadar() { return this; }

  ObjectRef Self() { return ObjectRef(Get_vdm_PistesRadar()); }

  int vdm_GetId() { return VDM_PistesRadar; }
  virtual void vdm_Init(const ObjectRef &);
  virtual void vdm_SetPosition(const Record &, const Int &, const Tuple &, const Int &);
  virtual void vdm_SetVitesse(const Record &, const Int &, const Tuple &);
  virtual void vdm_SetAlarm(const Record &, const ObjectRef &);
  virtual Set vdm_GetModeAs();
  virtual Map vdm_GetPositions(const Record &);
  virtual Tuple vdm_GetVitesse(const Record &);
  virtual void vdm_DelPiste(const Record &);
   vdm_PistesRadar();

  virtual ~vdm_PistesRadar() {}
};

#endif

