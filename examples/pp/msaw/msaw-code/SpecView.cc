//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Wed 05-Nov-97 by the VDM++toC++ Code Generator
// (v6.0e - Tue 04-Nov-97)
//
// Supported compilers:
// 	g++ version 2.7.2 on SunOS4, SunOS5, Linux, HP-UX10
// 	Dec cxx version 5.5 on Alpha OSF1
// 	VC++ version 5.0 on Windows95, Windows NT
//



#include "SpecView.h"
#include "Obstacle.h"

vdm_SpecView::vdm_SpecView() {
  RegisterAsDerived(vdm_GetId());
  {
    vdm_now = (Int) 0;
    vdm_alarms = Map();
  }
}

Map vdm_SpecView::vdm_GetAlarms() { return vdm_alarms; }

void vdm_SpecView::vdm_ShowAlarm(const Record &vdm_modeA, const ObjectRef &vdm_obstacle) {
  Bool cond_1;
  cond_1 = (Bool) vdm_alarms.Dom().InSet(vdm_modeA);
  if (cond_1.GetValue()) {
    Map rhs_10;
    Map modmap_11;
    modmap_11 = Map().Insert(vdm_now, vdm_obstacle);
    rhs_10 = (Map) vdm_alarms[vdm_modeA];    rhs_10.ImpOverride(modmap_11);
    vdm_alarms.ImpModify(vdm_modeA, rhs_10);
  }
  else 
    vdm_alarms.ImpModify(vdm_modeA, Map().Insert(vdm_now, vdm_obstacle));
}

void vdm_SpecView::vdm_ShowObstacleArtificiel(const Tuple &vdm_centre, const Real &vdm_rayon, const Int &vdm_altitude_umaximale) { ; }

void vdm_SpecView::vdm_ShowZoneAeroport(const Tuple &vdm_centre, const Real &vdm_rayon, const Int &vdm_altitude_umaximale, const Real &vdm_rayon_uau_usol) { ; }

void vdm_SpecView::vdm_ShowRadarData(const Record &vdm_modeA, const Tuple &vdm_position, const Int &vdm_modeC) { ; }

void vdm_SpecView::vdm_ShowSegmentDePrediction(const Tuple &vdm_xy_uqueue, const Tuple &vdm_xy_utete) { ; }

void vdm_SpecView::vdm_ShowTime(const Int &vdm_t) { vdm_now = vdm_t; }
