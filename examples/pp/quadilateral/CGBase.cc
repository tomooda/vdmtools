//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Thu 25-Sep-97 by the VDM++toC++ Code Generator
// (v6.0 - Thu 25-Sep-97)
//
// Supported compiler: g++ version 2.7.2
//



#include "metaiv.h"
#include "CGBase.h"

vdm_Mathematics * ObjGet_vdm_Mathematics(const ObjectRef &obj) {
  vdmBase * p = obj.GetRef();
  return p ? ((CGBase *) p)->Get_vdm_Mathematics() : 0;
}

vdm_Parallelogram * ObjGet_vdm_Parallelogram(const ObjectRef &obj) {
  vdmBase * p = obj.GetRef();
  return p ? ((CGBase *) p)->Get_vdm_Parallelogram() : 0;
}

vdm_Quadrilateral * ObjGet_vdm_Quadrilateral(const ObjectRef &obj) {
  vdmBase * p = obj.GetRef();
  return p ? ((CGBase *) p)->Get_vdm_Quadrilateral() : 0;
}

vdm_Rectangle * ObjGet_vdm_Rectangle(const ObjectRef &obj) {
  vdmBase * p = obj.GetRef();
  return p ? ((CGBase *) p)->Get_vdm_Rectangle() : 0;
}

vdm_Rhombus * ObjGet_vdm_Rhombus(const ObjectRef &obj) {
  vdmBase * p = obj.GetRef();
  return p ? ((CGBase *) p)->Get_vdm_Rhombus() : 0;
}

vdm_Square * ObjGet_vdm_Square(const ObjectRef &obj) {
  vdmBase * p = obj.GetRef();
  return p ? ((CGBase *) p)->Get_vdm_Square() : 0;
}

vdm_Vector * ObjGet_vdm_Vector(const ObjectRef &obj) {
  vdmBase * p = obj.GetRef();
  return p ? ((CGBase *) p)->Get_vdm_Vector() : 0;
}

vdm_WorkSpace * ObjGet_vdm_WorkSpace(const ObjectRef &obj) {
  vdmBase * p = obj.GetRef();
  return p ? ((CGBase *) p)->Get_vdm_WorkSpace() : 0;
}
