//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Thu 25-Sep-97 by the VDM++toC++ Code Generator
// (v6.0 - Thu 25-Sep-97)
//
// Supported compiler: g++ version 2.7.2
//



#include "Mathematics.h"
#include "vdm_Mathematics_implicit.cc"

Bool vdm_Mathematics::vdm_inv_Angle(Real vdm_a) {
  Bool varRes_3;
  if ((varRes_3 = (Bool) ((vdm_a.GetValue()) >= (((Int) 0).GetValue()))).GetValue()) 
    varRes_3 = (Bool) ((vdm_a.GetValue()) <= (((Int) 2 * vdm_pi).GetValue()));
  return varRes_3;
}

vdm_Mathematics::vdm_Mathematics() {
  RegisterAsBase(vdm_GetId());
  {
    Real tmpVal_1;
    tmpVal_1 = (Real) 3.14;
    vdm_pi = tmpVal_1;
  }
}

Bool vdm_Mathematics::vdm_post_acos(Real vdm_x, Real vdm_res) { return vdm_inv_Angle(vdm_res); }

Bool vdm_Mathematics::vdm_post_sqrt(Real vdm_r, Real vdm_res) {
  Bool varRes_4;
  Real var1_5;
  var1_5 = vdm_res.Exp((Int) 2);
  varRes_4 = (Bool) (var1_5 == vdm_r);
  return varRes_4;
}
