//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Thu 25-Sep-97 by the VDM++toC++ Code Generator
// (v6.0 - Thu 25-Sep-97)
//
// Supported compiler: g++ version 2.7.2
//



#include "Vector.h"

vdm_Vector::vdm_Vector() {
  RegisterAsDerived(vdm_GetId());
  {
    Record tmpVal_1(vdm_vector, length_vector);
    tmpVal_1 = Record(vdm_vector, length_vector);
    Tuple tmpVar_3(2);
    tmpVar_3 = Tuple(2);
    tmpVar_3.SetField(1, (Int) 0);
    tmpVar_3.SetField(2, (Int) 0);
    tmpVal_1.SetField(1, tmpVar_3);
    Tuple tmpVar_6(2);
    tmpVar_6 = Tuple(2);
    tmpVar_6.SetField(1, (Int) 0);
    tmpVar_6.SetField(2, (Int) 0);
    tmpVal_1.SetField(2, tmpVar_6);
    vdm_NullVector = tmpVal_1;
  }
}

Real vdm_Vector::vdm_inproduct(Record vdm_v1, Record vdm_v2) {
  Int varRes_4;
  {
    bool succ_5;
    Record tmpVal_6(vdm_vector, length_vector);
    tmpVal_6 = vdm_v1;
    Int vdm_hd1x;
    Int vdm_hd1y;
    Int vdm_tl1x;
    Int vdm_tl1y;
    succ_5 = true;
    if (tmpVal_6.IsRecord() && vdm_vector == tmpVal_6.GetTag()) {
      Sequence e_l_7;
      for (int i_8 = 1; i_8 <= tmpVal_6.Length(); i_8++) 
        e_l_7.ImpAppend(tmpVal_6.GetField(i_8));
      if (succ_5 = 2 == (Int) e_l_7.Length()) {
        succ_5 = true;
        if (((Tuple) e_l_7.Hd()).IsTuple()) {
          Sequence e_l_9;
          for (int i_10 = 1; i_10 <= ((Tuple) (Tuple) e_l_7.Hd()).Length(); i_10++) 
            e_l_9.ImpAppend(((Tuple) (Tuple) e_l_7.Hd()).GetField(i_10));
          if (succ_5 = 2 == (Int) e_l_9.Length()) {
            vdm_hd1x = (Int) e_l_9.Hd();
            vdm_hd1y = (Int) e_l_9[2];
          }
        }
        else 
          succ_5 = false;
        if (succ_5) { if (((Tuple) e_l_7[2]).IsTuple()) {
   Sequence e_l_11;
   for (int i_12 = 1; i_12 <= ((Tuple) (Tuple) e_l_7[2]).Length(); i_12++) 
     e_l_11.ImpAppend(((Tuple) (Tuple) e_l_7[2]).GetField(i_12));
   if (succ_5 = 2 == (Int) e_l_11.Length()) {
     vdm_tl1x = (Int) e_l_11.Hd();
     vdm_tl1y = (Int) e_l_11[2];
   }
 }
 else 
   succ_5 = false; }
      }
    }
    else 
      succ_5 = false;
    if (!succ_5) 
      RunTime("Pattern match did not succeed in value definition");
    Record tmpVal_13(vdm_vector, length_vector);
    tmpVal_13 = vdm_v2;
    Int vdm_hd2x;
    Int vdm_hd2y;
    Int vdm_tl2x;
    Int vdm_tl2y;
    succ_5 = true;
    if (tmpVal_13.IsRecord() && vdm_vector == tmpVal_13.GetTag()) {
      Sequence e_l_14;
      for (int i_15 = 1; i_15 <= tmpVal_13.Length(); i_15++) 
        e_l_14.ImpAppend(tmpVal_13.GetField(i_15));
      if (succ_5 = 2 == (Int) e_l_14.Length()) {
        succ_5 = true;
        if (((Tuple) e_l_14.Hd()).IsTuple()) {
          Sequence e_l_16;
          for (int i_17 = 1; i_17 <= ((Tuple) (Tuple) e_l_14.Hd()).Length(); i_17++) 
            e_l_16.ImpAppend(((Tuple) (Tuple) e_l_14.Hd()).GetField(i_17));
          if (succ_5 = 2 == (Int) e_l_16.Length()) {
            vdm_hd2x = (Int) e_l_16.Hd();
            vdm_hd2y = (Int) e_l_16[2];
          }
        }
        else 
          succ_5 = false;
        if (succ_5) { if (((Tuple) e_l_14[2]).IsTuple()) {
   Sequence e_l_18;
   for (int i_19 = 1; i_19 <= ((Tuple) (Tuple) e_l_14[2]).Length(); i_19++) 
     e_l_18.ImpAppend(((Tuple) (Tuple) e_l_14[2]).GetField(i_19));
   if (succ_5 = 2 == (Int) e_l_18.Length()) {
     vdm_tl2x = (Int) e_l_18.Hd();
     vdm_tl2y = (Int) e_l_18[2];
   }
 }
 else 
   succ_5 = false; }
      }
    }
    else 
      succ_5 = false;
    if (!succ_5) 
      RunTime("Pattern match did not succeed in value definition");
    varRes_4 = (vdm_tl1x - vdm_hd1x) * (vdm_tl2x - vdm_hd2x) + (vdm_tl1y - vdm_hd1y) * (vdm_tl2y - vdm_hd2y);
  }
  return varRes_4;
}

Real vdm_Vector::vdm_length(Record vdm_v) {
  Real varRes_3;
  {
    bool succ_4;
    Record tmpVal_5(vdm_vector, length_vector);
    tmpVal_5 = vdm_v;
    Int vdm_hdx;
    Int vdm_hdy;
    Int vdm_tlx;
    Int vdm_tly;
    succ_4 = true;
    if (tmpVal_5.IsRecord() && vdm_vector == tmpVal_5.GetTag()) {
      Sequence e_l_6;
      for (int i_7 = 1; i_7 <= tmpVal_5.Length(); i_7++) 
        e_l_6.ImpAppend(tmpVal_5.GetField(i_7));
      if (succ_4 = 2 == (Int) e_l_6.Length()) {
        succ_4 = true;
        if (((Tuple) e_l_6.Hd()).IsTuple()) {
          Sequence e_l_8;
          for (int i_9 = 1; i_9 <= ((Tuple) (Tuple) e_l_6.Hd()).Length(); i_9++) 
            e_l_8.ImpAppend(((Tuple) (Tuple) e_l_6.Hd()).GetField(i_9));
          if (succ_4 = 2 == (Int) e_l_8.Length()) {
            vdm_hdx = (Int) e_l_8.Hd();
            vdm_hdy = (Int) e_l_8[2];
          }
        }
        else 
          succ_4 = false;
        if (succ_4) { if (((Tuple) e_l_6[2]).IsTuple()) {
   Sequence e_l_10;
   for (int i_11 = 1; i_11 <= ((Tuple) (Tuple) e_l_6[2]).Length(); i_11++) 
     e_l_10.ImpAppend(((Tuple) (Tuple) e_l_6[2]).GetField(i_11));
   if (succ_4 = 2 == (Int) e_l_10.Length()) {
     vdm_tlx = (Int) e_l_10.Hd();
     vdm_tly = (Int) e_l_10[2];
   }
 }
 else 
   succ_4 = false; }
      }
    }
    else 
      succ_4 = false;
    if (!succ_4) 
      RunTime("Pattern match did not succeed in value definition");
    Int par_12;
    Int var1_13;
    var1_13 = (vdm_tlx - vdm_hdx).Exp((Int) 2);
    Int var2_18;
    var2_18 = (vdm_tly - vdm_hdy).Exp((Int) 2);
    par_12 = var1_13 + var2_18;
    varRes_3 = vdm_sqrt(par_12);
  }
  return varRes_3;
}

Record vdm_Vector::vdm_add(Record vdm_v1, Record vdm_v2) {
  Record varRes_4(vdm_vector, length_vector);
  {
    bool succ_5;
    Record tmpVal_6(vdm_vector, length_vector);
    tmpVal_6 = vdm_v1;
    Tuple vdm_hd1(2);
    Int vdm_tl1x;
    Int vdm_tl1y;
    succ_5 = true;
    if (tmpVal_6.IsRecord() && vdm_vector == tmpVal_6.GetTag()) {
      Sequence e_l_7;
      for (int i_8 = 1; i_8 <= tmpVal_6.Length(); i_8++) 
        e_l_7.ImpAppend(tmpVal_6.GetField(i_8));
      if (succ_5 = 2 == (Int) e_l_7.Length()) {
        vdm_hd1 = (Tuple) e_l_7.Hd();
        if (((Tuple) e_l_7[2]).IsTuple()) {
          Sequence e_l_9;
          for (int i_10 = 1; i_10 <= ((Tuple) (Tuple) e_l_7[2]).Length(); i_10++) 
            e_l_9.ImpAppend(((Tuple) (Tuple) e_l_7[2]).GetField(i_10));
          if (succ_5 = 2 == (Int) e_l_9.Length()) {
            vdm_tl1x = (Int) e_l_9.Hd();
            vdm_tl1y = (Int) e_l_9[2];
          }
        }
        else 
          succ_5 = false;
      }
    }
    else 
      succ_5 = false;
    if (!succ_5) 
      RunTime("Pattern match did not succeed in value definition");
    Record tmpVal_11(vdm_vector, length_vector);
    tmpVal_11 = vdm_v2;
    Int vdm_hd2x;
    Int vdm_hd2y;
    Int vdm_tl2x;
    Int vdm_tl2y;
    succ_5 = true;
    if (tmpVal_11.IsRecord() && vdm_vector == tmpVal_11.GetTag()) {
      Sequence e_l_12;
      for (int i_13 = 1; i_13 <= tmpVal_11.Length(); i_13++) 
        e_l_12.ImpAppend(tmpVal_11.GetField(i_13));
      if (succ_5 = 2 == (Int) e_l_12.Length()) {
        succ_5 = true;
        if (((Tuple) e_l_12.Hd()).IsTuple()) {
          Sequence e_l_14;
          for (int i_15 = 1; i_15 <= ((Tuple) (Tuple) e_l_12.Hd()).Length(); i_15++) 
            e_l_14.ImpAppend(((Tuple) (Tuple) e_l_12.Hd()).GetField(i_15));
          if (succ_5 = 2 == (Int) e_l_14.Length()) {
            vdm_hd2x = (Int) e_l_14.Hd();
            vdm_hd2y = (Int) e_l_14[2];
          }
        }
        else 
          succ_5 = false;
        if (succ_5) { if (((Tuple) e_l_12[2]).IsTuple()) {
   Sequence e_l_16;
   for (int i_17 = 1; i_17 <= ((Tuple) (Tuple) e_l_12[2]).Length(); i_17++) 
     e_l_16.ImpAppend(((Tuple) (Tuple) e_l_12[2]).GetField(i_17));
   if (succ_5 = 2 == (Int) e_l_16.Length()) {
     vdm_tl2x = (Int) e_l_16.Hd();
     vdm_tl2y = (Int) e_l_16[2];
   }
 }
 else 
   succ_5 = false; }
      }
    }
    else 
      succ_5 = false;
    if (!succ_5) 
      RunTime("Pattern match did not succeed in value definition");
    varRes_4 = Record(vdm_vector, length_vector);
    varRes_4.SetField(1, vdm_hd1);
    Tuple tmpVar_19(2);
    tmpVar_19 = Tuple(2);
    tmpVar_19.SetField(1, vdm_tl1x + vdm_tl2x - vdm_hd2x);
    tmpVar_19.SetField(2, vdm_tl1y + vdm_tl2y - vdm_hd2y);
    varRes_4.SetField(2, tmpVar_19);
  }
  return varRes_4;
}
