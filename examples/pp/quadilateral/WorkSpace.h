//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Thu 12-Oct-2000 by the VDM++ C++ Code Generator
// (v6.5e - Thu 05-Oct-2000)
//
// Supported compilers:
// 	egcs version 1.1 on SunOS4, SunOS5, Linux, HP-UX10
// 	VC++ version 6.0 on Windows95, Windows NT
//

#ifndef _WorkSpace_h
#define _WorkSpace_h

#include <math.h>
#include "metaiv.h"
#include "cg.h"
#include "cg_aux.h"
#include "CGBase.h"
#include "WorkSpace_anonym.h"
#include "Command.h"
#include "HandControlUnit.h"



class type_ref_WorkSpace : public virtual ObjectRef {
public:

  type_ref_WorkSpace () : ObjectRef() {}

  type_ref_WorkSpace (const Generic &c) : ObjectRef(c) {}

  type_ref_WorkSpace (vdmBase * p) : ObjectRef(p) {}

  const char * GetTypeName () const {
 return "type_ref_WorkSpace";
  }
} ;


class vdm_WorkSpace : public virtual CGBase {

  friend class init_WorkSpace ;
public:

  vdm_WorkSpace * Get_vdm_WorkSpace () {
 return this;
  }

  ObjectRef Self () {
 return ObjectRef(Get_vdm_WorkSpace());
  }

  int vdm_GetId () {
 return VDM_WorkSpace;
  }
   ;
   vdm_WorkSpace ();

  virtual ~vdm_WorkSpace () {}
private:
  static Bool vdm_check;
  ObjectRef vdm_hcu;
  ObjectRef vdm_aah;
  ObjectRef vdm_intcmd;
  ObjectRef vdm_thrcontrol;
  ObjectRef vdm_vda;
  ObjectRef vdm_clock;
  virtual Bool vdm_ThrusterConsistency (const type_US &);
public:
  virtual type_US vdm_ControlCycle (const TYPE_Command_Direction &, const TYPE_Command_Direction &, const TYPE_Command_Direction &, const TYPE_Command_Direction &, const TYPE_HandControlUnit_Mode &, const TYPE_HandControlUnit_Button &, const TYPE_Command_AxisMap &);
  Bool vdm_post_ControlCycle (const TYPE_Command_Direction &, const TYPE_Command_Direction &, const TYPE_Command_Direction &, const TYPE_Command_Direction &, const TYPE_HandControlUnit_Mode &, const TYPE_HandControlUnit_Button &, const TYPE_Command_AxisMap &, const type_US &);
  virtual void vdm_SetupTopology ();
};

#endif

