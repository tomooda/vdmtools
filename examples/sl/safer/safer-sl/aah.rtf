{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman{\*\falt Times New Roman};}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial{\*\falt Arial};}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f6\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Courier{\*\falt Courier New};}
{\f16\froman\fcharset0\fprq2{\*\panose 00000000000000000000}CG Times{\*\falt Times New Roman};}{\f39\froman\fcharset238\fprq2 Times New Roman CE{\*\falt Times New Roman};}{\f40\froman\fcharset204\fprq2 Times New Roman Cyr{\*\falt Times New Roman};}
{\f42\froman\fcharset161\fprq2 Times New Roman Greek{\*\falt Times New Roman};}{\f43\froman\fcharset162\fprq2 Times New Roman Tur{\*\falt Times New Roman};}{\f44\froman\fcharset186\fprq2 Times New Roman Baltic{\*\falt Times New Roman};}
{\f45\fswiss\fcharset238\fprq2 Arial CE{\*\falt Arial};}{\f46\fswiss\fcharset204\fprq2 Arial Cyr{\*\falt Arial};}{\f48\fswiss\fcharset161\fprq2 Arial Greek{\*\falt Arial};}{\f49\fswiss\fcharset162\fprq2 Arial Tur{\*\falt Arial};}
{\f50\fswiss\fcharset186\fprq2 Arial Baltic{\*\falt Arial};}{\f51\fmodern\fcharset238\fprq1 Courier New CE;}{\f52\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f54\fmodern\fcharset161\fprq1 Courier New Greek;}
{\f55\fmodern\fcharset162\fprq1 Courier New Tur;}{\f56\fmodern\fcharset186\fprq1 Courier New Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;
\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{
\nowidctlpar\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}{\s1\fi-547\li547\sb240\sa120\keep\keepn\nowidctlpar\widctlpar\ls1\outlinelevel0\adjustright \b\fs36\lang2057\kerning28\cgrid \sbasedon0 \snext19 heading 1;}{
\s2\sb160\sa120\keep\keepn\nowidctlpar\widctlpar\ls1\ilvl1\outlinelevel1\adjustright \b\fs28\lang2057\kerning28\cgrid \sbasedon0 \snext19 heading 2;}{\s3\sb120\sa80\keep\keepn\nowidctlpar\widctlpar\ls1\ilvl2\outlinelevel2\adjustright 
\b\lang2057\kerning28\cgrid \sbasedon0 \snext19 heading 3;}{\s4\sb120\sa80\keep\keepn\nowidctlpar\widctlpar\ls1\ilvl3\outlinelevel3\adjustright \b\i\lang2057\kerning28\cgrid \sbasedon0 \snext19 heading 4;}{
\s5\qj\sb120\sa80\keep\keepn\nowidctlpar\widctlpar\ls1\ilvl4\outlinelevel4\adjustright \b\f1\fs20\lang2057\kerning28\cgrid \sbasedon0 \snext19 heading 5;}{\s6\qj\sb120\sa80\keep\keepn\nowidctlpar\widctlpar\ls1\ilvl5\outlinelevel5\adjustright 
\b\i\f1\fs20\lang2057\kerning28\cgrid \sbasedon0 \snext19 heading 6;}{\s7\qj\sb80\sa60\keep\keepn\nowidctlpar\widctlpar\ls1\ilvl6\outlinelevel6\adjustright \b\fs20\lang2057\kerning28\cgrid \sbasedon0 \snext19 heading 7;}{
\s8\qj\sb80\sa60\keep\keepn\nowidctlpar\widctlpar\ls1\ilvl7\outlinelevel7\adjustright \i\fs20\lang2057\kerning28\cgrid \sbasedon0 \snext19 heading 8;}{\s9\qj\sb80\sa60\keep\keepn\nowidctlpar\widctlpar\ls1\ilvl8\outlinelevel8\adjustright 
\b\i\fs20\lang2057\kerning28\cgrid \sbasedon0 \snext19 heading 9;}{\*\cs10 \additive Default Paragraph Font;}{\s15\nowidctlpar\widctlpar\adjustright \shading2000 \f2\fs20\lang1024\cgrid \snext15 VDM;}{\*\cs16 \additive \f6\chshdng2000\chcfpat0\chcbpat0 
\sbasedon10 VDM_COV;}{\*\cs17 \additive \f6\cf6\chshdng2000\chcfpat0\chcbpat0 \sbasedon10 VDM_NCOV;}{\s18\nowidctlpar\widctlpar\adjustright \shading2000 \f2\fs20\lang1024\cgrid \sbasedon15 \snext18 VDM_TC_TABLE;}{
\s19\qj\sa160\nowidctlpar\widctlpar\adjustright \fs22\lang2057\cgrid \sbasedon0 \snext19 Body Text;}{\s20\qj\nowidctlpar\widctlpar\adjustright \f2\fs20\lang2057\cgrid \sbasedon0 \snext20 Plain Text;}}{\*\listtable{\list\listtemplateid-1{\listlevel
\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace284\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\b\i0\f16\fbias0 \s1}{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace284\levelindent0{\leveltext
\'03\'00.\'01;}{\levelnumbers\'01\'03;}\s2}{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace284\levelindent0{\leveltext\'05\'00.\'01.\'02;}{\levelnumbers\'01\'03\'05;}\s3}{\listlevel\levelnfc0\leveljc0\levelfollow0
\levelstartat1\levelold\levelspace284\levelindent0{\leveltext\'07\'00.\'01.\'02.\'03;}{\levelnumbers\'01\'03\'05\'07;}\s4}{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent0{\leveltext
\'09\'00.\'01.\'02.\'03.\'04;}{\levelnumbers\'01\'03\'05\'07\'09;}\s5}{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent0{\leveltext\'0b\'00.\'01.\'02.\'03.\'04.\'05;}{\levelnumbers\'01\'03\'05\'07\'09\'0b;}\s6}
{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent0{\leveltext\'0d\'00.\'01.\'02.\'03.\'04.\'05.\'06;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d;}\s7}{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1
\levelold\levelspace0\levelindent0{\leveltext\'10\'00.\'01.\'02.\'03.\'04.\'05.\'06.\'07.;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d\'0f;}\s8}{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent0{\leveltext
\'11\'00.\'01.\'02.\'03.\'04.\'05.\'06.\'07.\'08;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d\'0f\'11;}\s9}{\listname ;}\listid-5}}{\*\listoverridetable{\listoverride\listid-5\listoverridecount0\ls1}}{\info{\title 1}{\author Peter Gorm Larsen}
{\operator Peter Gorm Larsen}{\creatim\yr2000\mo10\dy26\hr10\min29}{\revtim\yr2000\mo10\dy26\hr10\min30}{\version1}{\edmins1}{\nofpages2}{\nofwords570}{\nofchars3253}{\*\company IFAD}{\nofcharsws3994}{\vern71}}
\paperw11900\paperh16840\margl1149\margr1149\margt1138\margb1138 \widowctrl\ftnbj\aenddoc\formshade\viewkind4\viewscale100\pgbrdrhead\pgbrdrfoot \fet0{\*\template C:\\Programmer\\Microsoft Office\\Templates\\VDM.dot}\sectd 
\linex0\headery709\footery709\colsx709\endnhere\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4
\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}
{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\listtext\pard\plain\s1 \b\f16\fs36\kerning28\cgrid \hich\af16\dbch\af0\loch\f16 1.\tab}
\pard\plain \s1\fi-547\li547\sb240\sa120\keep\keepn\nowidctlpar\widctlpar\ls1\outlinelevel0\adjustright \b\fs36\lang2057\kerning28\cgrid {Automatic Attitude Hold
\par }\pard\plain \s20\qj\nowidctlpar\widctlpar\adjustright \f2\fs20\lang2057\cgrid {
\par }\pard\plain \s19\qj\sa160\nowidctlpar\widctlpar\adjustright \fs22\lang2057\cgrid {\fs24 
An automatic attitude hold (AAH) capability may be invoked to maintain near-zero rotation rates.  A pushbutton mounted on the hand grip engages AAH with a single button click, and 
disengages with a double click.  Internal state information is maintained to observe the button pushing protocol, and keep track of status for each axis.}{
\par }\pard\plain \s20\qj\nowidctlpar\widctlpar\adjustright \f2\fs20\lang2057\cgrid {
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \shading2000 \f2\fs20\lang1024\cgrid {module AAH
\par 
\par imports from AUXIL all,
\par         from HCM all
\par 
\par exports all
\par 
\par definitions
\par 
\par state AAH of 
\par       active_axes : set of AUXIL`RotAxis
\par       ignore_hcm  : set of AUXIL`RotAxis
\par       toggle      : EngageState
\par       timeout     : nat
\par init s ==
\par   s = mk_AAH(\{\},\{\},<AAH_off>,0)
\par end      
\par          
\par types
\par 
\par   EngageState = <AAH_off> | <AAH_started> | <AAH_on> | <pressed_once> |
\par                 <AAH_closing> | <pressed_twice>;
\par 
\par values
\par   
\par   click_timeout: nat = 10 -- was 100, changed for test purposes
\par }\pard\plain \s20\qj\nowidctlpar\widctlpar\adjustright \f2\fs20\lang2057\cgrid {
\par }\pard\plain \s19\qj\sa160\nowidctlpar\widctlpar\adjustright \fs22\lang2057\cgrid {AAH state information is updated in every frame.  Key trans
itions in the engage-state diagram cause various state components to be updated. This Transition operation can be consired as a representation of a state machine.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \shading2000 \f2\fs20\lang1024\cgrid {operations
\par 
\par   Transition: HCM`ControlButton * AUXIL`SixDofCommand * nat ==> ()
\par   Transition(button_pos,hcm_cmd,clock) ==
\par     let 
\par       engage = ButtonTransition(toggle,button_pos,
\par                                 active_axes,clock,timeout),
\par       starting = (toggle = <AAH_off>) and (engage = <AAH_started>)
\par     in
\par       (active_axes:= \{a | a in set AUXIL`rot_axis_set & 
\par                           starting or 
\par                           (engage <> <AAH_off> and 
\par                            a in set active_axes and
\par                            (hcm_cmd.rot(a) = <Zero> or 
\par                             a in set ignore_hcm))\};
\par        ignore_hcm:= \{a | a in set AUXIL`rot_axis_set & 
\par                          (starting and hcm_cmd.rot(a) <> <Zero>) or 
\par                          (not starting and a in set ignore_hcm)\};
\par        timeout:= if toggle = <AAH_on> and engage = <pressed_once>
\par                  then clock + click_timeout
\par                  else timeout;
\par        toggle:= engage);
\par 
\par   ActiveAxes: () ==> set of AUXIL`RotAxis
\par   ActiveAxes() == return active_axes;
\par 
\par   IgnoreHcm: () ==> set of AUXIL`RotAxis
\par   IgnoreHcm() == return ignore_hcm;
\par 
\par   Toggle: () ==> EngageState
\par   Toggle() == return toggle
\par 
\par functions
\par 
\par   AllAxesOff: set of AUXIL`RotAxis +> bool
\par   AllAxesOff(active) == active = \{\};
\par }\pard\plain \s20\qj\nowidctlpar\widctlpar\adjustright \f2\fs20\lang2057\cgrid {
\par }\pard\plain \s19\qj\sa160\nowidctlpar\widctlpar\adjustright \fs22\lang2057\cgrid {\fs24 On each frame, the sampled value of the AAH engag
e button is checked to determine whether AAH is engaging or disengaging. This function models the AAH engagement state diagram. ButtonTransition performs a transition from the given engaged state to a new one based on the control button pressed on the han
d controller module.
\par }\pard\plain \s15\nowidctlpar\widctlpar\adjustright \shading2000 \f2\fs20\lang1024\cgrid {  ButtonTransition: EngageState * HCM`ControlButton * 
\par                     set of AUXIL`RotAxis * nat * nat +> EngageState
\par   ButtonTransition(estate,button,active,clock,timeout) ==
\par     cases mk_(estate,button) :
\par       mk_(<AAH_off>,<Up>)         -> <AAH_off>,
\par       mk_(<AAH_off>,<Down>)       -> <AAH_started>,
\par       mk_(<AAH_started>,<Up>)     -> <AAH_on>,
\par       mk_(<AAH_started>,<Down>)   -> <AAH_started>,
\par       mk_(<AAH_on>,<Up>)          -> if AllAxesOff(active)
\par                                      then <AAH_off>
\par                                      else <AAH_on>,
\par       mk_(<AAH_on>,<Down>)        -> <pressed_once>,
\par       mk_(<pressed_once>,<Up>)    -> <AAH_closing>,
\par       mk_(<pressed_once>,<Down>)  -> <pressed_once>,
\par       mk_(<AAH_closing>,<Up>)     -> if AllAxesOff(active)
\par                                      then <AAH_off>
\par                                      elseif clock > timeout
\par                                      then <AAH_on>
\par                                      else <AAH_closing>,
\par       mk_(<AAH_closing>,<Down>)   -> <pressed_twice>,
\par       mk_(<pressed_twice>,<Up>)   -> <AAH_off>,
\par       mk_(<pressed_twice>,<Down>) -> <pressed_twice>
\par     end;
\par 
\par end AAH
\par }\pard\plain \s19\qj\sa160\nowidctlpar\widctlpar\adjustright \fs22\lang2057\cgrid {\lang1030 
\par The Test coverage table for the AAH module looks like:
\par }\pard\plain \s18\nowidctlpar\widctlpar\adjustright \shading2000 \f2\fs20\lang1024\cgrid {AAH
\par }\pard\plain \s20\qj\nowidctlpar\widctlpar\adjustright \f2\fs20\lang2057\cgrid {
\par 
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \fs20\cgrid {\lang1030 
\par }}