{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman{\*\falt Times New Roman};}{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f6\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Courier{\*\falt Courier New};}{\f39\froman\fcharset238\fprq2 Times New Roman CE{\*\falt Times New Roman};}{\f40\froman\fcharset204\fprq2 Times New Roman Cyr{\*\falt Times New Roman};}
{\f42\froman\fcharset161\fprq2 Times New Roman Greek{\*\falt Times New Roman};}{\f43\froman\fcharset162\fprq2 Times New Roman Tur{\*\falt Times New Roman};}{\f44\froman\fcharset186\fprq2 Times New Roman Baltic{\*\falt Times New Roman};}
{\f51\fmodern\fcharset238\fprq1 Courier New CE;}{\f52\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f54\fmodern\fcharset161\fprq1 Courier New Greek;}{\f55\fmodern\fcharset162\fprq1 Courier New Tur;}{\f56\fmodern\fcharset186\fprq1 Courier New Baltic;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;
\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\nowidctlpar\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}{
\s15\nowidctlpar\widctlpar\adjustright \shading2000 \f2\fs20\lang1024\cgrid \snext15 VDM;}{\*\cs16 \additive \f6\chshdng2000\chcfpat0\chcbpat0 \sbasedon10 VDM_COV;}{\*\cs17 \additive \f6\cf6\chshdng2000\chcfpat0\chcbpat0 \sbasedon10 VDM_NCOV;}{
\s18\nowidctlpar\widctlpar\adjustright \shading2000 \f2\fs20\lang1024\cgrid \sbasedon15 \snext18 VDM_TC_TABLE;}{\s19\nowidctlpar\widctlpar\adjustright \f2\fs20\cgrid \sbasedon0 \snext19 Plain Text;}}{\info{\title module WorkSpace}
{\author Peter Gorm Larsen}{\operator Peter Gorm Larsen}{\creatim\yr2000\mo10\dy26\hr10\min29}{\revtim\yr2000\mo10\dy26\hr10\min29}{\version1}{\edmins0}{\nofpages2}{\nofwords363}{\nofchars2074}{\*\company IFAD}{\nofcharsws2547}{\vern71}}
\paperw11909\paperh16834\margl1153\margr1154 \widowctrl\ftnbj\aenddoc\formshade\viewkind4\viewscale100\pgbrdrhead\pgbrdrfoot \fet0{\*\template C:\\Programmer\\Microsoft Office\\Templates\\VDM.dot}\sectd 
\psz9\linex0\headery709\footery709\colsx709\endnhere\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}
{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s15\nowidctlpar\widctlpar\adjustright \shading2000 \f2\fs20\lang1024\cgrid {
module WorkSpace
\par 
\par imports from SAFER all,
\par         from HCM all,
\par         from TS all,
\par         from AUXIL all
\par 
\par exports all
\par 
\par definitions
\par 
\par types 
\par 
\par Input = seq of nat
\par inv inp == len inp = 9;
\par 
\par ThrusterMatrix = seq of seq of bool
\par inv tm == len tm = 4 and forall i in set inds tm & len tm(i) = 6
\par 
\par functions
\par 
\par RunControlCycle: Input -> ThrusterMatrix
\par RunControlCycle (input) ==
\par   let mk_(swpos, hgpos, rcom) = TransformInput (input) in
\par   let ts = SAFER`ControlCycle (swpos, hgpos, rcom) in
\par   GenerateThrusterMatrix (ts);
\par 
\par TransformInput: Input -> HCM`SwitchPositions * HCM`HandGripPosition * AUXIL`RotCommand
\par TransformInput (input) ==
\par   let [mode,aah,horiz,trans,vert,twist,roll,pitch,yaw] = input in
\par   let swpos = mk_HCM`SwitchPositions(
\par                      if mode = 1 then <Tran> else <Rot>,
\par                      if aah = 0 then <Up> else <Down> ),
\par       hgpos = mk_HCM`HandGripPosition(
\par                      ConvertAxisCmd(vert),
\par                      ConvertAxisCmd(horiz),
\par                      ConvertAxisCmd(trans),
\par                      ConvertAxisCmd(twist) ),
\par       rcom  = \{ <Roll> |-> ConvertAxisCmd(roll), 
\par                 <Pitch> |-> ConvertAxisCmd(pitch),
\par                 <Yaw> |-> ConvertAxisCmd(yaw) \} in
\par   mk_(swpos, hgpos, rcom);
\par 
\par ConvertAxisCmd: nat -> AUXIL`AxisCommand
\par ConvertAxisCmd(n) ==
\par   cases n:
\par     0 -> <Neg>,
\par     1 -> <Pos>,
\par     2 -> <Zero>,
\par     others -> undefined
\par   end;
\par 
\par GenerateThrusterMatrix: TS`ThrusterSet +> ThrusterMatrix
\par GenerateThrusterMatrix (ts) ==
\par   let tson = \{ GenerateThrusterLabel (t) | t in set ts \} in
\par   [ [ mk_(j,i) in set tson | i in set \{1,...,6\} ]
\par     | j in set \{1,...,4\} ];
\par 
\par GenerateThrusterLabel: TS`ThrusterName +> nat * nat
\par GenerateThrusterLabel (tnm) ==
\par   cases tnm:
\par      <B1>  -> mk_(1,4),
\par      <B2>  -> mk_(2,4),
\par      <B3>  -> mk_(4,4),
\par      <B4>  -> mk_(3,4),
\par      <F1>  -> mk_(1,1),
\par      <F2>  -> mk_(2,1),
\par      <F3>  -> mk_(4,1),
\par      <F4>  -> mk_(3,1),
\par      <L1R> -> mk_(1,2),
\par      <L1F> -> mk_(1,3),
\par      <R2R> -> mk_(2,2),
\par      <R2F> -> mk_(2,3),
\par      <L3R> -> mk_(4,2),
\par      <L3F> -> mk_(4,3),
\par      <R4R> -> mk_(3,2),
\par      <R4F> -> mk_(3,3),
\par      <D1R> -> mk_(1,6),
\par      <D1F> -> mk_(1,5),
\par      <D2R> -> mk_(2,6),
\par      <D2F> -> mk_(2,5),
\par      <U3R> -> mk_(4,6),
\par      <U3F> -> mk_(4,5),
\par      <U4R> -> mk_(3,6),
\par      <U4F> -> mk_(3,5)
\par    end;
\par 
\par values
\par 
\par switchpos = mk_HCM`SwitchPositions (<Tran>,<Down>);
\par handgrippos = mk_HCM`HandGripPosition (<Zero>,<Pos>,<Zero>,<Zero>);
\par rotcomm = \{ <Roll> |-> <Zero>, <Pitch> |-> <Zero>, <Yaw> |-> <Zero> \}
\par 
\par end WorkSpace
\par }\pard\plain \s19\nowidctlpar\widctlpar\adjustright \f2\fs20\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \fs20\cgrid {
\par }{\lang1030 
\par }}