\documentclass{article}
\usepackage{vdmsl-2e}
\usepackage{a4wide}

\title{A Telephone Exchange Specification in VDM-SL}
\author{Bernhard K. Aichernig}
\date{November 1998}

\begin{document}
\maketitle
The following example has been taken out of \cite{Abrial96} and has been 
translated from the B-notation into VDM-SL\cite{Fitzgerald&98, Jones90}. It
demonstrates how an event-based system may be modeled using the
specification language of the Vienna Development Method. In the following, 
operations specify the events which can be initiated either by  the system or 
by a subscriber (user). An implicit style using pre- and post-conditions has 
been chosen, in order to model the system's state transitions.

The model of the telephone
exchange is centred around a set of $subscribers$ who may be engaged in
telephone conversations through a network controlled by an exchange.
\section{Informal Specification}
As the communication between two subscribers is not installed immediately,
each subscriber navigates through a variety of statuses, which we study in
detail in what follows.
\begin{description}
\item[Free Subscribers] A subscriber might be free ($FR$),
meaning that he is not engaged in any telephone conversation or attempting to 
do so.
\item[Unavailable Subscribers] A subscriber who is temporarily unavailable
($UN$). Subscribers may enter this status as a result of a spontaneous 
decision on the part of the exchange. This happens when a subscriber has been
attempting to call another subscriber unsuccessfully for too long a period of
time. We may also enter this status at the end of some conversation between
two subscribers.
\item[Initiators or Recipients] Non-free and non-unavailable subscribers are
either initiators or recipients of telephone calls. An initiator is the only
one able to terminate a telephone conversation. By contrast, a recipient
hanging up just suspends the conversation, which may be resumed as soon as 
he again lifts his handset.
\item[Attempting, Waiting or Speaking Initiators]
An initiator may enter into various sub-states: he might be attempting ($AI$)
to call somebody (e.g. dialing), or waiting $WI$ for somebody to answer 
(connection established and the phone rings), or finally 
speaking $SI$ to somebody.
\item[Waiting or Speaking Recipients] A recipient might be speaking ($SR$) or
waiting ($WR$), because his own telephone is ringing, or because he has 
suspended an already engaged telephone conversation.   
\end{description}
\section{The Formal Specification}
\subsection{Types}
\begin{vdm_al}
module EXCH
definitions
 types
   Subscriber = token;

   Initiator =  <AI> | <WI> | <SI>;

   Recipient = <WR> | <SR>;

   Status = <fr> | <un> | Initiator | Recipient;
\end{vdm_al}
\subsection{The System State and Events} 

\begin{vdm_al}
 state Exchange of
   status: map Subscriber to Status
   calls:  inmap Subscriber to Subscriber
 inv mk_Exchange(status, calls) == 
    forall i in set dom calls & 
       (status(i) = <WI> and status(calls(i)) = <WR>) 
       or
       (status(i) = <SI> and status(calls(i)) = <SR>)
 end

\end{vdm_al}

This invariant formalizes the fact that, in this telephone exchange, telephone
conversions are between two subscribers only (that is, we have no conference
calls). Furthermore a call between two subscribers is established if the two
are waiting in order to speak or both are speaking.


In the following the possible events of the exchange are specified.
\subsubsection{Lift}
The event $Lift$ is caused by a free subscriber lifting his handset. He thus
becomes an attempting initiator with status $AI$.

\begin{vdm_al}

operations

  Lift(s: Subscriber)
  ext wr status
  pre s in set dom (status :> {<fr>})
-- pre s in set dom status and status(s) = <fr>
  post status = status~ ++ {s |-> <AI>};
\end{vdm_al}
\subsubsection{Connect}
The event Connect is caused by a spontaneous activity of the exchange which,
connects an attempting initiator to a free subscriber. This two subscribers
become respectively a waiting initiator and a waiting recipient (whose 
telephone starts to ring).
\begin{vdm_al}
  Connect(i: Subscriber, r: Subscriber)
  ext wr status
      wr calls
  pre i in set dom (status :> {<AI>}) and
      r in set dom (status :> {<fr>})
  post status = status~ ++ {i |-> <WI>, r |-> <WR>} and
       calls = calls~ ++ {i |-> r};
\end{vdm_al}

\subsubsection{MakeUn}
The event MakeUn is also caused by a spontaneous activity of the exchange
which decides to punish an attempting initiator who has seized a line for too
long a period of time without succeeding in connecting to another subscriber.

\begin{vdm_al}
  MakeUn(i: Subscriber)
  ext wr status
  pre i in set dom (status :> {<AI>}) 
  post status = status~ ++ {i |-> <un>};
\end{vdm_al}

\subsubsection{Answer}
The event Answer is caused by a waiting recipient lifting his handset: he
might do so because his telephone is ringing or, spontaneously, after he has
temporarily suspended an already engaged telephone conversation.

\begin{vdm_al}
  Answer(r: Subscriber)    
  ext rd calls
      wr status
  pre r in set dom (status :> {<WR>}) 
  post status = status~ ++ {r |-> <SR>, (inverse calls)(r) |-> <SI>};  
\end{vdm_al}

\subsubsection{ClearAttempt, ClearWait, ClearSpeak}
These events clears a telephone conversation and are  caused by an
initiator who hangs up. 

After all three events the initiator reenters the status $fr$. In the second
and third cases, there exists a corresponding recipient who enters the status
$fr$ (if he is waiting) or $un$ (if he is speaking).
\begin{vdm_al}
  ClearAttempt(i: Subscriber)
  ext wr status
  pre  i in set dom (status :> {<AI>}) 
  post status = status~ ++ {i |-> <fr>};
\end{vdm_al}


\begin{vdm_al}
  ClearWait(i: Subscriber)
  ext wr status
      wr calls
  pre  i in set dom (status :> {<WI>}) 
  post status = status~ ++ {i |-> <fr>, calls(i) |-> <fr>} and
       calls =  {i} <-: calls~;
\end{vdm_al}


\begin{vdm_al}
  ClearSpeak(i: Subscriber)
  ext wr status
      wr calls
  pre  i in set dom (status :> {<SI>}) 
  post status = status~ ++ {i |-> <fr>, calls(i) |-> <un>} and
       calls =  {i} <-: calls~;
 \end{vdm_al}
\subsubsection{Suspend}
When a speaking recipient hangs up, the corresponding event is called Suspend
because, the conversation is only suspended. In fact, both our recipient and
his corresponding initiator enter a waiting status. As can be seen, we reach
exactly the same situation as was the case after the Connect event, the only
difference being that, this time, the recipient's telephone is not ringing. 
\begin{vdm_al}
  Suspend(r: Subscriber)
  ext rd calls
      wr status
  pre r in set dom (status :> {<SR>}) 
  post status = status~ ++ {r |-> <WR>, (inverse calls)(r) |-> <WI>};
\end{vdm_al}
\subsubsection{ClearUn}
The last event to consider is the one by which an unavailable subscriber
hangs up. The subscriber becomes free again.
\begin{vdm_al}
  ClearUn(s: Subscriber)
  ext wr status
  pre s in set dom (status :> {<un>})
  post  status = status~ ++ {s |-> <fr>}

end EXCH  
\end{vdm_al}
\section{Typical Scenarios}
Finally, some typical sequences of valid events are listed:\\ \\
Lift $\longrightarrow$ ClearAttempt \\
\\
Lift $\longrightarrow$ MakeUn $\longrightarrow$ ClearUn \\
\\
Lift $\longrightarrow$ Connect $\longrightarrow$ ClearWait\\
\\
Lift $\longrightarrow$ Connect $\longrightarrow$ Answer $\longrightarrow$ ClearSpeak $\longrightarrow$ ClearUn\\
\\
Lift $\longrightarrow$ Connect $\longrightarrow$ Answer $\longrightarrow$ Suspend $\longrightarrow$ ClearWait
\bibliographystyle{plain}
\bibliography{telephone}
\end{document}