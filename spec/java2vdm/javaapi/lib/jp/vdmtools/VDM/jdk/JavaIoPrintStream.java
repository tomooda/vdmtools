//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Tue 30-Oct-2001 by the VDM++ JAVA Code Generator
// (v6.7.19 - Mon 29-Oct-2001)
//
// Supported compilers:
// jdk1.3
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO

// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package jp.vdmtools.VDM.jdk;

// ***** VDMTOOLS END Name=package


// ***** VDMTOOLS START Name=imports KEEP=NO

import jp.vdmtools.VDM.CGException;
import jp.vdmtools.VDM.UTIL;
import jp.vdmtools.VDM.VDMSpecException;

import java.util.HashMap;
import java.util.HashSet;

// ***** VDMTOOLS END Name=imports


public class JavaIoPrintStream extends JavaIoFilterOutputStream {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
    static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=autoFlush KEEP=NO
    private Boolean autoFlush = null;
// ***** VDMTOOLS END Name=autoFlush

// ***** VDMTOOLS START Name=trouble KEEP=NO
    private Boolean trouble = null;
// ***** VDMTOOLS END Name=trouble

// ***** VDMTOOLS START Name=textOut KEEP=NO
    private JavaIoBufferedWriter textOut = null;
// ***** VDMTOOLS END Name=textOut

// ***** VDMTOOLS START Name=charOut KEEP=NO
    private JavaIoOutputStreamWriter charOut = null;
// ***** VDMTOOLS END Name=charOut

// ***** VDMTOOLS START Name=closing KEEP=NO
    private Boolean closing = null;
// ***** VDMTOOLS END Name=closing


// ***** VDMTOOLS START Name=JavaIoPrintStream KEEP=NO
    public JavaIoPrintStream() throws CGException {
    }
// ***** VDMTOOLS END Name=JavaIoPrintStream


// ***** VDMTOOLS START Name=close KEEP=NO
    public void close() throws CGException {
        if (new Boolean(!closing.booleanValue()).booleanValue()) {
            closing = (Boolean) UTIL.clone(new Boolean(true));
            {
                textOut.close();
                out.close();
            }
            textOut = (JavaIoBufferedWriter) UTIL.clone(new JavaIoBufferedWriter(new quotes.NIL()));
            charOut = (JavaIoOutputStreamWriter) UTIL.clone(new JavaIoOutputStreamWriter(new quotes.NIL()));
        }
    }
// ***** VDMTOOLS END Name=close


// ***** VDMTOOLS START Name=flush KEEP=NO
    public void flush() throws CGException {
        ensureOpen();
        out.flush();
    }
// ***** VDMTOOLS END Name=flush


// ***** VDMTOOLS START Name=print KEEP=NO
    public void print(final Object b) throws CGException {
        boolean succ_2 = true;
        {
            succ_2 = true;
            if (!UTIL.equals(new Boolean(true), new Boolean((b instanceof Boolean))))
                succ_2 = false;
            if (succ_2) {
                JavaLangString t = new JavaLangString(new String("true"));
                JavaLangString f = new JavaLangString(new String("false"));
                JavaLangString r = null;
                if (((Boolean) b).booleanValue())
                    r = (JavaLangString) t;
                else
                    r = (JavaLangString) f;
                writeStr((JavaLangString) r);
            } else {
                succ_2 = true;
                if (!UTIL.equals(new Boolean(true), new Boolean((b instanceof Character))))
                    succ_2 = false;
                if (succ_2) {
                    Character c = (Character) b;
                    Integer tmpArg_v_43 = null;
                    tmpArg_v_43 = J2VUTIL.toInt(c);
                    write(tmpArg_v_43);
                } else {
                    succ_2 = true;
                    if (!UTIL.equals(new Boolean(true), new Boolean(UTIL.IsInteger(b))))
                        succ_2 = false;
                    if (succ_2) {
                        Integer i = UTIL.NumberToInt(b);
                        JavaLangString tmpArg_v_35 = new JavaLangInteger(i).vdm_toString();
                        writeStr((JavaLangString) tmpArg_v_35);
                    } else {
                        succ_2 = true;
                        if (!UTIL.equals(new Boolean(true), new Boolean(UTIL.IsReal(b))))
                            succ_2 = false;
                        if (succ_2) {
                            Double r = UTIL.NumberToReal(b);
                            JavaLangString tmpArg_v_27 = null;
                            tmpArg_v_27 = (JavaLangString) JavaLangString.valueOf(r);
                            writeStr((JavaLangString) tmpArg_v_27);
                        } else {
                            succ_2 = true;
                            Boolean tmpVal_v_7 = null;
                            tmpVal_v_7 = new Boolean(b instanceof JavaLangObject);
                            if (!UTIL.equals(new Boolean(true), tmpVal_v_7))
                                succ_2 = false;
                            if (succ_2) {
                                Boolean cond_9 = null;
                                cond_9 = new Boolean(b instanceof JavaLangString);
                                if (cond_9.booleanValue()) {
                                    JavaLangString s = (JavaLangString) b;
                                    Boolean cond_19 = null;
                                    cond_19 = s.IsNil();
                                    if (cond_19.booleanValue())
                                        s = (JavaLangString) UTIL.clone(new JavaLangString(new String("null")));
                                    writeStr((JavaLangString) s);
                                } else {
                                    Object tmpVal_12 = null;
                                    tmpVal_12 = b;
                                    JavaLangObject o = null;
                                    o = (JavaLangObject) tmpVal_12;
                                    JavaLangString tmpArg_v_14 = null;
                                    tmpArg_v_14 = (JavaLangString) JavaLangString.valueOf(o);
                                    writeStr((JavaLangString) tmpArg_v_14);
                                }
                            } else {
                                HashMap m = (HashMap) b;
                                writeMIC(m);
                            }
                        }
                    }
                }
            }
        }
    }
// ***** VDMTOOLS END Name=print


// ***** VDMTOOLS START Name=write KEEP=NO
    public void write(final Integer b) throws CGException {
        try {
            ensureOpen();
            throw new VDMSpecException(new JavaIoIOException());
        } catch (VDMSpecException exc_2) {
            if (exc_2.getValue() instanceof JavaLangException) {
                JavaLangException j2v_uexception = (JavaLangException) exc_2.getValue();
                boolean succ_3 = true;
                {
                    succ_3 = true;
                    Boolean tmpVal_v_7 = null;
                    {
                        if ((tmpVal_v_7 = new Boolean(j2v_uexception instanceof JavaIoIOException)).booleanValue()) {
                            Boolean var2_10 = null;
                            Boolean unArg_11 = null;
                            unArg_11 = j2v_uexception.IsNil();
                            var2_10 = new Boolean(!unArg_11.booleanValue());
                            tmpVal_v_7 = var2_10;
                        }
                    }
                    if (!UTIL.equals(new Boolean(true), tmpVal_v_7))
                        succ_3 = false;
                    if (succ_3) {
                        JavaIoIOException x = (JavaIoIOException) j2v_uexception;
                        trouble = (Boolean) UTIL.clone(new Boolean(true));
                    } else
                        throw new VDMSpecException(j2v_uexception);
                }
            } else {
                UTIL.RunTime("Run-Time Error:Pattern match failed on exception value");
                return;
            }
        }
    }
// ***** VDMTOOLS END Name=write


// ***** VDMTOOLS START Name=newLine KEEP=NO
    private void newLine() throws CGException {
        ensureOpen();
        textOut.newLine();
        textOut.flushBuffer();
        charOut.flushBuffer();
        if (autoFlush.booleanValue())
            out.flush();
    }
// ***** VDMTOOLS END Name=newLine


// ***** VDMTOOLS START Name=println KEEP=NO
    public void println() throws CGException {
        newLine();
    }
// ***** VDMTOOLS END Name=println


// ***** VDMTOOLS START Name=println KEEP=NO
    public void println(final Object x) throws CGException {
        print(x);
        newLine();
    }
// ***** VDMTOOLS END Name=println


// ***** VDMTOOLS START Name=setError KEEP=NO
    protected void setError() throws CGException {
        trouble = (Boolean) UTIL.clone(new Boolean(true));
    }
// ***** VDMTOOLS END Name=setError


// ***** VDMTOOLS START Name=checkError KEEP=NO
    public Boolean checkError() throws CGException {
        Boolean cond_1 = null;
        Boolean unArg_2 = null;
        unArg_2 = out.IsNil();
        cond_1 = new Boolean(!unArg_2.booleanValue());
        if (cond_1.booleanValue())
            flush();
        return trouble;
    }
// ***** VDMTOOLS END Name=checkError


// ***** VDMTOOLS START Name=ensureOpen KEEP=NO
    private void ensureOpen() throws CGException {
        ;
    }
// ***** VDMTOOLS END Name=ensureOpen


// ***** VDMTOOLS START Name=writeMIC KEEP=NO
    private void writeMIC(final HashMap buf) throws CGException {
        ensureOpen();
        textOut.write(buf);
        textOut.flushBuffer();
        charOut.flushBuffer();
        if (autoFlush.booleanValue()) {
            Integer i = new Integer(0);
            while (true) {
                Boolean whCrtl_8 = null;
                Integer var2_10 = null;
                HashSet unArg_11 = new HashSet();
                unArg_11.clear();
                unArg_11.addAll(buf.keySet());
                var2_10 = new Integer(unArg_11.size());
                whCrtl_8 = new Boolean((i.intValue()) < (var2_10.intValue()));
                if (whCrtl_8.booleanValue()) {
                    if (new Boolean(UTIL.equals((Character) buf.get(i), new Character('\n'))).booleanValue())
                        out.flush();
                    i = UTIL.NumberToInt(UTIL.clone(new Integer(i.intValue() + new Integer(1).intValue())));
                } else
                    break;
            }
        }
    }
// ***** VDMTOOLS END Name=writeMIC


// ***** VDMTOOLS START Name=writeStr KEEP=NO
    private void writeStr(final JavaLangString s) throws CGException {
        ensureOpen();
        textOut.writeStr((JavaLangString) s);
        textOut.flushBuffer();
        charOut.flushBuffer();
        Boolean cond_7 = null;
        {
            if ((cond_7 = autoFlush).booleanValue()) {
                Boolean var2_9 = null;
                Integer var1_10 = null;
                Object tmpGen_11 = null;
                Integer par_14 = null;
                par_14 = J2VUTIL.toInt(new Character('\n'));
                {
                    Integer par_16 = null;
                    par_16 = J2VUTIL.toInt(new Character('\n'));
                    var1_10 = UTIL.NumberToInt(s.indexOf(par_16));
                }
                var2_9 = new Boolean((var1_10.intValue()) >= (new Integer(0).intValue()));
                cond_7 = var2_9;
            }
        }
        if (cond_7.booleanValue())
            out.flush();
    }
// ***** VDMTOOLS END Name=writeStr


// ***** VDMTOOLS START Name=write KEEP=NO
    public void write(final HashMap buf, final Integer off, final Integer len_u_u) throws CGException {
        ensureOpen();
        out.write2(buf, off, len_u_u);
        if (autoFlush.booleanValue())
            out.flush();
    }
// ***** VDMTOOLS END Name=write


// ***** VDMTOOLS START Name=JavaIoPrintStream KEEP=NO
    public JavaIoPrintStream(final JavaIoOutputStream out, final Boolean autoFlush_1) throws CGException {
        super((JavaIoOutputStream) out);
        ((JavaIoPrintStream) this).autoFlush = (Boolean) UTIL.clone(autoFlush_1);
        ((JavaIoPrintStream) this).trouble = (Boolean) UTIL.clone(new Boolean(false));
        ((JavaIoPrintStream) this).closing = (Boolean) UTIL.clone(new Boolean(false));
        ((JavaIoPrintStream) this).charOut = (JavaIoOutputStreamWriter) UTIL.clone(new JavaIoOutputStreamWriter(this));
        ((JavaIoPrintStream) this).textOut = (JavaIoBufferedWriter) UTIL.clone(new JavaIoBufferedWriter(((JavaIoPrintStream) this).charOut));
    }
// ***** VDMTOOLS END Name=JavaIoPrintStream

}

;
