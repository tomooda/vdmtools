//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Tue 30-Oct-2001 by the VDM++ JAVA Code Generator
// (v6.7.19 - Mon 29-Oct-2001)
//
// Supported compilers:
// jdk1.3
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO

// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package jp.vdmtools.VDM.jdk;

// ***** VDMTOOLS END Name=package


// ***** VDMTOOLS START Name=imports KEEP=NO

import jp.vdmtools.VDM.CGException;
import jp.vdmtools.VDM.UTIL;
import jp.vdmtools.VDM.VDMSpecException;

import java.io.StringWriter;
import java.io.IOException;
import java.util.HashMap;

// ***** VDMTOOLS END Name=imports


public class JavaIoStringWriter extends JavaIoWriter {

    private StringWriter wrappedObject;



// ***** VDMTOOLS START Name=close KEEP=NO
    public void close() throws CGException {
        try {
            wrappedObject.close();
        }
        catch (IOException e) {
            throw new VDMSpecException(new JavaIoIOException());
        }
    }
// ***** VDMTOOLS END Name=close


// ***** VDMTOOLS START Name=flush KEEP=NO
    public void flush() throws CGException {
        wrappedObject.flush();
    }
// ***** VDMTOOLS END Name=flush


// ***** VDMTOOLS START Name=write KEEP=NO
    public void write(final Integer c) throws CGException {
        wrappedObject.write(c.intValue());
    }
// ***** VDMTOOLS END Name=write


// ***** VDMTOOLS START Name=toString KEEP=NO
    public JavaLangString toJString() throws CGException {
        return new JavaLangString(wrappedObject.toString());
    }
// ***** VDMTOOLS END Name=toString


// ***** VDMTOOLS START Name=getBuffer KEEP=NO
    public JavaLangStringBuffer getBuffer() throws CGException {
        return new JavaLangStringBuffer(wrappedObject.getBuffer());
    }
// ***** VDMTOOLS END Name=getBuffer


// ***** VDMTOOLS START Name=JavaIoStringWriter KEEP=NO
    public JavaIoStringWriter() throws CGException {
        ;
    }
// ***** VDMTOOLS END Name=JavaIoStringWriter


// ***** VDMTOOLS START Name=JavaIoStringWriter KEEP=NO
    public JavaIoStringWriter(final Integer initialSize) throws CGException {
        this();
        ;
    }
// ***** VDMTOOLS END Name=JavaIoStringWriter


// ***** VDMTOOLS START Name=write KEEP=NO
    public void write(final JavaLangString str) throws CGException {
        wrappedObject.write(str.getWrappedObject());
    }
// ***** VDMTOOLS END Name=write

    public void writeICMIntInt(final HashMap cbuf, final Integer off, final Integer len_u_u) throws CGException
    {
	write(cbuf, off, len_u_u);
    } 
// ***** VDMTOOLS START Name=write KEEP=NO
    public void write(final HashMap cbuf, final Integer off, final Integer len_u_u) throws CGException {
        char chbuf[] = new char[cbuf.size()];
        for (int i = 0; i < cbuf.size(); i++)
        {
            chbuf[i] = (char) ((Integer )cbuf.get(new Integer(i))).intValue();
        }
        wrappedObject.write(chbuf, off.intValue(), len_u_u.intValue());
    }
// ***** VDMTOOLS END Name=write


// ***** VDMTOOLS START Name=JavaIoStringWriter KEEP=NO
    public JavaIoStringWriter(final quotes.NIL var_1_1) throws CGException {
        this();
        isNil = (Boolean) UTIL.clone(new Boolean(true));
    }
// ***** VDMTOOLS END Name=JavaIoStringWriter


// ***** VDMTOOLS START Name=write KEEP=NO
    public void write(final JavaLangString str, final Integer off, final Integer len_u_u) throws CGException {
        wrappedObject.write(str.getWrappedObject(), off.intValue(), len_u_u.intValue());
    }
// ***** VDMTOOLS END Name=write

}

;
