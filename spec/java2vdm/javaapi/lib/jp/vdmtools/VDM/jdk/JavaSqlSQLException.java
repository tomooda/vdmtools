//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Tue 30-Oct-2001 by the VDM++ JAVA Code Generator
// (v6.7.19 - Mon 29-Oct-2001)
//
// Supported compilers:
// jdk1.3
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO

// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package jp.vdmtools.VDM.jdk;

// ***** VDMTOOLS END Name=package


// ***** VDMTOOLS START Name=imports KEEP=NO

import jp.vdmtools.VDM.CGException;
import jp.vdmtools.VDM.UTIL;

import java.sql.SQLException;

// ***** VDMTOOLS END Name=imports


public class JavaSqlSQLException extends JavaLangException {


    static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();

    private JavaLangString reason = null;

    private JavaLangString SQLState = null;

    private Integer vendorCode = null;

    private static final JavaLangClass CLASS = (JavaLangClass) new JavaLangClass(new String("JavaSqlSQLException"), new quotes.CLASS(), new Boolean(false));

    public JavaLangClass getJClass() throws CGException {
        return (JavaLangClass) CLASS;
    }

    public JavaLangString getSQLState() throws CGException {
        return (JavaLangString) SQLState;
    }

    public JavaSqlSQLException() throws CGException {
        ;
    }

    public Integer getErrorCode() throws CGException {
        return vendorCode;
    }

    public JavaSqlSQLException(final quotes.NIL var_1_1) throws CGException {
        this();
        isNil = (Boolean) UTIL.clone(new Boolean(true));
    }

    public JavaSqlSQLException(final JavaLangString reason_1) throws CGException {
        super(reason_1);

    }

    public JavaSqlSQLException(final JavaLangString reason_1, final JavaLangString SQLState_1)
            throws CGException
    {
        super(reason_1);
        ((JavaSqlSQLException) this).SQLState = (JavaLangString) UTIL.clone(SQLState_1);
    }

    public JavaSqlSQLException(final JavaLangString reason_1, final JavaLangString SQLState_1,
                               final Integer vendorCode_1)
            throws CGException
    {
        super(reason_1);
        ((JavaSqlSQLException) this).SQLState = (JavaLangString) UTIL.clone(SQLState_1);
        ((JavaSqlSQLException) this).vendorCode = UTIL.NumberToInt(UTIL.clone(vendorCode_1));
    }


    public JavaSqlSQLException(SQLException e) throws CGException
    {
        this(new JavaLangString(e.getMessage()),
             new JavaLangString(e.getSQLState()),
             new Integer(e.getErrorCode()));
    }

    public JavaSqlSQLException getNextException()
    {
	// This is "is not yet specified" in the spec, so must
	// therefore never be called; however it is needed for
	// compilation. 
	return null;
    }

}

;
