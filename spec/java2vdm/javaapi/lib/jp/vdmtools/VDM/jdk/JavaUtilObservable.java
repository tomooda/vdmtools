//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Tue 30-Oct-2001 by the VDM++ JAVA Code Generator
// (v6.7.19 - Mon 29-Oct-2001)
//
// Supported compilers:
// jdk1.3
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO

// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package jp.vdmtools.VDM.jdk;

// ***** VDMTOOLS END Name=package


// ***** VDMTOOLS START Name=imports KEEP=NO

import jp.vdmtools.VDM.CGException;
import jp.vdmtools.VDM.UTIL;

import java.util.HashMap;
import java.util.HashSet;

// ***** VDMTOOLS END Name=imports


public class JavaUtilObservable extends JavaLangObject {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
    static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=changed KEEP=NO
    private Boolean changed = null;
// ***** VDMTOOLS END Name=changed

// ***** VDMTOOLS START Name=obs KEEP=NO
    private JavaUtilVector obs = null;
// ***** VDMTOOLS END Name=obs


// ***** VDMTOOLS START Name=JavaUtilObservable KEEP=NO
    public JavaUtilObservable() throws CGException {
        obs = new JavaUtilVector();
    }
// ***** VDMTOOLS END Name=JavaUtilObservable


// ***** VDMTOOLS START Name=hasChanged KEEP=NO
    public Boolean hasChanged() throws CGException {
        return changed;
    }
// ***** VDMTOOLS END Name=hasChanged


// ***** VDMTOOLS START Name=setChanged KEEP=NO
    protected void setChanged() throws CGException {
        changed = (Boolean) UTIL.clone(new Boolean(true));
    }
// ***** VDMTOOLS END Name=setChanged


// ***** VDMTOOLS START Name=clearChanged KEEP=NO
    protected void clearChanged() throws CGException {
        changed = (Boolean) UTIL.clone(new Boolean(false));
    }
// ***** VDMTOOLS END Name=clearChanged


// ***** VDMTOOLS START Name=countObservers KEEP=NO
    public Integer countObservers() throws CGException {
        Integer rexpr_1 = null;
        rexpr_1 = obs.size();
        return rexpr_1;
    }
// ***** VDMTOOLS END Name=countObservers


// ***** VDMTOOLS START Name=JavaUtilObservable KEEP=NO
    public JavaUtilObservable(final quotes.NIL var_1_1) throws CGException {
        this();
        isNil = (Boolean) UTIL.clone(new Boolean(true));
    }
// ***** VDMTOOLS END Name=JavaUtilObservable


// ***** VDMTOOLS START Name=deleteObservers KEEP=NO
    public void deleteObservers() throws CGException {
        obs.removeAllElements();
    }
// ***** VDMTOOLS END Name=deleteObservers


// ***** VDMTOOLS START Name=notifyObservers KEEP=NO
    public void notifyObservers() throws CGException {
        notifyObservers((JavaLangObject) new JavaLangObject(new quotes.NIL()));
    }
// ***** VDMTOOLS END Name=notifyObservers


// ***** VDMTOOLS START Name=addObserver KEEP=NO
    public void addObserver(final JavaLangObject o) throws CGException {
        Boolean cond_2 = null;
        Boolean unArg_3 = null;
        unArg_3 = obs.contains((JavaLangObject) o);
        cond_2 = new Boolean(!unArg_3.booleanValue());
        if (cond_2.booleanValue())
            obs.addElement((JavaLangObject) o);
    }
// ***** VDMTOOLS END Name=addObserver


// ***** VDMTOOLS START Name=notifyObservers KEEP=NO
    public void notifyObservers(final JavaLangObject arg) throws CGException {
        HashMap arrLocal = new HashMap();
        if (new Boolean(!changed.booleanValue()).booleanValue())
            return;
        arrLocal = obs.toArray();
        clearChanged();
        Integer lb_9 = null;
        Integer var1_10 = null;
        HashSet unArg_11 = new HashSet();
        unArg_11.clear();
        unArg_11.addAll(arrLocal.keySet());
        var1_10 = new Integer(unArg_11.size());
        lb_9 = new Integer(var1_10.intValue() - new Integer(1).intValue());
        int iby_16 = new Integer(-new Integer(1).intValue()).intValue();
        if (iby_16 == 0)
            UTIL.RunTime("Run-Time Error:Step length in indexed for loop was 0");
        for (int ilb_15 = lb_9.intValue(); iby_16 < 0 ? ilb_15 >= 0 : ilb_15 <= 0; ilb_15 += iby_16) {
            Integer i = new Integer(ilb_15);
            {
                Nullable nullable = (Nullable) (JavaLangObject) arrLocal.get(i);
                {
                    Nullable tmpVal_24 = null;
                    tmpVal_24 = (Nullable) nullable;
                    JavaUtilObserver o = null;
                    o = (JavaUtilObserver) tmpVal_24;
                    o.update((JavaUtilObservable) this, (JavaLangObject) arg);
                }
            }
        }
    }
// ***** VDMTOOLS END Name=notifyObservers


// ***** VDMTOOLS START Name=deleteObserver KEEP=NO
    public void deleteObserver(final JavaLangObject o) throws CGException {
        Boolean tmpVal_3 = null;
        tmpVal_3 = obs.removeElement((JavaLangObject) o);
        ;
    }
// ***** VDMTOOLS END Name=deleteObserver

}

;
