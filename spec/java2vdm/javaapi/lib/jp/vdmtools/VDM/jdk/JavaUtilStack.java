//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Tue 30-Oct-2001 by the VDM++ JAVA Code Generator
// (v6.7.19 - Mon 29-Oct-2001)
//
// Supported compilers:
// jdk1.3
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO

// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package jp.vdmtools.VDM.jdk;

// ***** VDMTOOLS END Name=package


// ***** VDMTOOLS START Name=imports KEEP=NO

import jp.vdmtools.VDM.CGException;
import jp.vdmtools.VDM.UTIL;
import jp.vdmtools.VDM.VDMSpecException;

// ***** VDMTOOLS END Name=imports


public abstract class JavaUtilStack extends JavaUtilVector {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
    static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=serialVersionUID KEEP=NO
    private static Integer serialVersionUID = new Integer(0);
// ***** VDMTOOLS END Name=serialVersionUID

// ***** VDMTOOLS START Name=CLASS KEEP=NO
    private static final JavaLangClass CLASS = (JavaLangClass) new JavaLangClass(new String("JavaUtilStack"), new quotes.CLASS(), new Boolean(false));
// ***** VDMTOOLS END Name=CLASS


// ***** VDMTOOLS START Name=pop KEEP=NO
    public JavaLangObject pop() throws CGException {
        JavaLangObject obj = null;
        Integer len_u_u = size();
        obj = (JavaLangObject) UTIL.clone(peek());
        removeElementAt(new Integer(len_u_u.intValue() - new Integer(1).intValue()));
        return (JavaLangObject) obj;
    }
// ***** VDMTOOLS END Name=pop


// ***** VDMTOOLS START Name=peek KEEP=NO
    public JavaLangObject peek() throws CGException {
        Integer len_u_u = size();
        if (new Boolean(len_u_u.intValue() == new Integer(0).intValue()).booleanValue())
            throw new VDMSpecException(new JavaUtilEmptyStackException());
        return (JavaLangObject) (JavaLangObject) elementAt(new Integer(len_u_u.intValue() - new Integer(1).intValue()));
    }
// ***** VDMTOOLS END Name=peek


// ***** VDMTOOLS START Name=JavaUtilStack KEEP=NO
    public JavaUtilStack() throws CGException {
        ;
    }
// ***** VDMTOOLS END Name=JavaUtilStack


// ***** VDMTOOLS START Name=empty KEEP=NO
    public Boolean empty() throws CGException {
        return new Boolean(size().intValue() == new Integer(0).intValue());
    }
// ***** VDMTOOLS END Name=empty


// ***** VDMTOOLS START Name=getClass KEEP=NO
    public JavaLangClass getJClass() throws CGException {
        return (JavaLangClass) CLASS;
    }
// ***** VDMTOOLS END Name=getClass


// ***** VDMTOOLS START Name=JavaUtilStack KEEP=NO
    public JavaUtilStack(final quotes.NIL var_1_1) throws CGException {
        this();
        isNil = (Boolean) UTIL.clone(new Boolean(true));
    }
// ***** VDMTOOLS END Name=JavaUtilStack


// ***** VDMTOOLS START Name=push KEEP=NO
    public JavaLangObject push(final JavaLangObject item) throws CGException {
        addElement((JavaLangObject) item);
        return (JavaLangObject) item;
    }
// ***** VDMTOOLS END Name=push


// ***** VDMTOOLS START Name=search KEEP=NO
    public Integer search(final JavaLangObject o) throws CGException {
        Integer i = lastIndexOf((JavaLangObject) o);
        if (new Boolean((i.intValue()) >= (new Integer(0).intValue())).booleanValue())
            return new Integer(size().intValue() - i.intValue());
        return new Integer(-new Integer(1).intValue());
    }
// ***** VDMTOOLS END Name=search

}

;
