//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2011-05-26 by the VDM++ to JAVA Code Generator
// (v9.0.2b - Thu 26-May-2011 14:02:09)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=YES
// Implementation of the VDM standard IO library
// Use this file instead of the automatically generated IO.java file
// $Revision: 1.2 $
// $Date: 2005/05/11 06:45:49 $

// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=YES

import jp.vdmtools.VDM.UTIL;
import jp.vdmtools.VDM.Tuple;
import jp.vdmtools.VDM.CGException;
import java.io.FileWriter;
// ***** VDMTOOLS END Name=imports


public class IO {
// ***** VDMTOOLS START Name=error KEEP=YES
  // Variable to store potential error message that later can be retrieved by ferror
  private String error = "";
// ***** VDMTOOLS END Name=error

// ***** VDMTOOLS START Name=evaluatePP#1|int KEEP=YES
  public Boolean evaluatePP (int fnr) throws CGException {
    return new Boolean(true);
  }
// ***** VDMTOOLS END Name=evaluatePP#1|int

// ***** VDMTOOLS START Name=vdm_init_IO KEEP=YES
  private void vdm_init_IO () throws CGException {}
// ***** VDMTOOLS END Name=vdm_init_IO


// ***** VDMTOOLS START Name=IO KEEP=NO
  public IO () throws CGException {
    vdm_init_IO();
  }
// ***** VDMTOOLS END Name=IO


// ***** VDMTOOLS START Name=writeval#1|Object KEEP=YES
  public Boolean writeval (final Object val) throws CGException {
    try {
      System.out.println(UTIL.toString(val));
      return new Boolean(true);
    }
    catch (Exception e) {
      this.error = e.getMessage();
      return new Boolean(false);
    }
  }
// ***** VDMTOOLS END Name=writeval#1|Object


// ***** VDMTOOLS START Name=fwriteval#3|String|Object|Object KEEP=YES
  public Boolean fwriteval (final String filename, final Object val, final Object fdir) throws CGException {
    try {
      FileWriter fw = new FileWriter(filename, (fdir instanceof quotes.append));
      fw.write(UTIL.toString(val));
      fw.flush();
      fw.close();
      return new Boolean(true);
    }
    catch (Exception e) {
      this.error = e.getMessage();
      return new Boolean(false);
    }
  }
// ***** VDMTOOLS END Name=fwriteval#3|String|Object|Object


// ***** VDMTOOLS START Name=freadval#1|String KEEP=YES
  public Tuple freadval (final String f) throws CGException {
    try {
      return jp.vdmtools.VDM.ValueParser.ValueParser.ParseVDMValue(f);
    }
    catch (Exception e) {
      try {
        Tuple result = new Tuple(2);
        this.error = e.getMessage();
        result.SetField(1, new Boolean(false));
        result.SetField(2, this.error);
        return result;
      }
      catch (Exception ex) {
          // Example of who comes first the egg or the hen ;-)
          // Exceptions thrown from Tuple.SetField are not returned.
      }
    }
    return new Tuple(2);
  }
// ***** VDMTOOLS END Name=freadval#1|String


// ***** VDMTOOLS START Name=post_freadval#2|String|Tuple KEEP=YES
  public Boolean post_freadval (final String f, final Tuple RESULT) throws CGException
  {
    if (RESULT.Length() != 2)
      UTIL.RunTime("Pattern match did not succeed in value definition");
    Boolean b = (Boolean) RESULT.GetField(1);
    Object t = RESULT.GetField(2);
    if (!b.booleanValue())
      return new Boolean(t == null);
    else
      return new Boolean(true);
  }
// ***** VDMTOOLS END Name=post_freadval#2|String|Tuple


// ***** VDMTOOLS START Name=echo#1|String KEEP=YES
  public Boolean echo (final String text) throws CGException {
    try {
      System.out.println(text);
      return new Boolean(true);
    }
    catch (Exception e) {
      this.error = e.getMessage();
      return new Boolean(false);
    }
  }
// ***** VDMTOOLS END Name=echo#1|String


// ***** VDMTOOLS START Name=fecho#3|String|String|Object KEEP=YES
  public Boolean fecho (final String filename, final String text, final Object fdir) throws CGException
  {
    try {
      FileWriter fw = new FileWriter(filename, (fdir instanceof quotes.append));
      fw.write(text);
      fw.flush();
      fw.close();
      return new Boolean(true);
    }
    catch (Exception e) {
      this.error = e.getMessage();
      return new Boolean(false);
    }
  }
// ***** VDMTOOLS END Name=fecho#3|String|String|Object


// ***** VDMTOOLS START Name=pre_fecho#3|String|String|Object KEEP=YES
  public Boolean pre_fecho (final String filename, final String text, final Object fdir) throws CGException
  {
    if (filename.equals(""))
      return new Boolean(fdir == null);
    else
      return new Boolean(fdir != null);
  }
// ***** VDMTOOLS END Name=pre_fecho#3|String|String|Object


// ***** VDMTOOLS START Name=ferror KEEP=YES
  public String ferror () throws CGException {
    String str = error;
    this.error = "";
    return str;
  }
// ***** VDMTOOLS END Name=ferror

}
;
