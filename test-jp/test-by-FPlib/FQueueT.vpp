\subsection{FQueueT}
FQueueのテストを行う。

\begin{vdm_al}
--$Id $
class FQueueT
functions
static public run : () +> bool
run() == 
let	testcases = [ t1()]
in
FTestDriver`run(testcases);
\end{vdm_al}

\subsubsection{Empty, EnQueue, DeQueue, Top, FromList, ToList, IsEmptyを検査する}
\begin{vdm_al}
static t1 : () -> FTestDriver`TestCase
t1() ==
	mk_FTestDriver`TestCase(
	"FQueueT01:\t Empty, EnQueue, DeQueue, Top, FromList, ToList, IsEmptyを検査する",
	let	q0 = FQueue`Empty[int](),
		q1 = FQueue`EnQueue[int](1)(q0),
		q2 = FQueue`EnQueue[int](2)(q1),
		q3 = FQueue`EnQueue[int](3)(q2),
		h1 = FQueue`Top[int](q3),
		q4 = FQueue`DeQueue[int](q3),
		q5 = FQueue`EnQueue[int](4)(q4),
		q6 = FQueue`EnQueue[int](5)(q5),
		q7 = FQueue`DeQueue[int](q6),
		q8 = FQueue`DeQueue[int](q7),
		q9 = FQueue`DeQueue[int](q8),
		q10 = FQueue`DeQueue[int](q9),
		h2 = FQueue`Top[int](q10),
		q11 = FQueue`DeQueue[int](q10),
		q12 = FQueue`FromList[char]("Sahara Shin")(FQueue`Empty[char]())
	in
	FQueue`IsEmpty[int](q0) and q0 = mk_([], []) and
	FQueue`ToList[int](q1) = [1] and q1 = mk_([], [1]) and
	FQueue`ToList[int](q2) = [1,2] and q2 = mk_([], [2,1]) and
	FQueue`ToList[int](q3) = [1,2,3] and q3 = mk_([], [3,2,1]) and
	h1 = 1 and
	FQueue`ToList[int](q4) = [2,3] and q4 = mk_([2,3], []) and
	FQueue`ToList[int](q5) = [2,3,4] and q5 = mk_([2,3], [4]) and
	FQueue`ToList[int](q6) = [2,3,4,5] and q6 = mk_([2,3], [5, 4]) and
	FQueue`ToList[int](q7) = [3,4,5] and q7 = mk_([3], [5, 4]) and
	FQueue`ToList[int](q8) = [4,5] and q8 = mk_([], [5, 4]) and
	FQueue`ToList[int](q9) = [5] and q9 = mk_([5], []) and
	FQueue`ToList[int](q10) = [] and FQueue`IsEmpty[int](q10) and q10 = mk_([], []) and
	h2 = nil and
	q11 = nil and
	FQueue`ToList[char](q12) = "Sahara Shin" and q12 = mk_([], "nihS arahaS"))
	;
		
end FQueueT
\end{vdm_al}