--$Header: /home/vdmtools/cvsroot/toolbox/test-jp/test-by-SSlib/Library.vpp,v 1.1 2005/11/25 07:05:38 vdmtools Exp $
class 図書館クラス
--責任
--システムに関するリソース（人と本）の管理を行う主体であり、運用ルールも持つ。
--図書館クラスは、図書館のインスタンスを生成・管理するとともに、利用者・本・司書・著者・分野の各クラスのインスタンスの生成・管理を行う。

instance variables
	最大貸出数 : nat1 := 3;
	public 蔵書 : set of 本実体クラス := {};
	public 利用者: set of 利用者クラス := {};

operations

public 蔵書を追加する : 本実体クラス * 職員クラス ==> 図書館クラス
蔵書を追加する(ある本実体, 操作者) ==
	(
	蔵書 := 蔵書 union {ある本実体};
	return self
	)
pre
	操作者.職員() and
	ある本実体 not in set 蔵書
post
	ある本実体 in set 蔵書;

public 利用者を追加する : 利用者クラス * 職員クラス ==> 図書館クラス
利用者を追加する(ある利用者, 操作者) ==
	(
	利用者 := 利用者 union {ある利用者};
	return self
	)
pre
	操作者.職員() and
	ある利用者 not in set 利用者
post
	ある利用者 in set 利用者;

public 本を検索する : (著者クラス | 分野クラス) ==> set of 本クラス
本を検索する(検索キー) ==
	return {ある蔵書.本 | ある蔵書 in set 蔵書 &
		if isofclass(著者クラス,検索キー) then
			ある蔵書.本.著者 = 検索キー
		else
			検索キー in set ある蔵書.本.分野集合};

public 貸出可能: nat ==> bool
貸出可能(貸出冊数) == return 貸出冊数 < 最大貸出数;

public 最後の利用者 : 本実体クラス * 利用者クラス ==> [利用者クラス]
最後の利用者(ある本実体, 操作者) ==
	return ある本実体.借用者を得る()
pre
	操作者.職員() and
	ある本実体 in set 蔵書;

--インスタンス作成。
public 本を作成する : seq of char * 著者クラス * set of 分野クラス ==> 本クラス
本を作成する(ある題名, ある著者, ある分野集合) ==
	(
	dcl 本 : 本クラス := new 本クラス();
	本.初期化する(ある題名, ある著者, ある分野集合);
	return 本
	);

public 本実体を作成する : seq of char * 本クラス ==> 本実体クラス
本実体を作成する(あるID, ある本) ==
	(
	dcl 本実体 : 本実体クラス := new 本実体クラス();
	本実体.初期化する(あるID, ある本);
	return 本実体
	);

public 分野を作成する : seq of char ==> 分野クラス
分野を作成する(ある分野名) ==
	(
	dcl 分野 : 分野クラス := new 分野クラス();
	分野.初期化する(ある分野名);
	return 分野
	);

public 著者を作成する : seq of char * seq of char ==> 著者クラス
著者を作成する(ある名前, ある電話番号) ==
	(
	dcl 著者 : 著者クラス := new 著者クラス();
	著者.初期化する(ある名前, ある電話番号);
	return 著者
	);

public 職員を作成する :
	図書館クラス * seq of char * seq of char * seq of char ==> 職員クラス
職員を作成する(ある図書館, あるID, ある名前, ある電話番号) ==
	(
	dcl 職員 : 職員クラス := new 職員クラス();
	職員.IDを設定する(あるID);
	職員.初期化する(ある名前, ある電話番号);
	職員.図書館を設定する(ある図書館);
	return 職員
	);

static public 利用者を作成する :
	図書館クラス * seq of char * seq of char * seq of char ==> 利用者クラス
利用者を作成する(ある図書館, あるID, ある名前, ある電話番号) ==
	(
	dcl 一般利用者 : 一般利用者クラス := new 一般利用者クラス();
	一般利用者.IDを設定する(あるID);
	一般利用者.初期化する(ある名前, ある電話番号);
	一般利用者.図書館を設定する(ある図書館);
	return 一般利用者
	);

end 図書館クラス