-- This file has been automatically updated wrt. VDM++ Lang.Adjust, 1th iteration
public Test : () ==> seq of ( int | bool | nat | set of int | set of nat | set of nat1 )  
Test () ==

return [
         { a rem b | a in set { 3, -5, 6}, b in set { -3, 6, 1, 9 } },
         ( if is_bool(if op(5) <> 5 then true else 6)
           then let a in set {"hello world",34} in a
           else 3 ) rem cases mk_(3, 6) :
                         mk_(a, b) -> b div a,
                         others -> 3
                        end,
         10 rem op(4),     
         op(10) rem -7,    
         op(-8) rem op(6), 
         10 rem -7,
         7 rem -4,

         { a div b | a in set { 3, 5, 33}, b in set { 3, 6, 1, 9 } },
         ( if is_nat1( 1.3)
           then let a in set {{ 2 |-> 3},34} in a
           else 56 ) div 5,
         10 div op(4),     
         op(13) div 7, 
         op(15) div op(5), 
         -7 div 4,
         op(-7) div op(-4),
         13 div op(-7),
                
         3 < 7,
         7 < 6.6,
         3.2 < 6,
         1.7 < 2.6,
         ( if 3<5
           then 3.7
           else let a in set {<QUOTE>, 34} in a ) < let a =3 in a,
         3 < op(3),
         op(3) < 3,
         op(6) < op(7),

         0 <= 6,
         2 <= 1.5,
         3.6 <= 3,
         6.6 <= 9.6,
         ( if 3<7 
           then 6.1
           else let a in set {<ASF>, 34} in a) <= let a = 56 in a,
         3 <= op(3),
         op(3) <= 3,
         op(6) <= op(7),
         
         0 > 6,
         2 > 1.5,
         3.6 > 3,
         6.6 > 9.6,
         ( if 3>7 
           then let a in set {<ASF>, 34} in a
           else 6.1 ) > let a = 145 in a,
         4 > op(3),
         op(5) > 5.1,
         op(6.8) > 6.7,
         
         0 >= 6,
         2 >= 1.5,
         3.6 >= 3.6,
         6.6 >= 9.6,
         ( if 3>=7 
           then let a in set {<ASF>, 34} in a
           else 6.1 ) > let a = 34.6 in a,

         
         { a mod b | a in set { 3, 5, 6}, b in set { 3, 6, 1, 9 } },
         ( if 3<7
           then 3
           else let a in set {false,34} in a ) mod ( if 3>7
                              then let a in set {true, 36} in a
                              else 8  ),
         3 mod op(2),        
         op(13) mod 7,        
         op(3) mod op(2),
        
         3 > if true
             then 1
             else let a in set {'a', 34} in a ]

functions

op: real -> real
op(r) ==
 r
