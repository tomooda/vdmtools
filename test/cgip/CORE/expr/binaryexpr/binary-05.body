-- This file has been automatically updated wrt. VDM++ Lang.Adjust, 1th iteration
public Test : () ==> seq of (  
                           seq of ( nat | bool | <FALSE>) |
                           seq of ( <HELLO> | <OK> ) |
                           seq of ( nat | set of nat | set of nat *  bool  | seq of char ) |
                           seq of ( set of nat | bool | <FALSE> ) 
                           ) 
Test () ==

return
[ (if 1=1 then [ 3, 4, true ] else let a in set {1,[3]} in a) ^ [ false, true, 1 ],
  if 1=2 then let a in set {1,[34]} in a else [ ] ^ [ false ],
  [ false ] ^ [ 3, 6 ],
  [ ] ^ [],
  let a = [ <OK>, <HELLO> ]
  in a ^ [ a(i) | i in set inds a ],
  ( if hd [ 3.0 ] = hd [ 2.6]
    then let a in set {{3, false }, [3] } in a
      else [ 3, {3, 6}, mk_( { 3, 6}, false ) ] ) ^ ( if false
                                                      then "Hello World"
                                                    else ["hello world" ] ),
  [ {i} | i in set {1, 3, 6} ] ^ [ <FALSE>, false ],
  let a = [ 3, 6, <FALSE> ],
      b = [ 3, 2, false  ]
  in a ^ b,
  f(15) ^ f(20)
]

functions
f: nat -> nat | seq of nat 
f(n) ==
  if n = 10 then 
    n
  else
    [n]















