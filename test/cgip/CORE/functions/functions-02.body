-- This file has been automatically updated wrt. VDM++ Lang.Adjust, 1th iteration
f1() res: nat
pre true
post false;

g(n1, n2: nat, -: set of nat) res: nat
pre n1 > n2
post n1 + n2 = res;

h([a,b]: seq of nat, mk_(d,c):  nat * nat ) res: nat * nat
pre let q = a + b in q > len [a,b]
post let mk_(i,j) = res in len [a,b] + i + j < a + b;

h2({a,b}: set of nat) res : seq of nat
pre if 10 in set {a,b} then a > b else a <= b
post if 20 in set {a,b} union {res} then res = [20] else res = [30]


operations

  public Test : () ==> seq of (real | bool | (seq of nat) )  
Test () ==
    return 
    [
      pre_f1(),
      post_f1(10),

      g(3,2, {1,2}),
      pre_g(3,3, {}),
      post_g(3,7, {2}, 5),

      let mk_(a,b) = h([45,46], mk_(45,46)) in [a,b],
      pre_h([3,4], mk_(12,45)),
      post_h([3,4], mk_(12,45), mk_(45, 50)),

      h2({23,99}),
      pre_h2({23,99}),
      post_h2({23,99}, [23,99])
    ]

end A
