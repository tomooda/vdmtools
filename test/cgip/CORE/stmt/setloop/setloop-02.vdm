-- This file has been automatically updated wrt. VDM++ Lang.Adjust, 1th iteration
class A

operations




-- This file has been automatically updated wrt. VDM++ Lang.Adjust, 1th iteration

public Test : () ==> seq of seq of ((set of int) | int) 
Test () ==
( dcl res : seq of seq of (int | set of int) := [],
      s : seq of (int | set of int);

  for all mk_R(a,b) in set {mk_R(1,2), mk_R(3,4), mk_R(5,6)} do
    s := [{a,b}];

  res := res ^ [s];
  s := [];

  for all i in set f(5) do
    cases i:
      1,3,5 -> s := s ^ [i],
      others -> s := [i] ^ s
    end;

  res := res ^ [s];
  s := [];

--  The following has been removed as it took approx 75 minutes to evaluate
--  with dynamic type check enabled.!
--  3 Dec. 1999 16:39 -- Jesper K. Pedersen
--  let a = {{i,j} | i,j in set {200,...,205.0} & i <> j} in 
--    for all {a,b} in set a do
--      let s2 = {b,a} in 
--        s := s ^ [s2];
--
--  res := res ^ [s];
--  s := [];

  for all [a,b] in set if f(0) = 0 then {[99,-99], [-12,-45]} else f(20) do
    for i in [a,b] do
      s := s ^ [i];

  res := res ^ [s];
  s := [];

  for all v in set let s2 = g(10) in s2 do
  ( dcl z : set of nat := {v};
    s := s ^ [z] );

  res := res ^ [s];
  s := [];

  for all z in set g(0) do
    s := [];

  res := res ^ [s];
  s := [];

  return res
)

types 
  R :: v1: nat
       v2: char | int

functions 
f: nat -> nat | set of nat
f(n) ==
  if n = 0 then
    n
  else
    {1,...,n};

g: nat -> ((nat | (set of nat)) | (seq of char))
g(n) ==
  cases n:
    300 -> n,
    1 -> "SEQ",
    q -> {1,...,q}
  end
   
end A
