-- This file has been automatically updated wrt. VDM++ Lang.Adjust, 1th iteration
class A

operations




-- This file has been automatically updated wrt. VDM++ Lang.Adjust, 1th iteration

public Test : () ==> map nat to ( nat | bool | seq of char | <HELLO>  )  
Test () ==
( dcl m : map nat to  ( nat | bool | seq of char | <HELLO>  ) := {|->};
  dcl b :bool := true;
  while let a = 0 in card dom m > a do
    let a = { 1 |-> 3}
    in m := a;
    

  while if card dom m > 0
	then card dom m > 1
	else if card dom m = 0
	     then true
	     else let a in set {<HELLO>, true} in a do
    ( dcl m1 : map nat to nat := {|->};
      m := m1 ++ m ++ {2 |-> false}
    );

  while card rng m > 2 do
    m := m ++ { 3 |-> "Hello World" };

  while b do
    while b do
       ( m := m ++ { 4 |-> <HELLO> };
	 b := false );


  while not (5 in set dom m) do
    if 5 in set dom m
    then return {|->}
    else m := m ++ { 5 |-> [] };
  
  return m 
)
   
-- This file has been automatically updated wrt. VDM++ Lang.Adjust, 1th iteration
end A