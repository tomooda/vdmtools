class A

types
  T1 = nat;
  T2 = nat1;
  T3 = bool;
  T4 = int;
  T5 = rat;
  T6 = real;
  T7 = char;
  T8 = <Q>;
  T9 = <A> | <B> | <C> | <D>;
  T10= set of nat;
  T11= set of ( map T1 to T7 );
  T12= seq1 of char;
  T13= seq of ( set of real );
  T14= bool * nat * char;
  T15= bool * T14 * ( nat | char );
  T16= [ nat ];
  T17= char | [int];
  T18= [set of T1];
  
  T19:: nat char (T8|T9);
  T20:: a: nat
        b: char
        c: T10;
  T21:: rec: T19;
  
  T22 = set of T20
  
instance variables
  i : int :=1;

functions

  f1: [T22] -> set of ([ nat | T10 | [T7]])
  f1(t) ==
    if t = {} then
      { nil }
    else
      dunion { { t20.a, t20.c, t20.b} | t20 in set t }

operations

public  Test: () ==> set of (nat | T10 | T7)
  Test() ==
    return f1({ mk_T20(1, 'a', {1}), 
                mk_T20(3, 'r', {1,2,3}),
                mk_T20(1, 'i', {}) } )

end A

class B is subclass of A

end B