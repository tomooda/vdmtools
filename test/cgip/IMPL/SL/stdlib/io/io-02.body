module A
imports from IO all
exports all
definitions
operations

  Test: () ==> seq of (real|seq of char|bool)
  Test () ==
  let fout = "io-02.testout" in
  return [
    IO`fwriteval[seq of char](fout,"Hello World",<start>),
    IO`fecho(fout," 2 + syntax error ",<append>),
    let mk_(b,s) = IO`freadval[seq of char](fout)  in
    if b then s else IO`ferror()
    ]

end A