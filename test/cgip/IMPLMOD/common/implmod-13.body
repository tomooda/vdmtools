dlmodule B  
  exports
    functions
      ExtCos : real -> real

    operations
      ExtSin : real ==> real

    values
      ExtPI : real

    uselib 
      "libmath.so"
end B

module APPROX

  exports 
    all

  definitions
    values
      ExtPI = { [] |-> 3.14159};
      ExtCos = { [0.5] |-> 0.877, [3.14] |-> -1.0 };
      ExtSin = { [0.5] |-> 0.479, [3.14] |-> 0.0, [0.785] |-> 0.707}
 
end APPROX  

module A
  imports
    from 
      APPROX
        all,
   
    from B
      functions
        ExtCos : real -> real

      operations
        ExtSin : real ==> real   
   
     values 
       ExtPI : real

     definitions
       functions

         Test : () -> seq of [real]
         Test () ==  [ Joke(0.5, 3.14)]
 
       operations 
         Joke : real * real  ==> real
         Joke(a,b) ==  if (a <b ) 
                       then B`ExtSin(a)
                       else return B`ExtCos(b)
                      
                      
end A
    
   

