import java.awt.*;
import dk.ifad.toolbox.VDM.*;
import java.util.*;

class PolyLineFrame extends Frame {

  public Sequence PolyLines = new Sequence(); 

  public PolyLineFrame() {
    super("PolyLines");
  }
  
  public void paint(Graphics g){
    try{
      int j = 0;
      for (Enumeration enum = PolyLines.iterator(); enum.hasMoreElements(); ) {
        j++;
        System.out.println("Polyline: " + j);
        PlotSequence.Plot pl = (PlotSequence.Plot) enum.nextElement();
        Sequence xpts = pl.xval;
        Sequence ypts = pl.yval;
        
        int len = ypts.Length();      
        int xpoints[] = new int[len];
        int ypoints[] = new int[len];
        for (int i = 0; i < len; i++)
          {xpoints[i] = ((Number) xpts.Index(i+1)).intValue();
          }
        for (int i = 0; i < len; i++)
          {  ypoints[i] = - ((Number) ypts.Index(i+1)).intValue();
          }
        for (int i = 0; i < len; i++)
          {System.out.print("("+xpoints[i]+",");
          System.out.println(ypoints[i]+")");
          } 
        g.drawPolyline(xpoints,ypoints,len);  
      }
    }
    catch (CGException e){
      System.out.println(e.getMessage());
    }
  }

  public void setPolyLines(Sequence sp){
    for (Enumeration enum = sp.iterator(); enum.hasMoreElements(); ) {
      PolyLines.ImpAppend(enum.nextElement());
      
    }
  }
}




