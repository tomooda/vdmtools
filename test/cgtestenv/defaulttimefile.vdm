module TIMEMAPVAL

exports all

definitions 

values 

tm = {
       mk_( mk_TIMEPARSER`Abs(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`AddEnv(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Addset(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`AllorExists(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Always(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`And(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Appendmap(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Appendseq(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Appendtup(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Apply(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Div(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Equal(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`GreaterThan(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`GreaterThanOrEqual(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Intdiv(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Minus(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Mod(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Mult(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Or(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Plus(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Rem(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`BindList(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`BlockStmt(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Br(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Call(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Cbr(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Exit(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Fieldsel(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Floor(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Guard(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`History(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Iota(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Isexpr(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Isofbaseclass(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Isofclass(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`LambdaExpr(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`LetBeST(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Lookup(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Loop(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`MapInverse(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`MatchPattern(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Newobj(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`NonDet(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Not(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Pattern(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Polyinst(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`RecTrap(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Reccons(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Recmod(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Return(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Samebaseclass(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Sameclass(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Selfexpr(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Seqlen(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Seqmapover(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Setcard(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Setrng(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Start(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Subseq(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Threadid(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Trap(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Tupsel(  ),nil ) |-> 2,
       mk_( mk_TIMEPARSER`Update(  ),nil ) |-> 2
     };

end TIMEMAPVAL
