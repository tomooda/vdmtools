#!/bin/sh

###############
# Definitions #
###############
if [ -n "$BASEDIR" ] ; then
  :
else
  BASEDIR=/home/cg/cgtestenv
fi

export BASEDIR

LATEXFILE=$BASEDIR/latexfile
FSH=`basename $0`
LATEXHEAD=head.tex
LATEXTAIL=tail.tex
LATEXBODY=body.tex
PARSER=-sl
if [ $IFADOSTYPE = win32 ]; then
NICE=
else
NICE=nice
fi
TTYPE=VDM-SL
LATEXPROB=latex.err.tex
VDMSLPROB=vdm.err.tex
BEGINTABLE="\\begin{center} \\begin{tabular}{|l|c|} \\hline Testcase & Page \\\\ \\hline \\hline"
ENDTABLE="\\end{tabular} \\end{center}"
VDMSLTITLE="VDM-SL"
VDMPPTITLE="VDM ++"
VDMSLNUM="19"
VDMPPNUM="20"
REF=n.tmp

echo 0 > $REF

########################
# Usage of the command #
########################
usage()
{
  echo >&2
  echo "Usage: $FSH [-sl | -pp] dir1 dir2 dir3" >&2
  echo >&2
  echo "       Runs test suites in directory dir." >&2
  echo >&2
  echo "       -sl       VDM-SL test suite (default)." >&2
  echo "       -pp       VDM++ test suite." >&2
  echo "       dirn      Your directories" >&2
  echo >&2
  echo "       Example: `basename $0` -sl /home/cg/test/CORE/expr/if/expr" >&2
  echo >&2
  echo "To change root directory of the testenv. set BASEDIR to the directory" >&2
  echo >&2
  exit
}

######################################################################
# Changes the name given in argument when this one has an underscore #
#   (LaTeX doesn't like underscores without '\' before)              #
######################################################################
ch_name()
{
  FILE_NAME=`perl -e '$s = $ARGV[0]; $s =~ s/_/\\\\_/g; print $s ' $1`
}

##########################
# Bad use of the command #
##########################
if test $# -eq 0 ; then
  usage 
fi

##########################################
# Tests on the arguments of the function #
##########################################
while test $# -gt 0 ; do
  case $1 in
    -sl)     VDMSLOPTIONS=,vdmsl-2e
             PPOPTIONS=""
             TITLE=$VDMSLTITLE
             NUM=$VDMSLNUM
             shift;;
    -pp)     PARSER=-pp
             TTYPE=VDM++
             VDMSLOPTIONS=""
             PPOPTIONS=,vpp
             TITLE=$VDMPPTITLE
             NUM=$VDMPPNUM
             shift;;
    -*)      usage
             exit;;
    *)       break;;
  esac
done

rm -rf trace

##############################################
# Generation of the head of the LaTeX Script #
##############################################
echo "Generating the head of the Latex script."
echo "Generating the head of the Latex script." > trace

############
# PREAMBLE #
############
echo "\\documentclass{article}" > $LATEXHEAD
echo "\\usepackage{toolbox,alltt,longtable,color,vdmsl-2e,vpp}" >> $LATEXHEAD
echo "\\usepackage{makeidx}" >> $LATEXHEAD
echo "\\definecolor{covered}{rgb}{0,0,0}  %black" >> $LATEXHEAD
echo "\\definecolor{not_covered}{rgb}{1,0,0} %red" >> $LATEXHEAD

echo "% a4 style" >> $LATEXHEAD
echo "\oddsidemargin -0.4mm \\evensidemargin -0.4mm" >> $LATEXHEAD
echo "\\topmargin -10.4mm \\headheight 5mm \\headsep 8mm" >> $LATEXHEAD
echo "\\textheight 230mm \\textwidth 160mm" >> $LATEXHEAD
echo "\\parindent0mm" >> $LATEXHEAD
echo "\\makeindex" >> $LATEXHEAD

############
# DOCUMENT #
############
echo "\\begin{document}" >> $LATEXHEAD
echo "\\docdef{$TITLE \\LaTeX\\ Test Result}
{Vincent Stephan\\\\ 
 The Institute of Applied Computer Science}
{\\today\\ }
{IFAD-VDM-$NUM}
{}
{Final}
{Confidential}
{\\copyright\\ IFAD 1995}
{\\item[V1.0] First version.
}{This document has been automatically generated by the
      \\LaTeX\\  Pretty Printer  Test Environment. It contains for the directories specified below the
      the specification of each test case. This document refers to the
      following options : \\\\
      \\begin{center}
      \\begin{tabular}{|l|l|}
      \\hline 
      Type & $TTYPE \\\\ \\hline \\hline
      Directories & " >> $LATEXHEAD

##########################################################
# We collect the directories to be included in the table #
##########################################################
for arg in $@ ; do
        if [ $arg = $1 ]; then
                ch_name $arg
                echo " {\\it $FILE_NAME} \\\\" >> $LATEXHEAD
        else 
                if [ $arg != '' ]; then 
                        ch_name $arg
                        echo " &  {\\it $FILE_NAME} \\\\" >> $LATEXHEAD
                        fi
        fi
done

echo "  \\hline  \\end{tabular} \\end{center}" >> $LATEXHEAD


##############################################
# Generation of the body of the LaTeX Script #
##############################################

# First, we delete the old one ...
rm -f $LATEXBODY
rm -f $LATEXPROB
rm -f $VDMSLPROB

#  ... and for each directory specified in the arguments, a section is created in the
#      body of the LaTeX script
while test $# -gt 0 ; do

        ch_name $1
        echo "\\section{Directory {\\it $FILE_NAME}}" >> $LATEXBODY
        echo "***************************************************************************"      
        echo "***************************************************************************" >> trace
        date
        date >> trace
        echo "Starting $TTYPE test suite"
        echo "Starting $TTYPE test suite" >> trace

############################################
#        Nonsense for the moment !!!!
#        if test $# -gt 1 ; then
#                echo "Running test case $2 in directory $1"  
#                echo "Running test case $2 in directory $1" >> trace
#
#        else
############################################

                echo "Running test suite in directory $1"
                echo "Running test suite in directory $1" >> trace

#        fi 

        echo "***************************************************************************"
        echo ""

        # We call the LaTeX'file' for each of the arguments
        find $1 -type f -name \*.head -exec $NICE $LATEXFILE $PARSER -body '{}' \;

        # Bad return of the last command
        if [ $? != 0 ] ; then
                echo "UNEXPECTED RESULT"
                echo "UNEXPECTED RESULT" >> trace
                echo "Latex script not generated"         
                echo "Latex script not generated" >> trace
                echo "\\LaTeX\\ script not generated : directory not found" >> $LATEXBODY
        fi
        
        shift

done


echo "***************************************************************************"
echo "***************************************************************************" >> trace

##############################################
# Generation of the tail of the LaTeX script #
##############################################
echo "Generating the tail of the Latex script."
echo "Generating the tail of the Latex script." >> trace

echo "\\printindex" > $LATEXTAIL
echo "\\end{document}" >> $LATEXTAIL

        echo "\\vspace{0.5cm}" >> $LATEXHEAD
        if test -s $LATEXPROB ; then
                echo "Some errors occured during the \\LaTeX\\ parsing of the following test-cases:\\\\" >> $LATEXHEAD
                echo $BEGINTABLE >> $LATEXHEAD
                cat $LATEXPROB >> $LATEXHEAD
                echo $ENDTABLE >> $LATEXHEAD
        fi

        echo "\\vspace{0.5cm}" >> $LATEXHEAD
        if test -s $VDMSLPROB ; then
                echo "Some syntax errors has been found on the following test-cases:\\\\" >> $LATEXHEAD
                echo $BEGINTABLE >> $LATEXHEAD
                cat $VDMSLPROB >> $LATEXHEAD
                echo $ENDTABLE >> $LATEXHEAD
        fi

        echo "}\\newpage \\tableofcontents \\newpage" >> $LATEXHEAD

cat $LATEXHEAD $LATEXBODY $LATEXTAIL > result.tex

echo "Latex script generated"
echo "Latex script generated" >> trace

date
date >> trace


rm -f $LATEXHEAD
rm -f $LATEXBODY
rm -f $LATEXTAIL
rm -f temp
rm -f m4*
rm -f ires
rm -f $REF

