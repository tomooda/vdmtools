-- This file has been automatically updated wrt. VDM++ Lang.Adjust, 1th iteration
class A

operations




-- This file has been automatically updated wrt. VDM++ Lang.Adjust, 1th iteration
public Test : () ==> seq of (set of ( seq of char | 
				 map seq of char to (nat * nat)|
                                 set of nat) | 
			nat | seq of char | map nat to nat | bool |
			seq of nat | nat * nat | set of (nat | nat * nat))  
Test () ==
return 
[
  { cases elem :
      ( 3 ) ->  "MatchVal",
      { a, b, 3 } -> {"SetEnum" |-> mk_(a, b) },
      { } -> "SetEnum",
      [ a, a, b ] -> {"SeqEnum" |-> mk_(a, b ) },
      [ a, b ] -> { "SeqEnum" |-> mk_(a, b ) },
      [ ] ->  "SeqEnum" ,
      mk_(a, b ) -> { "Tuple" |-> mk_(a,b ) },
      mk_(a, a, b ) -> { "Tuple" |-> mk_(a, b) },
      mk_AA(a, b ) -> {"Record" |-> mk_(a, b ) },
      others -> "Others"
    end | elem in set { 3, { 4, 5 }, {}, [ 1, 1, 6],
		        [ 1, 1 ], [], mk_(7, 8), mk_(9, 9, 10 ), { 13 |-> 14},
		       mk_AA(11, 12 ), nil } },

  cases let a = [ 3, 6, 1 ] in a:
	[ a, 7, c ] -> let d = 3
		       in d = a + c,
        [ a, 6, d ] -> if is_nat(a) and is_int(d)
		       then "Hello Easter"
		       else false,
        others      -> "Others"
  end,

  cases if 3 in set { 3, 6}
	then { 3, 6}
	else [ 3 ]:
     { a, b } -> { a, b },
     [ a ]    -> [ a, 3],
     others -> "Others" 
  end,

-- new August 03 1995

  { cases elem :
        {1}, {2}, {3}, {4} -> {1,2},
        {6}, {7} -> {1,3},
        others -> {1,5}
  end | elem in set {{1}}},
        
-- new August 03 1995

  cases { 3 |-> 4 }:
      a -> a,
      others -> "Others" 
  end,

  cases [ mk_AA(3, 6), 3, mk_(3, 6) ](1):
     mk_AA(a, b ) -> mk_(b, a),
     others -> "Others"
  end,

  let a = mk_AA(29, 35) in
    cases a:
       mk_AA(a,b) -> a,
       b -> b.a
    end,

  { cases elem :
       mk_(a, b ),
       [ a, b ],
       [ a ] ->  a,
       { a, b } -> if a < b then mk_(a,b) else mk_(b,a), -- the order of field in the tuple m.b. deterministic
                                                         -- to be able to compere expected results!
       mk_((-3),a,b ) -> mk_(a,b),
       (23) -> 23,
       others -> "Others" 
    end | elem in set { mk_(33, 33), [34], [35, 36], {37, 38},
			mk_(-3, 39, 40), 23 } }
     
]


types 

  AA :: 
   a : nat
   b : nat

-- This file has been automatically updated wrt. VDM++ Lang.Adjust, 1th iteration
end A