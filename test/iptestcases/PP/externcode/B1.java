//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Thu 12-Oct-2000 by the VDM++ JAVA Code Generator
//
// Supported compilers:
// jdk1.2
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO

// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
// ***** VDMTOOLS END Name=package


// ***** VDMTOOLS START Name=imports KEEP=NO

import jp.vdmtools.VDM.*;
import java.util.*;
// ***** VDMTOOLS END Name=imports



public class B1 implements EvaluatePP {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=sentinel KEEP=NO
  volatile Sentinel sentinel;
// ***** VDMTOOLS END Name=sentinel


// ***** VDMTOOLS START Name=B1Sentinel KEEP=NO
  class B1Sentinel extends Sentinel {

    public final int op1 = 0;

    public final int nr_functions = 1;


    public B1Sentinel () throws CGException{}


    public B1Sentinel (EvaluatePP instance) throws CGException{
      init(nr_functions, instance);
    }

  }
// ***** VDMTOOLS END Name=B1Sentinel
;

// ***** VDMTOOLS START Name=evaluatePP KEEP=NO
  public Boolean evaluatePP (int fnr) throws CGException{
    return new Boolean(true);
  }
// ***** VDMTOOLS END Name=evaluatePP


// ***** VDMTOOLS START Name=setSentinel KEEP=NO
  public void setSentinel () {
    try{
      sentinel = new B1Sentinel(this);
    }
    catch (CGException e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=setSentinel


// ***** VDMTOOLS START Name=B1 KEEP=NO
  public B1 () {
    try{
      setSentinel();
    }
    catch (Throwable e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=B1


// ***** VDMTOOLS START Name=op1 KEEP=YES
  public void op1 () throws CGException{
    sentinel.entering(((B1Sentinel) sentinel).op1);
    try{
      System.out.println("B1.op1");
    }
    finally {
      sentinel.leaving(((B1Sentinel) sentinel).op1);
    }
  }
// ***** VDMTOOLS END Name=op1

}
;
