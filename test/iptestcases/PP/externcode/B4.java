//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Thu 12-Oct-2000 by the VDM++ JAVA Code Generator
//
// Supported compilers:
// jdk1.2
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO

// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
// ***** VDMTOOLS END Name=package


// ***** VDMTOOLS START Name=imports KEEP=NO

import jp.vdmtools.VDM.*;
import java.util.*;
// ***** VDMTOOLS END Name=imports



public class B4 implements EvaluatePP {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=sentinel KEEP=NO
  volatile Sentinel sentinel;
// ***** VDMTOOLS END Name=sentinel


// ***** VDMTOOLS START Name=B4Sentinel KEEP=NO
  class B4Sentinel extends Sentinel {

    public final int nr_functions = 0;


    public B4Sentinel () throws CGException{}


    public B4Sentinel (EvaluatePP instance) throws CGException{
      init(nr_functions, instance);
    }

  }
// ***** VDMTOOLS END Name=B4Sentinel
;

// ***** VDMTOOLS START Name=evaluatePP KEEP=NO
  public Boolean evaluatePP (int fnr) throws CGException{
    return new Boolean(true);
  }
// ***** VDMTOOLS END Name=evaluatePP


// ***** VDMTOOLS START Name=setSentinel KEEP=NO
  public void setSentinel () {
    try{
      sentinel = new B4Sentinel(this);
    }
    catch (CGException e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=setSentinel


// ***** VDMTOOLS START Name=B4 KEEP=NO
  public B4 () {
    try{
      setSentinel();
    }
    catch (Throwable e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=B4


// ***** VDMTOOLS START Name=f#1|Integer KEEP=YES
  public Integer f (final Integer n) throws CGException{
    System.out.println("argument is " + n);
    return new Integer(n.intValue() + new Integer(1).intValue());
  }
// ***** VDMTOOLS END Name=f#1|Integer

// ***** VDMTOOLS START Name=f#1|Long KEEP=YES
  public Long f (final Long n) throws CGException{
    System.out.println("argument is " + n);
    return new Long(n.longValue() + new Long(1).longValue());
  }
// ***** VDMTOOLS END Name=f#1|Long

}
;
