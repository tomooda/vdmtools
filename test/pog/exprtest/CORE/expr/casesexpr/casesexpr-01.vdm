class CasesExprTest
	functions

  f : () -> inmap rat to nat
  f() ==
    {2 |-> 5}
  pre true
--  post true

types

  A :: a: int
       b: bool

values

  v1 : A = mk_A(1,true);
  n : real = 88



------------------------------ Actual Test data ------------------------------
functions

TestF: () +> nat | bool
TestF() ==
  cases 6 -9:
    9 -> 8,
    others -> true
  end

------------------------------------------------------------------------------
end CasesExprTest
