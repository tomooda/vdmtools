
class A

functions
meas[@A,@B] : map @A to @B -> nat
meas(a) == card dom a;

foo[@A,@B] : map @A to @B -> nat
foo(b) == 
  cases dom b:
  {}    -> 0,
  others -> let x in set dom b in 1 + foo[@A,@B]({x} <-: b)
  end
measure meas;

end A


