system Simple

instance variables
  static public b : B := new B();
  -- define the first CPU with fixed priority scheduling and 22E6 MIPS
  CPU1 : CPU := new CPU (<FP>, 22E6);

  static public c : C := new C();
  -- define the second CPU with fixed priority scheduling and 11E6 MIPS
  CPU2 : CPU := new CPU (<FP>, 11E6);

  -- create a communication bus that links the three CPU's together
  BUS1 : BUS := new BUS (<CSMACD>, 72E3, {CPU1, CPU2})

operations
  public Simple: () ==> Simple
  Simple () ==
    ( -- deploy b on CPU1
      CPU1.deploy(b,"BT");
      -- deploy c on CPU2
      CPU2.deploy(c,"CT");
    );

end Simple
class B

operations

  public TestB: nat * nat * A ==> nat
  TestB (arg,val, a) ==
    cases val:
     1 -> return a.d.OpD(8) + arg,
     2 -> return a.e.OpE(77) + arg
    end;

end B
class C


operations

  async
  public TestC: nat * B ==> ()
  TestC (argc, b) ==
   skip;

end C

class D

operations

 public OpD : nat ==> nat
 OpD(n) == return n+1;

end D

class E

operations

 public OpE : nat ==> nat
 OpE(n) == return n+18;

end E
class A

instance variables

  public d : D := new D();
  public e : E := new E();

operations
  public Test: () ==> nat
  Test () ==
    (Simple`c.TestC(99,Simple`b);
     return 67 + Simple`b.TestB(1,1,self) +
            Simple`b.TestB(199,2,self) + 888);

end A
