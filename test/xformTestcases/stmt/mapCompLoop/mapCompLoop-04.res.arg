"class A

types

R :: m : map nat to [nat];

values 

g : map nat to [nat] = { l |-> nil | l in set {0, ..., 12} }

functions

f : nat -> nat
f(x) == x + 1;

operations

public Test : () ==> nat
Test() ==
( dcl i : int := 0,
      j : nat := 1;	
	g := g ++ { i |-> f(i) | i in set {0, ..., 12 - 1} & i mod 2 = 0 };
	return j);

end A
"
